node {
  name: "conv2d_input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 1
        }
        dim {
          size: 120
        }
        dim {
          size: 120
        }
      }
    }
  }
}
node {
  name: "conv2d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.14213381707668304
      }
    }
  }
}
node {
  name: "conv2d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14213381707668304
      }
    }
  }
}
node {
  name: "conv2d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d/kernel/Initializer/random_uniform/max"
  input: "conv2d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
}
node {
  name: "conv2d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
}
node {
  name: "conv2d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d/kernel/Initializer/random_uniform/mul"
  input: "conv2d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
}
node {
  name: "conv2d/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d/kernel"
    }
  }
}
node {
  name: "conv2d/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d/kernel"
}
node {
  name: "conv2d/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d/kernel"
  input: "conv2d/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d/bias"
    }
  }
}
node {
  name: "conv2d/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d/bias"
}
node {
  name: "conv2d/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d/bias"
  input: "conv2d/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d/Conv2D"
  op: "Conv2D"
  input: "conv2d_input"
  input: "conv2d/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d/BiasAdd"
  op: "BiasAdd"
  input: "conv2d/Conv2D"
  input: "conv2d/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "activation/activation/Identity"
  op: "Identity"
  input: "conv2d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10206207633018494
      }
    }
  }
}
node {
  name: "conv2d_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10206207633018494
      }
    }
  }
}
node {
  name: "conv2d_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_1/kernel/Initializer/random_uniform/max"
  input: "conv2d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
}
node {
  name: "conv2d_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
}
node {
  name: "conv2d_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_1/kernel/Initializer/random_uniform/mul"
  input: "conv2d_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
}
node {
  name: "conv2d_1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_1/kernel"
    }
  }
}
node {
  name: "conv2d_1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_1/kernel"
}
node {
  name: "conv2d_1/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_1/kernel"
  input: "conv2d_1/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_1/bias"
    }
  }
}
node {
  name: "conv2d_1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_1/bias"
}
node {
  name: "conv2d_1/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_1/bias"
  input: "conv2d_1/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_1/Conv2D"
  op: "Conv2D"
  input: "activation/activation/Identity"
  input: "conv2d_1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_1/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_1/Conv2D"
  input: "conv2d_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "max_pooling2d/MaxPool"
  op: "MaxPool"
  input: "conv2d_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
}
node {
  name: "keras_learning_phase/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "keras_learning_phase"
  op: "PlaceholderWithDefault"
  input: "keras_learning_phase/input"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "dropout/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout/cond/switch_t"
  op: "Identity"
  input: "dropout/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout/cond/switch_f"
  op: "Identity"
  input: "dropout/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout/cond/dropout/rate"
  op: "Const"
  input: "^dropout/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "dropout/cond/dropout/Shape"
  op: "Shape"
  input: "dropout/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "max_pooling2d/MaxPool"
  input: "dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@max_pooling2d/MaxPool"
      }
    }
  }
}
node {
  name: "dropout/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^dropout/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^dropout/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "dropout/cond/dropout/random_uniform/max"
  input: "dropout/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "dropout/cond/dropout/random_uniform/RandomUniform"
  input: "dropout/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/cond/dropout/random_uniform"
  op: "Add"
  input: "dropout/cond/dropout/random_uniform/mul"
  input: "dropout/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/cond/dropout/sub/x"
  op: "Const"
  input: "^dropout/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout/cond/dropout/sub"
  op: "Sub"
  input: "dropout/cond/dropout/sub/x"
  input: "dropout/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/cond/dropout/truediv/x"
  op: "Const"
  input: "^dropout/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout/cond/dropout/truediv"
  op: "RealDiv"
  input: "dropout/cond/dropout/truediv/x"
  input: "dropout/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "dropout/cond/dropout/random_uniform"
  input: "dropout/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/cond/dropout/mul"
  op: "Mul"
  input: "dropout/cond/dropout/Shape/Switch:1"
  input: "dropout/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/cond/dropout/Cast"
  op: "Cast"
  input: "dropout/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "dropout/cond/dropout/mul_1"
  op: "Mul"
  input: "dropout/cond/dropout/mul"
  input: "dropout/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/cond/Identity"
  op: "Identity"
  input: "dropout/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/cond/Identity/Switch"
  op: "Switch"
  input: "max_pooling2d/MaxPool"
  input: "dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@max_pooling2d/MaxPool"
      }
    }
  }
}
node {
  name: "dropout/cond/Merge"
  op: "Merge"
  input: "dropout/cond/Identity"
  input: "dropout/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0833333358168602
      }
    }
  }
}
node {
  name: "conv2d_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0833333358168602
      }
    }
  }
}
node {
  name: "conv2d_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_2/kernel/Initializer/random_uniform/max"
  input: "conv2d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
}
node {
  name: "conv2d_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
}
node {
  name: "conv2d_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_2/kernel/Initializer/random_uniform/mul"
  input: "conv2d_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
}
node {
  name: "conv2d_2/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_2/kernel"
    }
  }
}
node {
  name: "conv2d_2/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_2/kernel"
}
node {
  name: "conv2d_2/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_2/kernel"
  input: "conv2d_2/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_2/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_2/bias"
    }
  }
}
node {
  name: "conv2d_2/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_2/bias"
}
node {
  name: "conv2d_2/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_2/bias"
  input: "conv2d_2/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_2/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_2/Conv2D"
  op: "Conv2D"
  input: "dropout/cond/Merge"
  input: "conv2d_2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_2/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_2/Conv2D"
  input: "conv2d_2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "activation_1/activation_1/Identity"
  op: "Identity"
  input: "conv2d_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_3/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_3/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07216878235340118
      }
    }
  }
}
node {
  name: "conv2d_3/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07216878235340118
      }
    }
  }
}
node {
  name: "conv2d_3/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_3/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_3/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_3/kernel/Initializer/random_uniform/max"
  input: "conv2d_3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
}
node {
  name: "conv2d_3/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_3/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_3/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
}
node {
  name: "conv2d_3/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_3/kernel/Initializer/random_uniform/mul"
  input: "conv2d_3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
}
node {
  name: "conv2d_3/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_3/kernel"
    }
  }
}
node {
  name: "conv2d_3/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_3/kernel"
}
node {
  name: "conv2d_3/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_3/kernel"
  input: "conv2d_3/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_3/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_3/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_3/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_3/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_3/bias"
    }
  }
}
node {
  name: "conv2d_3/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_3/bias"
}
node {
  name: "conv2d_3/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_3/bias"
  input: "conv2d_3/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_3/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_3/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_3/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_3/Conv2D"
  op: "Conv2D"
  input: "activation_1/activation_1/Identity"
  input: "conv2d_3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_3/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_3/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_3/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_3/Conv2D"
  input: "conv2d_3/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "max_pooling2d_1/MaxPool"
  op: "MaxPool"
  input: "conv2d_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
}
node {
  name: "dropout_1/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_1/cond/switch_t"
  op: "Identity"
  input: "dropout_1/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_1/cond/switch_f"
  op: "Identity"
  input: "dropout_1/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_1/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_1/cond/dropout/rate"
  op: "Const"
  input: "^dropout_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/Shape"
  op: "Shape"
  input: "dropout_1/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout_1/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "max_pooling2d_1/MaxPool"
  input: "dropout_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@max_pooling2d_1/MaxPool"
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^dropout_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^dropout_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout_1/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout_1/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "dropout_1/cond/dropout/random_uniform/max"
  input: "dropout_1/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "dropout_1/cond/dropout/random_uniform/RandomUniform"
  input: "dropout_1/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/cond/dropout/random_uniform"
  op: "Add"
  input: "dropout_1/cond/dropout/random_uniform/mul"
  input: "dropout_1/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/cond/dropout/sub/x"
  op: "Const"
  input: "^dropout_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/sub"
  op: "Sub"
  input: "dropout_1/cond/dropout/sub/x"
  input: "dropout_1/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/cond/dropout/truediv/x"
  op: "Const"
  input: "^dropout_1/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_1/cond/dropout/truediv"
  op: "RealDiv"
  input: "dropout_1/cond/dropout/truediv/x"
  input: "dropout_1/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "dropout_1/cond/dropout/random_uniform"
  input: "dropout_1/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/cond/dropout/mul"
  op: "Mul"
  input: "dropout_1/cond/dropout/Shape/Switch:1"
  input: "dropout_1/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/cond/dropout/Cast"
  op: "Cast"
  input: "dropout_1/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "dropout_1/cond/dropout/mul_1"
  op: "Mul"
  input: "dropout_1/cond/dropout/mul"
  input: "dropout_1/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/cond/Identity"
  op: "Identity"
  input: "dropout_1/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/cond/Identity/Switch"
  op: "Switch"
  input: "max_pooling2d_1/MaxPool"
  input: "dropout_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@max_pooling2d_1/MaxPool"
      }
    }
  }
}
node {
  name: "dropout_1/cond/Merge"
  op: "Merge"
  input: "dropout_1/cond/Identity"
  input: "dropout_1/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_4/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_4/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0589255653321743
      }
    }
  }
}
node {
  name: "conv2d_4/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "conv2d_4/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_4/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_4/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_4/kernel/Initializer/random_uniform/max"
  input: "conv2d_4/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
}
node {
  name: "conv2d_4/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_4/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_4/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
}
node {
  name: "conv2d_4/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_4/kernel/Initializer/random_uniform/mul"
  input: "conv2d_4/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
}
node {
  name: "conv2d_4/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_4/kernel"
    }
  }
}
node {
  name: "conv2d_4/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_4/kernel"
}
node {
  name: "conv2d_4/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_4/kernel"
  input: "conv2d_4/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_4/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_4/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_4/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_4/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_4/bias"
    }
  }
}
node {
  name: "conv2d_4/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_4/bias"
}
node {
  name: "conv2d_4/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_4/bias"
  input: "conv2d_4/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_4/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_4/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_4/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_4/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_4/Conv2D"
  op: "Conv2D"
  input: "dropout_1/cond/Merge"
  input: "conv2d_4/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_4/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_4/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_4/Conv2D"
  input: "conv2d_4/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "activation_2/activation_2/Identity"
  op: "Identity"
  input: "conv2d_4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_5/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_5/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05103103816509247
      }
    }
  }
}
node {
  name: "conv2d_5/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05103103816509247
      }
    }
  }
}
node {
  name: "conv2d_5/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_5/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_5/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_5/kernel/Initializer/random_uniform/max"
  input: "conv2d_5/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
}
node {
  name: "conv2d_5/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_5/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_5/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
}
node {
  name: "conv2d_5/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_5/kernel/Initializer/random_uniform/mul"
  input: "conv2d_5/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
}
node {
  name: "conv2d_5/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_5/kernel"
    }
  }
}
node {
  name: "conv2d_5/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_5/kernel"
}
node {
  name: "conv2d_5/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_5/kernel"
  input: "conv2d_5/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_5/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_5/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_5/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_5/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_5/bias"
    }
  }
}
node {
  name: "conv2d_5/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_5/bias"
}
node {
  name: "conv2d_5/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_5/bias"
  input: "conv2d_5/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_5/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_5/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_5/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_5/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_5/Conv2D"
  op: "Conv2D"
  input: "activation_2/activation_2/Identity"
  input: "conv2d_5/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_5/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_5/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_5/Conv2D"
  input: "conv2d_5/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "activation_3/activation_3/Identity"
  op: "Identity"
  input: "conv2d_5/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_2/cond/switch_t"
  op: "Identity"
  input: "dropout_2/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_2/cond/switch_f"
  op: "Identity"
  input: "dropout_2/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_2/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_2/cond/dropout/rate"
  op: "Const"
  input: "^dropout_2/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "dropout_2/cond/dropout/Shape"
  op: "Shape"
  input: "dropout_2/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout_2/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "activation_3/activation_3/Identity"
  input: "dropout_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@activation_3/activation_3/Identity"
      }
    }
  }
}
node {
  name: "dropout_2/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^dropout_2/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_2/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^dropout_2/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_2/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout_2/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout_2/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "dropout_2/cond/dropout/random_uniform/max"
  input: "dropout_2/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "dropout_2/cond/dropout/random_uniform/RandomUniform"
  input: "dropout_2/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/cond/dropout/random_uniform"
  op: "Add"
  input: "dropout_2/cond/dropout/random_uniform/mul"
  input: "dropout_2/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/cond/dropout/sub/x"
  op: "Const"
  input: "^dropout_2/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_2/cond/dropout/sub"
  op: "Sub"
  input: "dropout_2/cond/dropout/sub/x"
  input: "dropout_2/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/cond/dropout/truediv/x"
  op: "Const"
  input: "^dropout_2/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_2/cond/dropout/truediv"
  op: "RealDiv"
  input: "dropout_2/cond/dropout/truediv/x"
  input: "dropout_2/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "dropout_2/cond/dropout/random_uniform"
  input: "dropout_2/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/cond/dropout/mul"
  op: "Mul"
  input: "dropout_2/cond/dropout/Shape/Switch:1"
  input: "dropout_2/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/cond/dropout/Cast"
  op: "Cast"
  input: "dropout_2/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "dropout_2/cond/dropout/mul_1"
  op: "Mul"
  input: "dropout_2/cond/dropout/mul"
  input: "dropout_2/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/cond/Identity"
  op: "Identity"
  input: "dropout_2/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/cond/Identity/Switch"
  op: "Switch"
  input: "activation_3/activation_3/Identity"
  input: "dropout_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@activation_3/activation_3/Identity"
      }
    }
  }
}
node {
  name: "dropout_2/cond/Merge"
  op: "Merge"
  input: "dropout_2/cond/Identity"
  input: "dropout_2/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "flatten/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "flatten/transpose"
  op: "Transpose"
  input: "dropout_2/cond/Merge"
  input: "flatten/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "flatten/Shape"
  op: "Shape"
  input: "flatten/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "flatten/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "flatten/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "flatten/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "flatten/strided_slice"
  op: "StridedSlice"
  input: "flatten/Shape"
  input: "flatten/strided_slice/stack"
  input: "flatten/strided_slice/stack_1"
  input: "flatten/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "flatten/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "flatten/Reshape/shape"
  op: "Pack"
  input: "flatten/strided_slice"
  input: "flatten/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "flatten/Reshape"
  op: "Reshape"
  input: "flatten/transpose"
  input: "flatten/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000R\001\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.00832668598741293
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00832668598741293
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dense/kernel/Initializer/random_uniform/max"
  input: "dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "dense/kernel/Initializer/random_uniform/mul"
  input: "dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
}
node {
  name: "dense/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 86528
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense/kernel"
    }
  }
}
node {
  name: "dense/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense/kernel"
}
node {
  name: "dense/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense/kernel"
  input: "dense/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense/bias"
    }
  }
}
node {
  name: "dense/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense/bias"
}
node {
  name: "dense/bias/Assign"
  op: "AssignVariableOp"
  input: "dense/bias"
  input: "dense/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/MatMul"
  op: "MatMul"
  input: "flatten/Reshape"
  input: "dense/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense/BiasAdd"
  op: "BiasAdd"
  input: "dense/MatMul"
  input: "dense/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dropout_3/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_3/cond/switch_t"
  op: "Identity"
  input: "dropout_3/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_3/cond/switch_f"
  op: "Identity"
  input: "dropout_3/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_3/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_3/cond/dropout/rate"
  op: "Const"
  input: "^dropout_3/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "dropout_3/cond/dropout/Shape"
  op: "Shape"
  input: "dropout_3/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout_3/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "dense/BiasAdd"
  input: "dropout_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/BiasAdd"
      }
    }
  }
}
node {
  name: "dropout_3/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^dropout_3/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_3/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^dropout_3/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_3/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout_3/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout_3/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "dropout_3/cond/dropout/random_uniform/max"
  input: "dropout_3/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "dropout_3/cond/dropout/random_uniform/RandomUniform"
  input: "dropout_3/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/cond/dropout/random_uniform"
  op: "Add"
  input: "dropout_3/cond/dropout/random_uniform/mul"
  input: "dropout_3/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/cond/dropout/sub/x"
  op: "Const"
  input: "^dropout_3/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_3/cond/dropout/sub"
  op: "Sub"
  input: "dropout_3/cond/dropout/sub/x"
  input: "dropout_3/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/cond/dropout/truediv/x"
  op: "Const"
  input: "^dropout_3/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_3/cond/dropout/truediv"
  op: "RealDiv"
  input: "dropout_3/cond/dropout/truediv/x"
  input: "dropout_3/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "dropout_3/cond/dropout/random_uniform"
  input: "dropout_3/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/cond/dropout/mul"
  op: "Mul"
  input: "dropout_3/cond/dropout/Shape/Switch:1"
  input: "dropout_3/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/cond/dropout/Cast"
  op: "Cast"
  input: "dropout_3/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "dropout_3/cond/dropout/mul_1"
  op: "Mul"
  input: "dropout_3/cond/dropout/mul"
  input: "dropout_3/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/cond/Identity"
  op: "Identity"
  input: "dropout_3/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/cond/Identity/Switch"
  op: "Switch"
  input: "dense/BiasAdd"
  input: "dropout_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/BiasAdd"
      }
    }
  }
}
node {
  name: "dropout_3/cond/Merge"
  op: "Merge"
  input: "dropout_3/cond/Identity"
  input: "dropout_3/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_4/activation_4/Identity"
  op: "Identity"
  input: "dropout_3/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\n\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.7071067690849304
      }
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.7071067690849304
      }
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dense_1/kernel/Initializer/random_uniform/max"
  input: "dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dense_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "dense_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
}
node {
  name: "dense_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "dense_1/kernel/Initializer/random_uniform/mul"
  input: "dense_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
}
node {
  name: "dense_1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_1/kernel"
    }
  }
}
node {
  name: "dense_1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel"
}
node {
  name: "dense_1/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense_1/kernel"
  input: "dense_1/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_1/bias"
    }
  }
}
node {
  name: "dense_1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_1/bias"
}
node {
  name: "dense_1/bias/Assign"
  op: "AssignVariableOp"
  input: "dense_1/bias"
  input: "dense_1/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/MatMul"
  op: "MatMul"
  input: "activation_4/activation_4/Identity"
  input: "dense_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_1/BiasAdd"
  op: "BiasAdd"
  input: "dense_1/MatMul"
  input: "dense_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "activation_5/Softmax"
  op: "Softmax"
  input: "dense_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_5_target"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "total"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "total"
    }
  }
}
node {
  name: "total/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "total"
}
node {
  name: "total/Assign"
  op: "AssignVariableOp"
  input: "total"
  input: "total/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "total/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "count"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "count"
    }
  }
}
node {
  name: "count/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "count"
}
node {
  name: "count/Assign"
  op: "AssignVariableOp"
  input: "count"
  input: "count/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/ArgMax/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics/acc/ArgMax"
  op: "ArgMax"
  input: "activation_5_target"
  input: "metrics/acc/ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics/acc/ArgMax_1/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics/acc/ArgMax_1"
  op: "ArgMax"
  input: "activation_5/Softmax"
  input: "metrics/acc/ArgMax_1/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics/acc/Equal"
  op: "Equal"
  input: "metrics/acc/ArgMax"
  input: "metrics/acc/ArgMax_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics/acc/Cast"
  op: "Cast"
  input: "metrics/acc/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/acc/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics/acc/Sum"
  op: "Sum"
  input: "metrics/acc/Cast"
  input: "metrics/acc/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/acc/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "total"
  input: "metrics/acc/Sum"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total"
  input: "^metrics/acc/AssignAddVariableOp"
  input: "^metrics/acc/Sum"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/Size"
  op: "Size"
  input: "metrics/acc/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "metrics/acc/Cast_1"
  op: "Cast"
  input: "metrics/acc/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/acc/AssignAddVariableOp_1"
  op: "AssignAddVariableOp"
  input: "count"
  input: "metrics/acc/Cast_1"
  input: "^metrics/acc/AssignAddVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "count"
  input: "^metrics/acc/AssignAddVariableOp"
  input: "^metrics/acc/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/div_no_nan/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total"
  input: "^metrics/acc/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/div_no_nan/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "count"
  input: "^metrics/acc/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/div_no_nan"
  op: "DivNoNan"
  input: "metrics/acc/div_no_nan/ReadVariableOp"
  input: "metrics/acc/div_no_nan/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/Identity"
  op: "Identity"
  input: "metrics/acc/div_no_nan"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/activation_5_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Shape"
  op: "Shape"
  input: "dense_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Shape_1"
  op: "Shape"
  input: "dense_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Sub"
  op: "Sub"
  input: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Rank_1"
  input: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Slice/begin"
  op: "Pack"
  input: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Slice"
  op: "Slice"
  input: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Shape_1"
  input: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Slice/begin"
  input: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/activation_5_loss/softmax_cross_entropy_with_logits/concat/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/activation_5_loss/softmax_cross_entropy_with_logits/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/activation_5_loss/softmax_cross_entropy_with_logits/concat"
  op: "ConcatV2"
  input: "loss/activation_5_loss/softmax_cross_entropy_with_logits/concat/values_0"
  input: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Slice"
  input: "loss/activation_5_loss/softmax_cross_entropy_with_logits/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Reshape"
  op: "Reshape"
  input: "dense_1/BiasAdd"
  input: "loss/activation_5_loss/softmax_cross_entropy_with_logits/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Rank_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Shape_2"
  op: "Shape"
  input: "activation_5_target"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Sub_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Sub_1"
  op: "Sub"
  input: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Rank_2"
  input: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Slice_1/begin"
  op: "Pack"
  input: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Sub_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Slice_1"
  op: "Slice"
  input: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Shape_2"
  input: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Slice_1/begin"
  input: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/activation_5_loss/softmax_cross_entropy_with_logits/concat_1/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/activation_5_loss/softmax_cross_entropy_with_logits/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/activation_5_loss/softmax_cross_entropy_with_logits/concat_1"
  op: "ConcatV2"
  input: "loss/activation_5_loss/softmax_cross_entropy_with_logits/concat_1/values_0"
  input: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Slice_1"
  input: "loss/activation_5_loss/softmax_cross_entropy_with_logits/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Reshape_1"
  op: "Reshape"
  input: "activation_5_target"
  input: "loss/activation_5_loss/softmax_cross_entropy_with_logits/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/activation_5_loss/softmax_cross_entropy_with_logits"
  op: "SoftmaxCrossEntropyWithLogits"
  input: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Reshape"
  input: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Sub_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Sub_2"
  op: "Sub"
  input: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Rank"
  input: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Slice_2/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Slice_2/size"
  op: "Pack"
  input: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Sub_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Slice_2"
  op: "Slice"
  input: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Shape"
  input: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Slice_2/begin"
  input: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Reshape_2"
  op: "Reshape"
  input: "loss/activation_5_loss/softmax_cross_entropy_with_logits"
  input: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/activation_5_loss/weighted_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/activation_5_loss/weighted_loss/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "loss/activation_5_loss/weighted_loss/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/activation_5_loss/weighted_loss/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/activation_5_loss/weighted_loss/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/activation_5_loss/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "loss/activation_5_loss/weighted_loss/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Reshape_2"
  input: "^loss/activation_5_loss/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/activation_5_loss/weighted_loss/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^loss/activation_5_loss/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/activation_5_loss/weighted_loss/broadcast_weights/ones_like"
  op: "Fill"
  input: "loss/activation_5_loss/weighted_loss/broadcast_weights/ones_like/Shape"
  input: "loss/activation_5_loss/weighted_loss/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/activation_5_loss/weighted_loss/broadcast_weights"
  op: "Mul"
  input: "loss/activation_5_loss/weighted_loss/Const"
  input: "loss/activation_5_loss/weighted_loss/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/activation_5_loss/weighted_loss/Mul"
  op: "Mul"
  input: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Reshape_2"
  input: "loss/activation_5_loss/weighted_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/activation_5_loss/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/activation_5_loss/Sum"
  op: "Sum"
  input: "loss/activation_5_loss/weighted_loss/Mul"
  input: "loss/activation_5_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/activation_5_loss/num_elements"
  op: "Size"
  input: "loss/activation_5_loss/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/activation_5_loss/num_elements/Cast"
  op: "Cast"
  input: "loss/activation_5_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "loss/activation_5_loss/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "loss/activation_5_loss/Sum_1"
  op: "Sum"
  input: "loss/activation_5_loss/Sum"
  input: "loss/activation_5_loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/activation_5_loss/value"
  op: "DivNoNan"
  input: "loss/activation_5_loss/Sum_1"
  input: "loss/activation_5_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/mul"
  op: "Mul"
  input: "loss/mul/x"
  input: "loss/activation_5_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "count"
}
node {
  name: "VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "conv2d/bias"
}
node {
  name: "VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "conv2d_1/kernel"
}
node {
  name: "VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "dense_1/kernel"
}
node {
  name: "VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "conv2d_4/bias"
}
node {
  name: "VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "total"
}
node {
  name: "VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "conv2d_1/bias"
}
node {
  name: "VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "dense/kernel"
}
node {
  name: "VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "conv2d_4/kernel"
}
node {
  name: "VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "conv2d/kernel"
}
node {
  name: "VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "dense_1/bias"
}
node {
  name: "VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "conv2d_5/bias"
}
node {
  name: "VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "conv2d_5/kernel"
}
node {
  name: "VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "conv2d_3/kernel"
}
node {
  name: "VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "conv2d_2/bias"
}
node {
  name: "VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "dense/bias"
}
node {
  name: "VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "conv2d_3/bias"
}
node {
  name: "VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "conv2d_2/kernel"
}
node {
  name: "init"
  op: "NoOp"
  input: "^conv2d/bias/Assign"
  input: "^conv2d/kernel/Assign"
  input: "^conv2d_1/bias/Assign"
  input: "^conv2d_1/kernel/Assign"
  input: "^conv2d_2/bias/Assign"
  input: "^conv2d_2/kernel/Assign"
  input: "^conv2d_3/bias/Assign"
  input: "^conv2d_3/kernel/Assign"
  input: "^conv2d_4/bias/Assign"
  input: "^conv2d_4/kernel/Assign"
  input: "^conv2d_5/bias/Assign"
  input: "^conv2d_5/kernel/Assign"
  input: "^count/Assign"
  input: "^dense/bias/Assign"
  input: "^dense/kernel/Assign"
  input: "^dense_1/bias/Assign"
  input: "^dense_1/kernel/Assign"
  input: "^total/Assign"
}
node {
  name: "RMSprop/gradients/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RMSprop/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop/gradients/Fill"
  op: "Fill"
  input: "RMSprop/gradients/Shape"
  input: "RMSprop/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/loss/mul_grad/Mul"
  op: "Mul"
  input: "RMSprop/gradients/Fill"
  input: "loss/activation_5_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/loss/mul_grad/Mul_1"
  op: "Mul"
  input: "RMSprop/gradients/Fill"
  input: "loss/mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/loss/activation_5_loss/value_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RMSprop/gradients/loss/activation_5_loss/value_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RMSprop/gradients/loss/activation_5_loss/value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "RMSprop/gradients/loss/activation_5_loss/value_grad/Shape"
  input: "RMSprop/gradients/loss/activation_5_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/loss/activation_5_loss/value_grad/div_no_nan"
  op: "DivNoNan"
  input: "RMSprop/gradients/loss/mul_grad/Mul_1"
  input: "loss/activation_5_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/loss/activation_5_loss/value_grad/Sum"
  op: "Sum"
  input: "RMSprop/gradients/loss/activation_5_loss/value_grad/div_no_nan"
  input: "RMSprop/gradients/loss/activation_5_loss/value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop/gradients/loss/activation_5_loss/value_grad/Reshape"
  op: "Reshape"
  input: "RMSprop/gradients/loss/activation_5_loss/value_grad/Sum"
  input: "RMSprop/gradients/loss/activation_5_loss/value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/loss/activation_5_loss/value_grad/Neg"
  op: "Neg"
  input: "loss/activation_5_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/loss/activation_5_loss/value_grad/div_no_nan_1"
  op: "DivNoNan"
  input: "RMSprop/gradients/loss/activation_5_loss/value_grad/Neg"
  input: "loss/activation_5_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/loss/activation_5_loss/value_grad/div_no_nan_2"
  op: "DivNoNan"
  input: "RMSprop/gradients/loss/activation_5_loss/value_grad/div_no_nan_1"
  input: "loss/activation_5_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/loss/activation_5_loss/value_grad/mul"
  op: "Mul"
  input: "RMSprop/gradients/loss/mul_grad/Mul_1"
  input: "RMSprop/gradients/loss/activation_5_loss/value_grad/div_no_nan_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/loss/activation_5_loss/value_grad/Sum_1"
  op: "Sum"
  input: "RMSprop/gradients/loss/activation_5_loss/value_grad/mul"
  input: "RMSprop/gradients/loss/activation_5_loss/value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop/gradients/loss/activation_5_loss/value_grad/Reshape_1"
  op: "Reshape"
  input: "RMSprop/gradients/loss/activation_5_loss/value_grad/Sum_1"
  input: "RMSprop/gradients/loss/activation_5_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/loss/activation_5_loss/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RMSprop/gradients/loss/activation_5_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "RMSprop/gradients/loss/activation_5_loss/value_grad/Reshape"
  input: "RMSprop/gradients/loss/activation_5_loss/Sum_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/loss/activation_5_loss/Sum_1_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RMSprop/gradients/loss/activation_5_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "RMSprop/gradients/loss/activation_5_loss/Sum_1_grad/Reshape"
  input: "RMSprop/gradients/loss/activation_5_loss/Sum_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/loss/activation_5_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RMSprop/gradients/loss/activation_5_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "RMSprop/gradients/loss/activation_5_loss/Sum_1_grad/Tile"
  input: "RMSprop/gradients/loss/activation_5_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/loss/activation_5_loss/Sum_grad/Shape"
  op: "Shape"
  input: "loss/activation_5_loss/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/loss/activation_5_loss/Sum_grad/Tile"
  op: "Tile"
  input: "RMSprop/gradients/loss/activation_5_loss/Sum_grad/Reshape"
  input: "RMSprop/gradients/loss/activation_5_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/loss/activation_5_loss/weighted_loss/Mul_grad/Shape"
  op: "Shape"
  input: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/loss/activation_5_loss/weighted_loss/Mul_grad/Shape_1"
  op: "Shape"
  input: "loss/activation_5_loss/weighted_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/loss/activation_5_loss/weighted_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "RMSprop/gradients/loss/activation_5_loss/weighted_loss/Mul_grad/Shape"
  input: "RMSprop/gradients/loss/activation_5_loss/weighted_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/loss/activation_5_loss/weighted_loss/Mul_grad/Mul"
  op: "Mul"
  input: "RMSprop/gradients/loss/activation_5_loss/Sum_grad/Tile"
  input: "loss/activation_5_loss/weighted_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/loss/activation_5_loss/weighted_loss/Mul_grad/Sum"
  op: "Sum"
  input: "RMSprop/gradients/loss/activation_5_loss/weighted_loss/Mul_grad/Mul"
  input: "RMSprop/gradients/loss/activation_5_loss/weighted_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop/gradients/loss/activation_5_loss/weighted_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "RMSprop/gradients/loss/activation_5_loss/weighted_loss/Mul_grad/Sum"
  input: "RMSprop/gradients/loss/activation_5_loss/weighted_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/loss/activation_5_loss/weighted_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Reshape_2"
  input: "RMSprop/gradients/loss/activation_5_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/loss/activation_5_loss/weighted_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "RMSprop/gradients/loss/activation_5_loss/weighted_loss/Mul_grad/Mul_1"
  input: "RMSprop/gradients/loss/activation_5_loss/weighted_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop/gradients/loss/activation_5_loss/weighted_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "RMSprop/gradients/loss/activation_5_loss/weighted_loss/Mul_grad/Sum_1"
  input: "RMSprop/gradients/loss/activation_5_loss/weighted_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/loss/activation_5_loss/softmax_cross_entropy_with_logits/Reshape_2_grad/Shape"
  op: "Shape"
  input: "loss/activation_5_loss/softmax_cross_entropy_with_logits"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/loss/activation_5_loss/softmax_cross_entropy_with_logits/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "RMSprop/gradients/loss/activation_5_loss/weighted_loss/Mul_grad/Reshape"
  input: "RMSprop/gradients/loss/activation_5_loss/softmax_cross_entropy_with_logits/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/zeros_like"
  op: "ZerosLike"
  input: "loss/activation_5_loss/softmax_cross_entropy_with_logits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/loss/activation_5_loss/softmax_cross_entropy_with_logits_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RMSprop/gradients/loss/activation_5_loss/softmax_cross_entropy_with_logits_grad/ExpandDims"
  op: "ExpandDims"
  input: "RMSprop/gradients/loss/activation_5_loss/softmax_cross_entropy_with_logits/Reshape_2_grad/Reshape"
  input: "RMSprop/gradients/loss/activation_5_loss/softmax_cross_entropy_with_logits_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/loss/activation_5_loss/softmax_cross_entropy_with_logits_grad/mul"
  op: "Mul"
  input: "RMSprop/gradients/loss/activation_5_loss/softmax_cross_entropy_with_logits_grad/ExpandDims"
  input: "loss/activation_5_loss/softmax_cross_entropy_with_logits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/loss/activation_5_loss/softmax_cross_entropy_with_logits_grad/LogSoftmax"
  op: "LogSoftmax"
  input: "loss/activation_5_loss/softmax_cross_entropy_with_logits/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/loss/activation_5_loss/softmax_cross_entropy_with_logits_grad/Neg"
  op: "Neg"
  input: "RMSprop/gradients/loss/activation_5_loss/softmax_cross_entropy_with_logits_grad/LogSoftmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/loss/activation_5_loss/softmax_cross_entropy_with_logits_grad/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RMSprop/gradients/loss/activation_5_loss/softmax_cross_entropy_with_logits_grad/ExpandDims_1"
  op: "ExpandDims"
  input: "RMSprop/gradients/loss/activation_5_loss/softmax_cross_entropy_with_logits/Reshape_2_grad/Reshape"
  input: "RMSprop/gradients/loss/activation_5_loss/softmax_cross_entropy_with_logits_grad/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/loss/activation_5_loss/softmax_cross_entropy_with_logits_grad/mul_1"
  op: "Mul"
  input: "RMSprop/gradients/loss/activation_5_loss/softmax_cross_entropy_with_logits_grad/ExpandDims_1"
  input: "RMSprop/gradients/loss/activation_5_loss/softmax_cross_entropy_with_logits_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/loss/activation_5_loss/softmax_cross_entropy_with_logits/Reshape_grad/Shape"
  op: "Shape"
  input: "dense_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/loss/activation_5_loss/softmax_cross_entropy_with_logits/Reshape_grad/Reshape"
  op: "Reshape"
  input: "RMSprop/gradients/loss/activation_5_loss/softmax_cross_entropy_with_logits_grad/mul"
  input: "RMSprop/gradients/loss/activation_5_loss/softmax_cross_entropy_with_logits/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/dense_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "RMSprop/gradients/loss/activation_5_loss/softmax_cross_entropy_with_logits/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "RMSprop/gradients/dense_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "RMSprop/gradients/loss/activation_5_loss/softmax_cross_entropy_with_logits/Reshape_grad/Reshape"
  input: "dense_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "RMSprop/gradients/dense_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "activation_4/activation_4/Identity"
  input: "RMSprop/gradients/loss/activation_5_loss/softmax_cross_entropy_with_logits/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_3/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "RMSprop/gradients/dense_1/MatMul_grad/MatMul"
  input: "dropout_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop/gradients/dense_1/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_3/cond/dropout/mul_1_grad/Shape"
  op: "Shape"
  input: "dropout_3/cond/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_3/cond/dropout/mul_1_grad/Shape_1"
  op: "Shape"
  input: "dropout_3/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_3/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "RMSprop/gradients/dropout_3/cond/dropout/mul_1_grad/Shape"
  input: "RMSprop/gradients/dropout_3/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_3/cond/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "RMSprop/gradients/dropout_3/cond/Merge_grad/cond_grad:1"
  input: "dropout_3/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_3/cond/dropout/mul_1_grad/Sum"
  op: "Sum"
  input: "RMSprop/gradients/dropout_3/cond/dropout/mul_1_grad/Mul"
  input: "RMSprop/gradients/dropout_3/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_3/cond/dropout/mul_1_grad/Reshape"
  op: "Reshape"
  input: "RMSprop/gradients/dropout_3/cond/dropout/mul_1_grad/Sum"
  input: "RMSprop/gradients/dropout_3/cond/dropout/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_3/cond/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "dropout_3/cond/dropout/mul"
  input: "RMSprop/gradients/dropout_3/cond/Merge_grad/cond_grad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_3/cond/dropout/mul_1_grad/Sum_1"
  op: "Sum"
  input: "RMSprop/gradients/dropout_3/cond/dropout/mul_1_grad/Mul_1"
  input: "RMSprop/gradients/dropout_3/cond/dropout/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_3/cond/dropout/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "RMSprop/gradients/dropout_3/cond/dropout/mul_1_grad/Sum_1"
  input: "RMSprop/gradients/dropout_3/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/Switch"
  op: "Switch"
  input: "dense/BiasAdd"
  input: "dropout_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/Identity"
  op: "Identity"
  input: "RMSprop/gradients/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/Shape_1"
  op: "Shape"
  input: "RMSprop/gradients/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/zeros/Const"
  op: "Const"
  input: "^RMSprop/gradients/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop/gradients/zeros"
  op: "Fill"
  input: "RMSprop/gradients/Shape_1"
  input: "RMSprop/gradients/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_3/cond/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "RMSprop/gradients/dropout_3/cond/Merge_grad/cond_grad"
  input: "RMSprop/gradients/zeros"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_3/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "dropout_3/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_3/cond/dropout/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_3/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "RMSprop/gradients/dropout_3/cond/dropout/mul_grad/Shape"
  input: "RMSprop/gradients/dropout_3/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_3/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "RMSprop/gradients/dropout_3/cond/dropout/mul_1_grad/Reshape"
  input: "dropout_3/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_3/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "RMSprop/gradients/dropout_3/cond/dropout/mul_grad/Mul"
  input: "RMSprop/gradients/dropout_3/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_3/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "RMSprop/gradients/dropout_3/cond/dropout/mul_grad/Sum"
  input: "RMSprop/gradients/dropout_3/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_3/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "dropout_3/cond/dropout/Shape/Switch:1"
  input: "RMSprop/gradients/dropout_3/cond/dropout/mul_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_3/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "RMSprop/gradients/dropout_3/cond/dropout/mul_grad/Mul_1"
  input: "RMSprop/gradients/dropout_3/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_3/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "RMSprop/gradients/dropout_3/cond/dropout/mul_grad/Sum_1"
  input: "RMSprop/gradients/dropout_3/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/Switch_1"
  op: "Switch"
  input: "dense/BiasAdd"
  input: "dropout_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/Identity_1"
  op: "Identity"
  input: "RMSprop/gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/Shape_2"
  op: "Shape"
  input: "RMSprop/gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/zeros_1/Const"
  op: "Const"
  input: "^RMSprop/gradients/Identity_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop/gradients/zeros_1"
  op: "Fill"
  input: "RMSprop/gradients/Shape_2"
  input: "RMSprop/gradients/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_3/cond/dropout/Shape/Switch_grad/cond_grad"
  op: "Merge"
  input: "RMSprop/gradients/zeros_1"
  input: "RMSprop/gradients/dropout_3/cond/dropout/mul_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/AddN"
  op: "AddN"
  input: "RMSprop/gradients/dropout_3/cond/Identity/Switch_grad/cond_grad"
  input: "RMSprop/gradients/dropout_3/cond/dropout/Shape/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop/gradients/dropout_3/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "RMSprop/gradients/dense/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "RMSprop/gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "RMSprop/gradients/dense/MatMul_grad/MatMul"
  op: "MatMul"
  input: "RMSprop/gradients/AddN"
  input: "dense/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "RMSprop/gradients/dense/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "flatten/Reshape"
  input: "RMSprop/gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop/gradients/flatten/Reshape_grad/Shape"
  op: "Shape"
  input: "flatten/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/flatten/Reshape_grad/Reshape"
  op: "Reshape"
  input: "RMSprop/gradients/dense/MatMul_grad/MatMul"
  input: "RMSprop/gradients/flatten/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/flatten/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "flatten/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/flatten/transpose_grad/transpose"
  op: "Transpose"
  input: "RMSprop/gradients/flatten/Reshape_grad/Reshape"
  input: "RMSprop/gradients/flatten/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_2/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "RMSprop/gradients/flatten/transpose_grad/transpose"
  input: "dropout_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop/gradients/flatten/transpose_grad/transpose"
      }
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_2/cond/dropout/mul_1_grad/Shape"
  op: "Shape"
  input: "dropout_2/cond/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_2/cond/dropout/mul_1_grad/Shape_1"
  op: "Shape"
  input: "dropout_2/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_2/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "RMSprop/gradients/dropout_2/cond/dropout/mul_1_grad/Shape"
  input: "RMSprop/gradients/dropout_2/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_2/cond/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "RMSprop/gradients/dropout_2/cond/Merge_grad/cond_grad:1"
  input: "dropout_2/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_2/cond/dropout/mul_1_grad/Sum"
  op: "Sum"
  input: "RMSprop/gradients/dropout_2/cond/dropout/mul_1_grad/Mul"
  input: "RMSprop/gradients/dropout_2/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_2/cond/dropout/mul_1_grad/Reshape"
  op: "Reshape"
  input: "RMSprop/gradients/dropout_2/cond/dropout/mul_1_grad/Sum"
  input: "RMSprop/gradients/dropout_2/cond/dropout/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_2/cond/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "dropout_2/cond/dropout/mul"
  input: "RMSprop/gradients/dropout_2/cond/Merge_grad/cond_grad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_2/cond/dropout/mul_1_grad/Sum_1"
  op: "Sum"
  input: "RMSprop/gradients/dropout_2/cond/dropout/mul_1_grad/Mul_1"
  input: "RMSprop/gradients/dropout_2/cond/dropout/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_2/cond/dropout/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "RMSprop/gradients/dropout_2/cond/dropout/mul_1_grad/Sum_1"
  input: "RMSprop/gradients/dropout_2/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/Switch_2"
  op: "Switch"
  input: "activation_3/activation_3/Identity"
  input: "dropout_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/Identity_2"
  op: "Identity"
  input: "RMSprop/gradients/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/Shape_3"
  op: "Shape"
  input: "RMSprop/gradients/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/zeros_2/Const"
  op: "Const"
  input: "^RMSprop/gradients/Identity_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop/gradients/zeros_2"
  op: "Fill"
  input: "RMSprop/gradients/Shape_3"
  input: "RMSprop/gradients/zeros_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_2/cond/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "RMSprop/gradients/dropout_2/cond/Merge_grad/cond_grad"
  input: "RMSprop/gradients/zeros_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_2/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "dropout_2/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_2/cond/dropout/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_2/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "RMSprop/gradients/dropout_2/cond/dropout/mul_grad/Shape"
  input: "RMSprop/gradients/dropout_2/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_2/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "RMSprop/gradients/dropout_2/cond/dropout/mul_1_grad/Reshape"
  input: "dropout_2/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_2/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "RMSprop/gradients/dropout_2/cond/dropout/mul_grad/Mul"
  input: "RMSprop/gradients/dropout_2/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_2/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "RMSprop/gradients/dropout_2/cond/dropout/mul_grad/Sum"
  input: "RMSprop/gradients/dropout_2/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_2/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "dropout_2/cond/dropout/Shape/Switch:1"
  input: "RMSprop/gradients/dropout_2/cond/dropout/mul_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_2/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "RMSprop/gradients/dropout_2/cond/dropout/mul_grad/Mul_1"
  input: "RMSprop/gradients/dropout_2/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_2/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "RMSprop/gradients/dropout_2/cond/dropout/mul_grad/Sum_1"
  input: "RMSprop/gradients/dropout_2/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/Switch_3"
  op: "Switch"
  input: "activation_3/activation_3/Identity"
  input: "dropout_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/Identity_3"
  op: "Identity"
  input: "RMSprop/gradients/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/Shape_4"
  op: "Shape"
  input: "RMSprop/gradients/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/zeros_3/Const"
  op: "Const"
  input: "^RMSprop/gradients/Identity_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop/gradients/zeros_3"
  op: "Fill"
  input: "RMSprop/gradients/Shape_4"
  input: "RMSprop/gradients/zeros_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_2/cond/dropout/Shape/Switch_grad/cond_grad"
  op: "Merge"
  input: "RMSprop/gradients/zeros_3"
  input: "RMSprop/gradients/dropout_2/cond/dropout/mul_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/AddN_1"
  op: "AddN"
  input: "RMSprop/gradients/dropout_2/cond/Identity/Switch_grad/cond_grad"
  input: "RMSprop/gradients/dropout_2/cond/dropout/Shape/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop/gradients/dropout_2/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "RMSprop/gradients/conv2d_5/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "RMSprop/gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "RMSprop/gradients/conv2d_5/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "activation_2/activation_2/Identity"
  input: "conv2d_5/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/conv2d_5/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "RMSprop/gradients/conv2d_5/Conv2D_grad/ShapeN"
  input: "conv2d_5/Conv2D/ReadVariableOp"
  input: "RMSprop/gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "RMSprop/gradients/conv2d_5/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "activation_2/activation_2/Identity"
  input: "RMSprop/gradients/conv2d_5/Conv2D_grad/ShapeN:1"
  input: "RMSprop/gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "RMSprop/gradients/conv2d_4/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "RMSprop/gradients/conv2d_5/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "RMSprop/gradients/conv2d_4/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "dropout_1/cond/Merge"
  input: "conv2d_4/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/conv2d_4/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "RMSprop/gradients/conv2d_4/Conv2D_grad/ShapeN"
  input: "conv2d_4/Conv2D/ReadVariableOp"
  input: "RMSprop/gradients/conv2d_5/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "RMSprop/gradients/conv2d_4/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "dropout_1/cond/Merge"
  input: "RMSprop/gradients/conv2d_4/Conv2D_grad/ShapeN:1"
  input: "RMSprop/gradients/conv2d_5/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_1/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "RMSprop/gradients/conv2d_4/Conv2D_grad/Conv2DBackpropInput"
  input: "dropout_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop/gradients/conv2d_4/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_1/cond/dropout/mul_1_grad/Shape"
  op: "Shape"
  input: "dropout_1/cond/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_1/cond/dropout/mul_1_grad/Shape_1"
  op: "Shape"
  input: "dropout_1/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_1/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "RMSprop/gradients/dropout_1/cond/dropout/mul_1_grad/Shape"
  input: "RMSprop/gradients/dropout_1/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_1/cond/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "RMSprop/gradients/dropout_1/cond/Merge_grad/cond_grad:1"
  input: "dropout_1/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_1/cond/dropout/mul_1_grad/Sum"
  op: "Sum"
  input: "RMSprop/gradients/dropout_1/cond/dropout/mul_1_grad/Mul"
  input: "RMSprop/gradients/dropout_1/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_1/cond/dropout/mul_1_grad/Reshape"
  op: "Reshape"
  input: "RMSprop/gradients/dropout_1/cond/dropout/mul_1_grad/Sum"
  input: "RMSprop/gradients/dropout_1/cond/dropout/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_1/cond/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "dropout_1/cond/dropout/mul"
  input: "RMSprop/gradients/dropout_1/cond/Merge_grad/cond_grad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_1/cond/dropout/mul_1_grad/Sum_1"
  op: "Sum"
  input: "RMSprop/gradients/dropout_1/cond/dropout/mul_1_grad/Mul_1"
  input: "RMSprop/gradients/dropout_1/cond/dropout/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_1/cond/dropout/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "RMSprop/gradients/dropout_1/cond/dropout/mul_1_grad/Sum_1"
  input: "RMSprop/gradients/dropout_1/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/Switch_4"
  op: "Switch"
  input: "max_pooling2d_1/MaxPool"
  input: "dropout_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/Identity_4"
  op: "Identity"
  input: "RMSprop/gradients/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/Shape_5"
  op: "Shape"
  input: "RMSprop/gradients/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/zeros_4/Const"
  op: "Const"
  input: "^RMSprop/gradients/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop/gradients/zeros_4"
  op: "Fill"
  input: "RMSprop/gradients/Shape_5"
  input: "RMSprop/gradients/zeros_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_1/cond/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "RMSprop/gradients/dropout_1/cond/Merge_grad/cond_grad"
  input: "RMSprop/gradients/zeros_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_1/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "dropout_1/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_1/cond/dropout/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_1/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "RMSprop/gradients/dropout_1/cond/dropout/mul_grad/Shape"
  input: "RMSprop/gradients/dropout_1/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_1/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "RMSprop/gradients/dropout_1/cond/dropout/mul_1_grad/Reshape"
  input: "dropout_1/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_1/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "RMSprop/gradients/dropout_1/cond/dropout/mul_grad/Mul"
  input: "RMSprop/gradients/dropout_1/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_1/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "RMSprop/gradients/dropout_1/cond/dropout/mul_grad/Sum"
  input: "RMSprop/gradients/dropout_1/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_1/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "dropout_1/cond/dropout/Shape/Switch:1"
  input: "RMSprop/gradients/dropout_1/cond/dropout/mul_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_1/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "RMSprop/gradients/dropout_1/cond/dropout/mul_grad/Mul_1"
  input: "RMSprop/gradients/dropout_1/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_1/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "RMSprop/gradients/dropout_1/cond/dropout/mul_grad/Sum_1"
  input: "RMSprop/gradients/dropout_1/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/Switch_5"
  op: "Switch"
  input: "max_pooling2d_1/MaxPool"
  input: "dropout_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/Identity_5"
  op: "Identity"
  input: "RMSprop/gradients/Switch_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/Shape_6"
  op: "Shape"
  input: "RMSprop/gradients/Switch_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/zeros_5/Const"
  op: "Const"
  input: "^RMSprop/gradients/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop/gradients/zeros_5"
  op: "Fill"
  input: "RMSprop/gradients/Shape_6"
  input: "RMSprop/gradients/zeros_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/dropout_1/cond/dropout/Shape/Switch_grad/cond_grad"
  op: "Merge"
  input: "RMSprop/gradients/zeros_5"
  input: "RMSprop/gradients/dropout_1/cond/dropout/mul_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/AddN_2"
  op: "AddN"
  input: "RMSprop/gradients/dropout_1/cond/Identity/Switch_grad/cond_grad"
  input: "RMSprop/gradients/dropout_1/cond/dropout/Shape/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop/gradients/dropout_1/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "RMSprop/gradients/max_pooling2d_1/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "conv2d_3/BiasAdd"
  input: "max_pooling2d_1/MaxPool"
  input: "RMSprop/gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
}
node {
  name: "RMSprop/gradients/conv2d_3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "RMSprop/gradients/max_pooling2d_1/MaxPool_grad/MaxPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "RMSprop/gradients/conv2d_3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "activation_1/activation_1/Identity"
  input: "conv2d_3/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/conv2d_3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "RMSprop/gradients/conv2d_3/Conv2D_grad/ShapeN"
  input: "conv2d_3/Conv2D/ReadVariableOp"
  input: "RMSprop/gradients/max_pooling2d_1/MaxPool_grad/MaxPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "RMSprop/gradients/conv2d_3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "activation_1/activation_1/Identity"
  input: "RMSprop/gradients/conv2d_3/Conv2D_grad/ShapeN:1"
  input: "RMSprop/gradients/max_pooling2d_1/MaxPool_grad/MaxPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "RMSprop/gradients/conv2d_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "RMSprop/gradients/conv2d_3/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "RMSprop/gradients/conv2d_2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "dropout/cond/Merge"
  input: "conv2d_2/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/conv2d_2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "RMSprop/gradients/conv2d_2/Conv2D_grad/ShapeN"
  input: "conv2d_2/Conv2D/ReadVariableOp"
  input: "RMSprop/gradients/conv2d_3/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "RMSprop/gradients/conv2d_2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "dropout/cond/Merge"
  input: "RMSprop/gradients/conv2d_2/Conv2D_grad/ShapeN:1"
  input: "RMSprop/gradients/conv2d_3/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "RMSprop/gradients/dropout/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "RMSprop/gradients/conv2d_2/Conv2D_grad/Conv2DBackpropInput"
  input: "dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop/gradients/conv2d_2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "RMSprop/gradients/dropout/cond/dropout/mul_1_grad/Shape"
  op: "Shape"
  input: "dropout/cond/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/dropout/cond/dropout/mul_1_grad/Shape_1"
  op: "Shape"
  input: "dropout/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/dropout/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "RMSprop/gradients/dropout/cond/dropout/mul_1_grad/Shape"
  input: "RMSprop/gradients/dropout/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/dropout/cond/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "RMSprop/gradients/dropout/cond/Merge_grad/cond_grad:1"
  input: "dropout/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/dropout/cond/dropout/mul_1_grad/Sum"
  op: "Sum"
  input: "RMSprop/gradients/dropout/cond/dropout/mul_1_grad/Mul"
  input: "RMSprop/gradients/dropout/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop/gradients/dropout/cond/dropout/mul_1_grad/Reshape"
  op: "Reshape"
  input: "RMSprop/gradients/dropout/cond/dropout/mul_1_grad/Sum"
  input: "RMSprop/gradients/dropout/cond/dropout/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/dropout/cond/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "dropout/cond/dropout/mul"
  input: "RMSprop/gradients/dropout/cond/Merge_grad/cond_grad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/dropout/cond/dropout/mul_1_grad/Sum_1"
  op: "Sum"
  input: "RMSprop/gradients/dropout/cond/dropout/mul_1_grad/Mul_1"
  input: "RMSprop/gradients/dropout/cond/dropout/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop/gradients/dropout/cond/dropout/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "RMSprop/gradients/dropout/cond/dropout/mul_1_grad/Sum_1"
  input: "RMSprop/gradients/dropout/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/Switch_6"
  op: "Switch"
  input: "max_pooling2d/MaxPool"
  input: "dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/Identity_6"
  op: "Identity"
  input: "RMSprop/gradients/Switch_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/Shape_7"
  op: "Shape"
  input: "RMSprop/gradients/Switch_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/zeros_6/Const"
  op: "Const"
  input: "^RMSprop/gradients/Identity_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop/gradients/zeros_6"
  op: "Fill"
  input: "RMSprop/gradients/Shape_7"
  input: "RMSprop/gradients/zeros_6/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/dropout/cond/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "RMSprop/gradients/dropout/cond/Merge_grad/cond_grad"
  input: "RMSprop/gradients/zeros_6"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/dropout/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "dropout/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/dropout/cond/dropout/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RMSprop/gradients/dropout/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "RMSprop/gradients/dropout/cond/dropout/mul_grad/Shape"
  input: "RMSprop/gradients/dropout/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/dropout/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "RMSprop/gradients/dropout/cond/dropout/mul_1_grad/Reshape"
  input: "dropout/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/dropout/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "RMSprop/gradients/dropout/cond/dropout/mul_grad/Mul"
  input: "RMSprop/gradients/dropout/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop/gradients/dropout/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "RMSprop/gradients/dropout/cond/dropout/mul_grad/Sum"
  input: "RMSprop/gradients/dropout/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/dropout/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "dropout/cond/dropout/Shape/Switch:1"
  input: "RMSprop/gradients/dropout/cond/dropout/mul_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/dropout/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "RMSprop/gradients/dropout/cond/dropout/mul_grad/Mul_1"
  input: "RMSprop/gradients/dropout/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop/gradients/dropout/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "RMSprop/gradients/dropout/cond/dropout/mul_grad/Sum_1"
  input: "RMSprop/gradients/dropout/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/Switch_7"
  op: "Switch"
  input: "max_pooling2d/MaxPool"
  input: "dropout/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/Identity_7"
  op: "Identity"
  input: "RMSprop/gradients/Switch_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/Shape_8"
  op: "Shape"
  input: "RMSprop/gradients/Switch_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/zeros_7/Const"
  op: "Const"
  input: "^RMSprop/gradients/Identity_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop/gradients/zeros_7"
  op: "Fill"
  input: "RMSprop/gradients/Shape_8"
  input: "RMSprop/gradients/zeros_7/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/dropout/cond/dropout/Shape/Switch_grad/cond_grad"
  op: "Merge"
  input: "RMSprop/gradients/zeros_7"
  input: "RMSprop/gradients/dropout/cond/dropout/mul_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/gradients/AddN_3"
  op: "AddN"
  input: "RMSprop/gradients/dropout/cond/Identity/Switch_grad/cond_grad"
  input: "RMSprop/gradients/dropout/cond/dropout/Shape/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop/gradients/dropout/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "RMSprop/gradients/max_pooling2d/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "conv2d_1/BiasAdd"
  input: "max_pooling2d/MaxPool"
  input: "RMSprop/gradients/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
}
node {
  name: "RMSprop/gradients/conv2d_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "RMSprop/gradients/max_pooling2d/MaxPool_grad/MaxPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "RMSprop/gradients/conv2d_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "activation/activation/Identity"
  input: "conv2d_1/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/conv2d_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "RMSprop/gradients/conv2d_1/Conv2D_grad/ShapeN"
  input: "conv2d_1/Conv2D/ReadVariableOp"
  input: "RMSprop/gradients/max_pooling2d/MaxPool_grad/MaxPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "RMSprop/gradients/conv2d_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "activation/activation/Identity"
  input: "RMSprop/gradients/conv2d_1/Conv2D_grad/ShapeN:1"
  input: "RMSprop/gradients/max_pooling2d/MaxPool_grad/MaxPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "RMSprop/gradients/conv2d/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "RMSprop/gradients/conv2d_1/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "RMSprop/gradients/conv2d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "conv2d_input"
  input: "conv2d/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/gradients/conv2d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "RMSprop/gradients/conv2d/Conv2D_grad/ShapeN"
  input: "conv2d/Conv2D/ReadVariableOp"
  input: "RMSprop/gradients/conv2d_1/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "RMSprop/gradients/conv2d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv2d_input"
  input: "RMSprop/gradients/conv2d/Conv2D_grad/ShapeN:1"
  input: "RMSprop/gradients/conv2d_1/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "RMSprop/iter/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop/iter"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "RMSprop/iter"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop/iter"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop/iter"
    }
  }
}
node {
  name: "RMSprop/iter/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop/iter"
}
node {
  name: "RMSprop/iter/Assign"
  op: "AssignVariableOp"
  input: "RMSprop/iter"
  input: "RMSprop/iter/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop/iter"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "RMSprop/iter/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/iter"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop/iter"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "RMSprop/decay/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop/decay"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop/decay"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop/decay"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop/decay"
    }
  }
}
node {
  name: "RMSprop/decay/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop/decay"
}
node {
  name: "RMSprop/decay/Assign"
  op: "AssignVariableOp"
  input: "RMSprop/decay"
  input: "RMSprop/decay/Initializer/initial_value"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop/decay"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/decay/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/decay"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop/decay"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/learning_rate/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop/learning_rate"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "RMSprop/learning_rate"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop/learning_rate"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop/learning_rate"
    }
  }
}
node {
  name: "RMSprop/learning_rate/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop/learning_rate"
}
node {
  name: "RMSprop/learning_rate/Assign"
  op: "AssignVariableOp"
  input: "RMSprop/learning_rate"
  input: "RMSprop/learning_rate/Initializer/initial_value"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop/learning_rate"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/learning_rate/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/learning_rate"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop/learning_rate"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/momentum/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop/momentum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop/momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop/momentum"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop/momentum"
    }
  }
}
node {
  name: "RMSprop/momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop/momentum"
}
node {
  name: "RMSprop/momentum/Assign"
  op: "AssignVariableOp"
  input: "RMSprop/momentum"
  input: "RMSprop/momentum/Initializer/initial_value"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop/momentum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop/momentum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/rho/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop/rho"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "RMSprop/rho"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop/rho"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop/rho"
    }
  }
}
node {
  name: "RMSprop/rho/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop/rho"
}
node {
  name: "RMSprop/rho/Assign"
  op: "AssignVariableOp"
  input: "RMSprop/rho"
  input: "RMSprop/rho/Initializer/initial_value"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop/rho"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/rho/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/rho"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop/rho"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/conv2d/kernel/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop/conv2d/kernel/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop/conv2d/kernel/rms"
    }
  }
}
node {
  name: "RMSprop/conv2d/kernel/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop/conv2d/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
}
node {
  name: "RMSprop/conv2d/kernel/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d/kernel/rms"
  input: "RMSprop/conv2d/kernel/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/conv2d/kernel/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/conv2d/bias/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop/conv2d/bias/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop/conv2d/bias/rms"
    }
  }
}
node {
  name: "RMSprop/conv2d/bias/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop/conv2d/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/bias"
      }
    }
  }
}
node {
  name: "RMSprop/conv2d/bias/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d/bias/rms"
  input: "RMSprop/conv2d/bias/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/conv2d/bias/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/conv2d_1/kernel/rms/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "RMSprop/conv2d_1/kernel/rms/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop/conv2d_1/kernel/rms/Initializer/zeros"
  op: "Fill"
  input: "RMSprop/conv2d_1/kernel/rms/Initializer/zeros/shape_as_tensor"
  input: "RMSprop/conv2d_1/kernel/rms/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/conv2d_1/kernel/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop/conv2d_1/kernel/rms"
    }
  }
}
node {
  name: "RMSprop/conv2d_1/kernel/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop/conv2d_1/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
}
node {
  name: "RMSprop/conv2d_1/kernel/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d_1/kernel/rms"
  input: "RMSprop/conv2d_1/kernel/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/conv2d_1/kernel/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d_1/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/conv2d_1/bias/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop/conv2d_1/bias/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop/conv2d_1/bias/rms"
    }
  }
}
node {
  name: "RMSprop/conv2d_1/bias/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop/conv2d_1/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/bias"
      }
    }
  }
}
node {
  name: "RMSprop/conv2d_1/bias/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d_1/bias/rms"
  input: "RMSprop/conv2d_1/bias/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/conv2d_1/bias/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d_1/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/conv2d_2/kernel/rms/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "RMSprop/conv2d_2/kernel/rms/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop/conv2d_2/kernel/rms/Initializer/zeros"
  op: "Fill"
  input: "RMSprop/conv2d_2/kernel/rms/Initializer/zeros/shape_as_tensor"
  input: "RMSprop/conv2d_2/kernel/rms/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/conv2d_2/kernel/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop/conv2d_2/kernel/rms"
    }
  }
}
node {
  name: "RMSprop/conv2d_2/kernel/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop/conv2d_2/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
}
node {
  name: "RMSprop/conv2d_2/kernel/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d_2/kernel/rms"
  input: "RMSprop/conv2d_2/kernel/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/conv2d_2/kernel/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d_2/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/conv2d_2/bias/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop/conv2d_2/bias/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop/conv2d_2/bias/rms"
    }
  }
}
node {
  name: "RMSprop/conv2d_2/bias/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop/conv2d_2/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/bias"
      }
    }
  }
}
node {
  name: "RMSprop/conv2d_2/bias/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d_2/bias/rms"
  input: "RMSprop/conv2d_2/bias/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/conv2d_2/bias/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d_2/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/conv2d_3/kernel/rms/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "RMSprop/conv2d_3/kernel/rms/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop/conv2d_3/kernel/rms/Initializer/zeros"
  op: "Fill"
  input: "RMSprop/conv2d_3/kernel/rms/Initializer/zeros/shape_as_tensor"
  input: "RMSprop/conv2d_3/kernel/rms/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/conv2d_3/kernel/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop/conv2d_3/kernel/rms"
    }
  }
}
node {
  name: "RMSprop/conv2d_3/kernel/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop/conv2d_3/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
}
node {
  name: "RMSprop/conv2d_3/kernel/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d_3/kernel/rms"
  input: "RMSprop/conv2d_3/kernel/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/conv2d_3/kernel/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d_3/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/conv2d_3/bias/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop/conv2d_3/bias/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop/conv2d_3/bias/rms"
    }
  }
}
node {
  name: "RMSprop/conv2d_3/bias/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop/conv2d_3/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/bias"
      }
    }
  }
}
node {
  name: "RMSprop/conv2d_3/bias/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d_3/bias/rms"
  input: "RMSprop/conv2d_3/bias/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/conv2d_3/bias/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d_3/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/conv2d_4/kernel/rms/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "RMSprop/conv2d_4/kernel/rms/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop/conv2d_4/kernel/rms/Initializer/zeros"
  op: "Fill"
  input: "RMSprop/conv2d_4/kernel/rms/Initializer/zeros/shape_as_tensor"
  input: "RMSprop/conv2d_4/kernel/rms/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/conv2d_4/kernel/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop/conv2d_4/kernel/rms"
    }
  }
}
node {
  name: "RMSprop/conv2d_4/kernel/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop/conv2d_4/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
}
node {
  name: "RMSprop/conv2d_4/kernel/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d_4/kernel/rms"
  input: "RMSprop/conv2d_4/kernel/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/conv2d_4/kernel/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d_4/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/conv2d_4/bias/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop/conv2d_4/bias/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop/conv2d_4/bias/rms"
    }
  }
}
node {
  name: "RMSprop/conv2d_4/bias/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop/conv2d_4/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/bias"
      }
    }
  }
}
node {
  name: "RMSprop/conv2d_4/bias/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d_4/bias/rms"
  input: "RMSprop/conv2d_4/bias/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/conv2d_4/bias/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d_4/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/conv2d_5/kernel/rms/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "RMSprop/conv2d_5/kernel/rms/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop/conv2d_5/kernel/rms/Initializer/zeros"
  op: "Fill"
  input: "RMSprop/conv2d_5/kernel/rms/Initializer/zeros/shape_as_tensor"
  input: "RMSprop/conv2d_5/kernel/rms/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/conv2d_5/kernel/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop/conv2d_5/kernel/rms"
    }
  }
}
node {
  name: "RMSprop/conv2d_5/kernel/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop/conv2d_5/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
}
node {
  name: "RMSprop/conv2d_5/kernel/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d_5/kernel/rms"
  input: "RMSprop/conv2d_5/kernel/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/conv2d_5/kernel/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d_5/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/conv2d_5/bias/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop/conv2d_5/bias/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop/conv2d_5/bias/rms"
    }
  }
}
node {
  name: "RMSprop/conv2d_5/bias/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop/conv2d_5/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/bias"
      }
    }
  }
}
node {
  name: "RMSprop/conv2d_5/bias/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d_5/bias/rms"
  input: "RMSprop/conv2d_5/bias/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/conv2d_5/bias/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d_5/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_5/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/dense/kernel/rms/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000R\001\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "RMSprop/dense/kernel/rms/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop/dense/kernel/rms/Initializer/zeros"
  op: "Fill"
  input: "RMSprop/dense/kernel/rms/Initializer/zeros/shape_as_tensor"
  input: "RMSprop/dense/kernel/rms/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop/dense/kernel/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 86528
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop/dense/kernel/rms"
    }
  }
}
node {
  name: "RMSprop/dense/kernel/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop/dense/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
}
node {
  name: "RMSprop/dense/kernel/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop/dense/kernel/rms"
  input: "RMSprop/dense/kernel/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/dense/kernel/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/dense/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/dense/bias/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop/dense/bias/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop/dense/bias/rms"
    }
  }
}
node {
  name: "RMSprop/dense/bias/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop/dense/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
}
node {
  name: "RMSprop/dense/bias/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop/dense/bias/rms"
  input: "RMSprop/dense/bias/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/dense/bias/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/dense/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/dense_1/kernel/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop/dense_1/kernel/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop/dense_1/kernel/rms"
    }
  }
}
node {
  name: "RMSprop/dense_1/kernel/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop/dense_1/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
}
node {
  name: "RMSprop/dense_1/kernel/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop/dense_1/kernel/rms"
  input: "RMSprop/dense_1/kernel/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/dense_1/kernel/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/dense_1/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/dense_1/bias/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop/dense_1/bias/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop/dense_1/bias/rms"
    }
  }
}
node {
  name: "RMSprop/dense_1/bias/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop/dense_1/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
}
node {
  name: "RMSprop/dense_1/bias/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop/dense_1/bias/rms"
  input: "RMSprop/dense_1/bias/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/dense_1/bias/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/dense_1/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d/kernel/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d/kernel/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d/kernel/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d/kernel/mul"
  op: "Mul"
  input: "RMSprop/RMSprop/update_conv2d/kernel/ReadVariableOp"
  input: "RMSprop/RMSprop/update_conv2d/kernel/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d/kernel/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d/kernel/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d/kernel/sub"
  op: "Sub"
  input: "RMSprop/RMSprop/update_conv2d/kernel/sub/x"
  input: "RMSprop/RMSprop/update_conv2d/kernel/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d/kernel/Square"
  op: "Square"
  input: "RMSprop/gradients/conv2d/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d/kernel/mul_1"
  op: "Mul"
  input: "RMSprop/RMSprop/update_conv2d/kernel/sub"
  input: "RMSprop/RMSprop/update_conv2d/kernel/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d/kernel/add"
  op: "Add"
  input: "RMSprop/RMSprop/update_conv2d/kernel/mul"
  input: "RMSprop/RMSprop/update_conv2d/kernel/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d/kernel/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d/kernel/rms"
  input: "RMSprop/RMSprop/update_conv2d/kernel/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d/kernel/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d/kernel/rms"
  input: "^RMSprop/RMSprop/update_conv2d/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d/kernel/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d/kernel/mul_2"
  op: "Mul"
  input: "RMSprop/RMSprop/update_conv2d/kernel/ReadVariableOp_3"
  input: "RMSprop/gradients/conv2d/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d/kernel/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d/kernel/rms"
  input: "^RMSprop/RMSprop/update_conv2d/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d/kernel/Sqrt"
  op: "Sqrt"
  input: "RMSprop/RMSprop/update_conv2d/kernel/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d/kernel/add_1"
  op: "Add"
  input: "RMSprop/RMSprop/update_conv2d/kernel/Sqrt"
  input: "RMSprop/RMSprop/update_conv2d/kernel/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d/kernel/truediv"
  op: "RealDiv"
  input: "RMSprop/RMSprop/update_conv2d/kernel/mul_2"
  input: "RMSprop/RMSprop/update_conv2d/kernel/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d/kernel/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv2d/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d/kernel/sub_1"
  op: "Sub"
  input: "RMSprop/RMSprop/update_conv2d/kernel/ReadVariableOp_4"
  input: "RMSprop/RMSprop/update_conv2d/kernel/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d/kernel/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "conv2d/kernel"
  input: "RMSprop/RMSprop/update_conv2d/kernel/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d/kernel/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv2d/kernel"
  input: "^RMSprop/RMSprop/update_conv2d/kernel/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d/bias/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d/bias/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d/bias/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d/bias/mul"
  op: "Mul"
  input: "RMSprop/RMSprop/update_conv2d/bias/ReadVariableOp"
  input: "RMSprop/RMSprop/update_conv2d/bias/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d/bias/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d/bias/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d/bias/sub"
  op: "Sub"
  input: "RMSprop/RMSprop/update_conv2d/bias/sub/x"
  input: "RMSprop/RMSprop/update_conv2d/bias/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d/bias/Square"
  op: "Square"
  input: "RMSprop/gradients/conv2d/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d/bias/mul_1"
  op: "Mul"
  input: "RMSprop/RMSprop/update_conv2d/bias/sub"
  input: "RMSprop/RMSprop/update_conv2d/bias/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d/bias/add"
  op: "Add"
  input: "RMSprop/RMSprop/update_conv2d/bias/mul"
  input: "RMSprop/RMSprop/update_conv2d/bias/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d/bias/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d/bias/rms"
  input: "RMSprop/RMSprop/update_conv2d/bias/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d/bias/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d/bias/rms"
  input: "^RMSprop/RMSprop/update_conv2d/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d/bias/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d/bias/mul_2"
  op: "Mul"
  input: "RMSprop/RMSprop/update_conv2d/bias/ReadVariableOp_3"
  input: "RMSprop/gradients/conv2d/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d/bias/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d/bias/rms"
  input: "^RMSprop/RMSprop/update_conv2d/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d/bias/Sqrt"
  op: "Sqrt"
  input: "RMSprop/RMSprop/update_conv2d/bias/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d/bias/add_1"
  op: "Add"
  input: "RMSprop/RMSprop/update_conv2d/bias/Sqrt"
  input: "RMSprop/RMSprop/update_conv2d/bias/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d/bias/truediv"
  op: "RealDiv"
  input: "RMSprop/RMSprop/update_conv2d/bias/mul_2"
  input: "RMSprop/RMSprop/update_conv2d/bias/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d/bias/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv2d/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d/bias/sub_1"
  op: "Sub"
  input: "RMSprop/RMSprop/update_conv2d/bias/ReadVariableOp_4"
  input: "RMSprop/RMSprop/update_conv2d/bias/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d/bias/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "conv2d/bias"
  input: "RMSprop/RMSprop/update_conv2d/bias/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d/bias/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv2d/bias"
  input: "^RMSprop/RMSprop/update_conv2d/bias/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_1/kernel/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_1/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_1/kernel/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d_1/kernel/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_1/kernel/mul"
  op: "Mul"
  input: "RMSprop/RMSprop/update_conv2d_1/kernel/ReadVariableOp"
  input: "RMSprop/RMSprop/update_conv2d_1/kernel/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_1/kernel/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_1/kernel/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_1/kernel/sub"
  op: "Sub"
  input: "RMSprop/RMSprop/update_conv2d_1/kernel/sub/x"
  input: "RMSprop/RMSprop/update_conv2d_1/kernel/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_1/kernel/Square"
  op: "Square"
  input: "RMSprop/gradients/conv2d_1/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_1/kernel/mul_1"
  op: "Mul"
  input: "RMSprop/RMSprop/update_conv2d_1/kernel/sub"
  input: "RMSprop/RMSprop/update_conv2d_1/kernel/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_1/kernel/add"
  op: "Add"
  input: "RMSprop/RMSprop/update_conv2d_1/kernel/mul"
  input: "RMSprop/RMSprop/update_conv2d_1/kernel/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_1/kernel/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d_1/kernel/rms"
  input: "RMSprop/RMSprop/update_conv2d_1/kernel/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_1/kernel/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d_1/kernel/rms"
  input: "^RMSprop/RMSprop/update_conv2d_1/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_1/kernel/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_1/kernel/mul_2"
  op: "Mul"
  input: "RMSprop/RMSprop/update_conv2d_1/kernel/ReadVariableOp_3"
  input: "RMSprop/gradients/conv2d_1/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_1/kernel/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d_1/kernel/rms"
  input: "^RMSprop/RMSprop/update_conv2d_1/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_1/kernel/Sqrt"
  op: "Sqrt"
  input: "RMSprop/RMSprop/update_conv2d_1/kernel/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_1/kernel/add_1"
  op: "Add"
  input: "RMSprop/RMSprop/update_conv2d_1/kernel/Sqrt"
  input: "RMSprop/RMSprop/update_conv2d_1/kernel/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_1/kernel/truediv"
  op: "RealDiv"
  input: "RMSprop/RMSprop/update_conv2d_1/kernel/mul_2"
  input: "RMSprop/RMSprop/update_conv2d_1/kernel/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_1/kernel/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv2d_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_1/kernel/sub_1"
  op: "Sub"
  input: "RMSprop/RMSprop/update_conv2d_1/kernel/ReadVariableOp_4"
  input: "RMSprop/RMSprop/update_conv2d_1/kernel/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_1/kernel/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "conv2d_1/kernel"
  input: "RMSprop/RMSprop/update_conv2d_1/kernel/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_1/kernel/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv2d_1/kernel"
  input: "^RMSprop/RMSprop/update_conv2d_1/kernel/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_1/bias/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_1/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_1/bias/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d_1/bias/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_1/bias/mul"
  op: "Mul"
  input: "RMSprop/RMSprop/update_conv2d_1/bias/ReadVariableOp"
  input: "RMSprop/RMSprop/update_conv2d_1/bias/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_1/bias/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_1/bias/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_1/bias/sub"
  op: "Sub"
  input: "RMSprop/RMSprop/update_conv2d_1/bias/sub/x"
  input: "RMSprop/RMSprop/update_conv2d_1/bias/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_1/bias/Square"
  op: "Square"
  input: "RMSprop/gradients/conv2d_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_1/bias/mul_1"
  op: "Mul"
  input: "RMSprop/RMSprop/update_conv2d_1/bias/sub"
  input: "RMSprop/RMSprop/update_conv2d_1/bias/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_1/bias/add"
  op: "Add"
  input: "RMSprop/RMSprop/update_conv2d_1/bias/mul"
  input: "RMSprop/RMSprop/update_conv2d_1/bias/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_1/bias/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d_1/bias/rms"
  input: "RMSprop/RMSprop/update_conv2d_1/bias/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_1/bias/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d_1/bias/rms"
  input: "^RMSprop/RMSprop/update_conv2d_1/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_1/bias/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_1/bias/mul_2"
  op: "Mul"
  input: "RMSprop/RMSprop/update_conv2d_1/bias/ReadVariableOp_3"
  input: "RMSprop/gradients/conv2d_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_1/bias/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d_1/bias/rms"
  input: "^RMSprop/RMSprop/update_conv2d_1/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_1/bias/Sqrt"
  op: "Sqrt"
  input: "RMSprop/RMSprop/update_conv2d_1/bias/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_1/bias/add_1"
  op: "Add"
  input: "RMSprop/RMSprop/update_conv2d_1/bias/Sqrt"
  input: "RMSprop/RMSprop/update_conv2d_1/bias/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_1/bias/truediv"
  op: "RealDiv"
  input: "RMSprop/RMSprop/update_conv2d_1/bias/mul_2"
  input: "RMSprop/RMSprop/update_conv2d_1/bias/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_1/bias/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv2d_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_1/bias/sub_1"
  op: "Sub"
  input: "RMSprop/RMSprop/update_conv2d_1/bias/ReadVariableOp_4"
  input: "RMSprop/RMSprop/update_conv2d_1/bias/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_1/bias/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "conv2d_1/bias"
  input: "RMSprop/RMSprop/update_conv2d_1/bias/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_1/bias/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv2d_1/bias"
  input: "^RMSprop/RMSprop/update_conv2d_1/bias/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_2/kernel/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_2/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_2/kernel/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d_2/kernel/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_2/kernel/mul"
  op: "Mul"
  input: "RMSprop/RMSprop/update_conv2d_2/kernel/ReadVariableOp"
  input: "RMSprop/RMSprop/update_conv2d_2/kernel/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_2/kernel/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_2/kernel/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_2/kernel/sub"
  op: "Sub"
  input: "RMSprop/RMSprop/update_conv2d_2/kernel/sub/x"
  input: "RMSprop/RMSprop/update_conv2d_2/kernel/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_2/kernel/Square"
  op: "Square"
  input: "RMSprop/gradients/conv2d_2/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_2/kernel/mul_1"
  op: "Mul"
  input: "RMSprop/RMSprop/update_conv2d_2/kernel/sub"
  input: "RMSprop/RMSprop/update_conv2d_2/kernel/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_2/kernel/add"
  op: "Add"
  input: "RMSprop/RMSprop/update_conv2d_2/kernel/mul"
  input: "RMSprop/RMSprop/update_conv2d_2/kernel/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_2/kernel/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d_2/kernel/rms"
  input: "RMSprop/RMSprop/update_conv2d_2/kernel/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_2/kernel/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d_2/kernel/rms"
  input: "^RMSprop/RMSprop/update_conv2d_2/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_2/kernel/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_2/kernel/mul_2"
  op: "Mul"
  input: "RMSprop/RMSprop/update_conv2d_2/kernel/ReadVariableOp_3"
  input: "RMSprop/gradients/conv2d_2/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_2/kernel/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d_2/kernel/rms"
  input: "^RMSprop/RMSprop/update_conv2d_2/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_2/kernel/Sqrt"
  op: "Sqrt"
  input: "RMSprop/RMSprop/update_conv2d_2/kernel/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_2/kernel/add_1"
  op: "Add"
  input: "RMSprop/RMSprop/update_conv2d_2/kernel/Sqrt"
  input: "RMSprop/RMSprop/update_conv2d_2/kernel/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_2/kernel/truediv"
  op: "RealDiv"
  input: "RMSprop/RMSprop/update_conv2d_2/kernel/mul_2"
  input: "RMSprop/RMSprop/update_conv2d_2/kernel/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_2/kernel/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv2d_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_2/kernel/sub_1"
  op: "Sub"
  input: "RMSprop/RMSprop/update_conv2d_2/kernel/ReadVariableOp_4"
  input: "RMSprop/RMSprop/update_conv2d_2/kernel/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_2/kernel/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "conv2d_2/kernel"
  input: "RMSprop/RMSprop/update_conv2d_2/kernel/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_2/kernel/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv2d_2/kernel"
  input: "^RMSprop/RMSprop/update_conv2d_2/kernel/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_2/bias/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_2/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_2/bias/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d_2/bias/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_2/bias/mul"
  op: "Mul"
  input: "RMSprop/RMSprop/update_conv2d_2/bias/ReadVariableOp"
  input: "RMSprop/RMSprop/update_conv2d_2/bias/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_2/bias/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_2/bias/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_2/bias/sub"
  op: "Sub"
  input: "RMSprop/RMSprop/update_conv2d_2/bias/sub/x"
  input: "RMSprop/RMSprop/update_conv2d_2/bias/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_2/bias/Square"
  op: "Square"
  input: "RMSprop/gradients/conv2d_2/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_2/bias/mul_1"
  op: "Mul"
  input: "RMSprop/RMSprop/update_conv2d_2/bias/sub"
  input: "RMSprop/RMSprop/update_conv2d_2/bias/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_2/bias/add"
  op: "Add"
  input: "RMSprop/RMSprop/update_conv2d_2/bias/mul"
  input: "RMSprop/RMSprop/update_conv2d_2/bias/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_2/bias/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d_2/bias/rms"
  input: "RMSprop/RMSprop/update_conv2d_2/bias/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_2/bias/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d_2/bias/rms"
  input: "^RMSprop/RMSprop/update_conv2d_2/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_2/bias/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_2/bias/mul_2"
  op: "Mul"
  input: "RMSprop/RMSprop/update_conv2d_2/bias/ReadVariableOp_3"
  input: "RMSprop/gradients/conv2d_2/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_2/bias/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d_2/bias/rms"
  input: "^RMSprop/RMSprop/update_conv2d_2/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_2/bias/Sqrt"
  op: "Sqrt"
  input: "RMSprop/RMSprop/update_conv2d_2/bias/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_2/bias/add_1"
  op: "Add"
  input: "RMSprop/RMSprop/update_conv2d_2/bias/Sqrt"
  input: "RMSprop/RMSprop/update_conv2d_2/bias/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_2/bias/truediv"
  op: "RealDiv"
  input: "RMSprop/RMSprop/update_conv2d_2/bias/mul_2"
  input: "RMSprop/RMSprop/update_conv2d_2/bias/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_2/bias/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv2d_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_2/bias/sub_1"
  op: "Sub"
  input: "RMSprop/RMSprop/update_conv2d_2/bias/ReadVariableOp_4"
  input: "RMSprop/RMSprop/update_conv2d_2/bias/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_2/bias/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "conv2d_2/bias"
  input: "RMSprop/RMSprop/update_conv2d_2/bias/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_2/bias/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv2d_2/bias"
  input: "^RMSprop/RMSprop/update_conv2d_2/bias/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_3/kernel/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_3/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_3/kernel/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d_3/kernel/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_3/kernel/mul"
  op: "Mul"
  input: "RMSprop/RMSprop/update_conv2d_3/kernel/ReadVariableOp"
  input: "RMSprop/RMSprop/update_conv2d_3/kernel/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_3/kernel/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_3/kernel/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_3/kernel/sub"
  op: "Sub"
  input: "RMSprop/RMSprop/update_conv2d_3/kernel/sub/x"
  input: "RMSprop/RMSprop/update_conv2d_3/kernel/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_3/kernel/Square"
  op: "Square"
  input: "RMSprop/gradients/conv2d_3/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_3/kernel/mul_1"
  op: "Mul"
  input: "RMSprop/RMSprop/update_conv2d_3/kernel/sub"
  input: "RMSprop/RMSprop/update_conv2d_3/kernel/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_3/kernel/add"
  op: "Add"
  input: "RMSprop/RMSprop/update_conv2d_3/kernel/mul"
  input: "RMSprop/RMSprop/update_conv2d_3/kernel/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_3/kernel/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d_3/kernel/rms"
  input: "RMSprop/RMSprop/update_conv2d_3/kernel/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_3/kernel/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d_3/kernel/rms"
  input: "^RMSprop/RMSprop/update_conv2d_3/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_3/kernel/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_3/kernel/mul_2"
  op: "Mul"
  input: "RMSprop/RMSprop/update_conv2d_3/kernel/ReadVariableOp_3"
  input: "RMSprop/gradients/conv2d_3/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_3/kernel/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d_3/kernel/rms"
  input: "^RMSprop/RMSprop/update_conv2d_3/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_3/kernel/Sqrt"
  op: "Sqrt"
  input: "RMSprop/RMSprop/update_conv2d_3/kernel/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_3/kernel/add_1"
  op: "Add"
  input: "RMSprop/RMSprop/update_conv2d_3/kernel/Sqrt"
  input: "RMSprop/RMSprop/update_conv2d_3/kernel/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_3/kernel/truediv"
  op: "RealDiv"
  input: "RMSprop/RMSprop/update_conv2d_3/kernel/mul_2"
  input: "RMSprop/RMSprop/update_conv2d_3/kernel/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_3/kernel/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv2d_3/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_3/kernel/sub_1"
  op: "Sub"
  input: "RMSprop/RMSprop/update_conv2d_3/kernel/ReadVariableOp_4"
  input: "RMSprop/RMSprop/update_conv2d_3/kernel/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_3/kernel/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "conv2d_3/kernel"
  input: "RMSprop/RMSprop/update_conv2d_3/kernel/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_3/kernel/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv2d_3/kernel"
  input: "^RMSprop/RMSprop/update_conv2d_3/kernel/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_3/bias/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_3/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_3/bias/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d_3/bias/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_3/bias/mul"
  op: "Mul"
  input: "RMSprop/RMSprop/update_conv2d_3/bias/ReadVariableOp"
  input: "RMSprop/RMSprop/update_conv2d_3/bias/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_3/bias/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_3/bias/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_3/bias/sub"
  op: "Sub"
  input: "RMSprop/RMSprop/update_conv2d_3/bias/sub/x"
  input: "RMSprop/RMSprop/update_conv2d_3/bias/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_3/bias/Square"
  op: "Square"
  input: "RMSprop/gradients/conv2d_3/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_3/bias/mul_1"
  op: "Mul"
  input: "RMSprop/RMSprop/update_conv2d_3/bias/sub"
  input: "RMSprop/RMSprop/update_conv2d_3/bias/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_3/bias/add"
  op: "Add"
  input: "RMSprop/RMSprop/update_conv2d_3/bias/mul"
  input: "RMSprop/RMSprop/update_conv2d_3/bias/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_3/bias/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d_3/bias/rms"
  input: "RMSprop/RMSprop/update_conv2d_3/bias/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_3/bias/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d_3/bias/rms"
  input: "^RMSprop/RMSprop/update_conv2d_3/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_3/bias/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_3/bias/mul_2"
  op: "Mul"
  input: "RMSprop/RMSprop/update_conv2d_3/bias/ReadVariableOp_3"
  input: "RMSprop/gradients/conv2d_3/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_3/bias/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d_3/bias/rms"
  input: "^RMSprop/RMSprop/update_conv2d_3/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_3/bias/Sqrt"
  op: "Sqrt"
  input: "RMSprop/RMSprop/update_conv2d_3/bias/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_3/bias/add_1"
  op: "Add"
  input: "RMSprop/RMSprop/update_conv2d_3/bias/Sqrt"
  input: "RMSprop/RMSprop/update_conv2d_3/bias/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_3/bias/truediv"
  op: "RealDiv"
  input: "RMSprop/RMSprop/update_conv2d_3/bias/mul_2"
  input: "RMSprop/RMSprop/update_conv2d_3/bias/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_3/bias/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv2d_3/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_3/bias/sub_1"
  op: "Sub"
  input: "RMSprop/RMSprop/update_conv2d_3/bias/ReadVariableOp_4"
  input: "RMSprop/RMSprop/update_conv2d_3/bias/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_3/bias/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "conv2d_3/bias"
  input: "RMSprop/RMSprop/update_conv2d_3/bias/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_3/bias/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv2d_3/bias"
  input: "^RMSprop/RMSprop/update_conv2d_3/bias/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_4/kernel/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_4/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_4/kernel/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d_4/kernel/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_4/kernel/mul"
  op: "Mul"
  input: "RMSprop/RMSprop/update_conv2d_4/kernel/ReadVariableOp"
  input: "RMSprop/RMSprop/update_conv2d_4/kernel/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_4/kernel/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_4/kernel/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_4/kernel/sub"
  op: "Sub"
  input: "RMSprop/RMSprop/update_conv2d_4/kernel/sub/x"
  input: "RMSprop/RMSprop/update_conv2d_4/kernel/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_4/kernel/Square"
  op: "Square"
  input: "RMSprop/gradients/conv2d_4/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_4/kernel/mul_1"
  op: "Mul"
  input: "RMSprop/RMSprop/update_conv2d_4/kernel/sub"
  input: "RMSprop/RMSprop/update_conv2d_4/kernel/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_4/kernel/add"
  op: "Add"
  input: "RMSprop/RMSprop/update_conv2d_4/kernel/mul"
  input: "RMSprop/RMSprop/update_conv2d_4/kernel/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_4/kernel/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d_4/kernel/rms"
  input: "RMSprop/RMSprop/update_conv2d_4/kernel/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_4/kernel/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d_4/kernel/rms"
  input: "^RMSprop/RMSprop/update_conv2d_4/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_4/kernel/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_4/kernel/mul_2"
  op: "Mul"
  input: "RMSprop/RMSprop/update_conv2d_4/kernel/ReadVariableOp_3"
  input: "RMSprop/gradients/conv2d_4/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_4/kernel/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d_4/kernel/rms"
  input: "^RMSprop/RMSprop/update_conv2d_4/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_4/kernel/Sqrt"
  op: "Sqrt"
  input: "RMSprop/RMSprop/update_conv2d_4/kernel/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_4/kernel/add_1"
  op: "Add"
  input: "RMSprop/RMSprop/update_conv2d_4/kernel/Sqrt"
  input: "RMSprop/RMSprop/update_conv2d_4/kernel/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_4/kernel/truediv"
  op: "RealDiv"
  input: "RMSprop/RMSprop/update_conv2d_4/kernel/mul_2"
  input: "RMSprop/RMSprop/update_conv2d_4/kernel/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_4/kernel/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv2d_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_4/kernel/sub_1"
  op: "Sub"
  input: "RMSprop/RMSprop/update_conv2d_4/kernel/ReadVariableOp_4"
  input: "RMSprop/RMSprop/update_conv2d_4/kernel/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_4/kernel/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "conv2d_4/kernel"
  input: "RMSprop/RMSprop/update_conv2d_4/kernel/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_4/kernel/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv2d_4/kernel"
  input: "^RMSprop/RMSprop/update_conv2d_4/kernel/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_4/bias/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_4/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_4/bias/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d_4/bias/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_4/bias/mul"
  op: "Mul"
  input: "RMSprop/RMSprop/update_conv2d_4/bias/ReadVariableOp"
  input: "RMSprop/RMSprop/update_conv2d_4/bias/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_4/bias/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_4/bias/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_4/bias/sub"
  op: "Sub"
  input: "RMSprop/RMSprop/update_conv2d_4/bias/sub/x"
  input: "RMSprop/RMSprop/update_conv2d_4/bias/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_4/bias/Square"
  op: "Square"
  input: "RMSprop/gradients/conv2d_4/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_4/bias/mul_1"
  op: "Mul"
  input: "RMSprop/RMSprop/update_conv2d_4/bias/sub"
  input: "RMSprop/RMSprop/update_conv2d_4/bias/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_4/bias/add"
  op: "Add"
  input: "RMSprop/RMSprop/update_conv2d_4/bias/mul"
  input: "RMSprop/RMSprop/update_conv2d_4/bias/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_4/bias/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d_4/bias/rms"
  input: "RMSprop/RMSprop/update_conv2d_4/bias/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_4/bias/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d_4/bias/rms"
  input: "^RMSprop/RMSprop/update_conv2d_4/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_4/bias/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_4/bias/mul_2"
  op: "Mul"
  input: "RMSprop/RMSprop/update_conv2d_4/bias/ReadVariableOp_3"
  input: "RMSprop/gradients/conv2d_4/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_4/bias/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d_4/bias/rms"
  input: "^RMSprop/RMSprop/update_conv2d_4/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_4/bias/Sqrt"
  op: "Sqrt"
  input: "RMSprop/RMSprop/update_conv2d_4/bias/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_4/bias/add_1"
  op: "Add"
  input: "RMSprop/RMSprop/update_conv2d_4/bias/Sqrt"
  input: "RMSprop/RMSprop/update_conv2d_4/bias/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_4/bias/truediv"
  op: "RealDiv"
  input: "RMSprop/RMSprop/update_conv2d_4/bias/mul_2"
  input: "RMSprop/RMSprop/update_conv2d_4/bias/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_4/bias/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv2d_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_4/bias/sub_1"
  op: "Sub"
  input: "RMSprop/RMSprop/update_conv2d_4/bias/ReadVariableOp_4"
  input: "RMSprop/RMSprop/update_conv2d_4/bias/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_4/bias/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "conv2d_4/bias"
  input: "RMSprop/RMSprop/update_conv2d_4/bias/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_4/bias/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv2d_4/bias"
  input: "^RMSprop/RMSprop/update_conv2d_4/bias/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_5/kernel/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_5/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_5/kernel/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d_5/kernel/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_5/kernel/mul"
  op: "Mul"
  input: "RMSprop/RMSprop/update_conv2d_5/kernel/ReadVariableOp"
  input: "RMSprop/RMSprop/update_conv2d_5/kernel/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_5/kernel/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_5/kernel/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_5/kernel/sub"
  op: "Sub"
  input: "RMSprop/RMSprop/update_conv2d_5/kernel/sub/x"
  input: "RMSprop/RMSprop/update_conv2d_5/kernel/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_5/kernel/Square"
  op: "Square"
  input: "RMSprop/gradients/conv2d_5/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_5/kernel/mul_1"
  op: "Mul"
  input: "RMSprop/RMSprop/update_conv2d_5/kernel/sub"
  input: "RMSprop/RMSprop/update_conv2d_5/kernel/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_5/kernel/add"
  op: "Add"
  input: "RMSprop/RMSprop/update_conv2d_5/kernel/mul"
  input: "RMSprop/RMSprop/update_conv2d_5/kernel/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_5/kernel/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d_5/kernel/rms"
  input: "RMSprop/RMSprop/update_conv2d_5/kernel/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_5/kernel/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d_5/kernel/rms"
  input: "^RMSprop/RMSprop/update_conv2d_5/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_5/kernel/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_5/kernel/mul_2"
  op: "Mul"
  input: "RMSprop/RMSprop/update_conv2d_5/kernel/ReadVariableOp_3"
  input: "RMSprop/gradients/conv2d_5/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_5/kernel/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d_5/kernel/rms"
  input: "^RMSprop/RMSprop/update_conv2d_5/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_5/kernel/Sqrt"
  op: "Sqrt"
  input: "RMSprop/RMSprop/update_conv2d_5/kernel/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_5/kernel/add_1"
  op: "Add"
  input: "RMSprop/RMSprop/update_conv2d_5/kernel/Sqrt"
  input: "RMSprop/RMSprop/update_conv2d_5/kernel/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_5/kernel/truediv"
  op: "RealDiv"
  input: "RMSprop/RMSprop/update_conv2d_5/kernel/mul_2"
  input: "RMSprop/RMSprop/update_conv2d_5/kernel/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_5/kernel/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv2d_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_5/kernel/sub_1"
  op: "Sub"
  input: "RMSprop/RMSprop/update_conv2d_5/kernel/ReadVariableOp_4"
  input: "RMSprop/RMSprop/update_conv2d_5/kernel/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_5/kernel/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "conv2d_5/kernel"
  input: "RMSprop/RMSprop/update_conv2d_5/kernel/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_5/kernel/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv2d_5/kernel"
  input: "^RMSprop/RMSprop/update_conv2d_5/kernel/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_5/bias/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_5/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_5/bias/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d_5/bias/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_5/bias/mul"
  op: "Mul"
  input: "RMSprop/RMSprop/update_conv2d_5/bias/ReadVariableOp"
  input: "RMSprop/RMSprop/update_conv2d_5/bias/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_5/bias/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_5/bias/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_5/bias/sub"
  op: "Sub"
  input: "RMSprop/RMSprop/update_conv2d_5/bias/sub/x"
  input: "RMSprop/RMSprop/update_conv2d_5/bias/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_5/bias/Square"
  op: "Square"
  input: "RMSprop/gradients/conv2d_5/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_5/bias/mul_1"
  op: "Mul"
  input: "RMSprop/RMSprop/update_conv2d_5/bias/sub"
  input: "RMSprop/RMSprop/update_conv2d_5/bias/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_5/bias/add"
  op: "Add"
  input: "RMSprop/RMSprop/update_conv2d_5/bias/mul"
  input: "RMSprop/RMSprop/update_conv2d_5/bias/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_5/bias/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d_5/bias/rms"
  input: "RMSprop/RMSprop/update_conv2d_5/bias/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_5/bias/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d_5/bias/rms"
  input: "^RMSprop/RMSprop/update_conv2d_5/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_5/bias/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_5/bias/mul_2"
  op: "Mul"
  input: "RMSprop/RMSprop/update_conv2d_5/bias/ReadVariableOp_3"
  input: "RMSprop/gradients/conv2d_5/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_5/bias/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/conv2d_5/bias/rms"
  input: "^RMSprop/RMSprop/update_conv2d_5/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_5/bias/Sqrt"
  op: "Sqrt"
  input: "RMSprop/RMSprop/update_conv2d_5/bias/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_5/bias/add_1"
  op: "Add"
  input: "RMSprop/RMSprop/update_conv2d_5/bias/Sqrt"
  input: "RMSprop/RMSprop/update_conv2d_5/bias/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_5/bias/truediv"
  op: "RealDiv"
  input: "RMSprop/RMSprop/update_conv2d_5/bias/mul_2"
  input: "RMSprop/RMSprop/update_conv2d_5/bias/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_5/bias/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv2d_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_5/bias/sub_1"
  op: "Sub"
  input: "RMSprop/RMSprop/update_conv2d_5/bias/ReadVariableOp_4"
  input: "RMSprop/RMSprop/update_conv2d_5/bias/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_5/bias/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "conv2d_5/bias"
  input: "RMSprop/RMSprop/update_conv2d_5/bias/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_conv2d_5/bias/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv2d_5/bias"
  input: "^RMSprop/RMSprop/update_conv2d_5/bias/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense/kernel/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense/kernel/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/dense/kernel/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense/kernel/mul"
  op: "Mul"
  input: "RMSprop/RMSprop/update_dense/kernel/ReadVariableOp"
  input: "RMSprop/RMSprop/update_dense/kernel/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense/kernel/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense/kernel/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense/kernel/sub"
  op: "Sub"
  input: "RMSprop/RMSprop/update_dense/kernel/sub/x"
  input: "RMSprop/RMSprop/update_dense/kernel/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense/kernel/Square"
  op: "Square"
  input: "RMSprop/gradients/dense/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense/kernel/mul_1"
  op: "Mul"
  input: "RMSprop/RMSprop/update_dense/kernel/sub"
  input: "RMSprop/RMSprop/update_dense/kernel/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense/kernel/add"
  op: "Add"
  input: "RMSprop/RMSprop/update_dense/kernel/mul"
  input: "RMSprop/RMSprop/update_dense/kernel/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense/kernel/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop/dense/kernel/rms"
  input: "RMSprop/RMSprop/update_dense/kernel/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense/kernel/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop/dense/kernel/rms"
  input: "^RMSprop/RMSprop/update_dense/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense/kernel/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense/kernel/mul_2"
  op: "Mul"
  input: "RMSprop/RMSprop/update_dense/kernel/ReadVariableOp_3"
  input: "RMSprop/gradients/dense/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense/kernel/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/dense/kernel/rms"
  input: "^RMSprop/RMSprop/update_dense/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense/kernel/Sqrt"
  op: "Sqrt"
  input: "RMSprop/RMSprop/update_dense/kernel/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense/kernel/add_1"
  op: "Add"
  input: "RMSprop/RMSprop/update_dense/kernel/Sqrt"
  input: "RMSprop/RMSprop/update_dense/kernel/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense/kernel/truediv"
  op: "RealDiv"
  input: "RMSprop/RMSprop/update_dense/kernel/mul_2"
  input: "RMSprop/RMSprop/update_dense/kernel/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense/kernel/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "dense/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense/kernel/sub_1"
  op: "Sub"
  input: "RMSprop/RMSprop/update_dense/kernel/ReadVariableOp_4"
  input: "RMSprop/RMSprop/update_dense/kernel/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense/kernel/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "dense/kernel"
  input: "RMSprop/RMSprop/update_dense/kernel/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense/kernel/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "dense/kernel"
  input: "^RMSprop/RMSprop/update_dense/kernel/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense/bias/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense/bias/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/dense/bias/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense/bias/mul"
  op: "Mul"
  input: "RMSprop/RMSprop/update_dense/bias/ReadVariableOp"
  input: "RMSprop/RMSprop/update_dense/bias/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense/bias/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense/bias/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense/bias/sub"
  op: "Sub"
  input: "RMSprop/RMSprop/update_dense/bias/sub/x"
  input: "RMSprop/RMSprop/update_dense/bias/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense/bias/Square"
  op: "Square"
  input: "RMSprop/gradients/dense/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense/bias/mul_1"
  op: "Mul"
  input: "RMSprop/RMSprop/update_dense/bias/sub"
  input: "RMSprop/RMSprop/update_dense/bias/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense/bias/add"
  op: "Add"
  input: "RMSprop/RMSprop/update_dense/bias/mul"
  input: "RMSprop/RMSprop/update_dense/bias/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense/bias/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop/dense/bias/rms"
  input: "RMSprop/RMSprop/update_dense/bias/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense/bias/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop/dense/bias/rms"
  input: "^RMSprop/RMSprop/update_dense/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense/bias/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense/bias/mul_2"
  op: "Mul"
  input: "RMSprop/RMSprop/update_dense/bias/ReadVariableOp_3"
  input: "RMSprop/gradients/dense/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense/bias/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/dense/bias/rms"
  input: "^RMSprop/RMSprop/update_dense/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense/bias/Sqrt"
  op: "Sqrt"
  input: "RMSprop/RMSprop/update_dense/bias/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense/bias/add_1"
  op: "Add"
  input: "RMSprop/RMSprop/update_dense/bias/Sqrt"
  input: "RMSprop/RMSprop/update_dense/bias/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense/bias/truediv"
  op: "RealDiv"
  input: "RMSprop/RMSprop/update_dense/bias/mul_2"
  input: "RMSprop/RMSprop/update_dense/bias/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense/bias/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "dense/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense/bias/sub_1"
  op: "Sub"
  input: "RMSprop/RMSprop/update_dense/bias/ReadVariableOp_4"
  input: "RMSprop/RMSprop/update_dense/bias/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense/bias/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "dense/bias"
  input: "RMSprop/RMSprop/update_dense/bias/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense/bias/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "dense/bias"
  input: "^RMSprop/RMSprop/update_dense/bias/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense_1/kernel/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense_1/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense_1/kernel/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/dense_1/kernel/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense_1/kernel/mul"
  op: "Mul"
  input: "RMSprop/RMSprop/update_dense_1/kernel/ReadVariableOp"
  input: "RMSprop/RMSprop/update_dense_1/kernel/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense_1/kernel/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense_1/kernel/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense_1/kernel/sub"
  op: "Sub"
  input: "RMSprop/RMSprop/update_dense_1/kernel/sub/x"
  input: "RMSprop/RMSprop/update_dense_1/kernel/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense_1/kernel/Square"
  op: "Square"
  input: "RMSprop/gradients/dense_1/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense_1/kernel/mul_1"
  op: "Mul"
  input: "RMSprop/RMSprop/update_dense_1/kernel/sub"
  input: "RMSprop/RMSprop/update_dense_1/kernel/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense_1/kernel/add"
  op: "Add"
  input: "RMSprop/RMSprop/update_dense_1/kernel/mul"
  input: "RMSprop/RMSprop/update_dense_1/kernel/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense_1/kernel/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop/dense_1/kernel/rms"
  input: "RMSprop/RMSprop/update_dense_1/kernel/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense_1/kernel/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop/dense_1/kernel/rms"
  input: "^RMSprop/RMSprop/update_dense_1/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense_1/kernel/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense_1/kernel/mul_2"
  op: "Mul"
  input: "RMSprop/RMSprop/update_dense_1/kernel/ReadVariableOp_3"
  input: "RMSprop/gradients/dense_1/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense_1/kernel/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/dense_1/kernel/rms"
  input: "^RMSprop/RMSprop/update_dense_1/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense_1/kernel/Sqrt"
  op: "Sqrt"
  input: "RMSprop/RMSprop/update_dense_1/kernel/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense_1/kernel/add_1"
  op: "Add"
  input: "RMSprop/RMSprop/update_dense_1/kernel/Sqrt"
  input: "RMSprop/RMSprop/update_dense_1/kernel/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense_1/kernel/truediv"
  op: "RealDiv"
  input: "RMSprop/RMSprop/update_dense_1/kernel/mul_2"
  input: "RMSprop/RMSprop/update_dense_1/kernel/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense_1/kernel/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "dense_1/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense_1/kernel/sub_1"
  op: "Sub"
  input: "RMSprop/RMSprop/update_dense_1/kernel/ReadVariableOp_4"
  input: "RMSprop/RMSprop/update_dense_1/kernel/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense_1/kernel/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "dense_1/kernel"
  input: "RMSprop/RMSprop/update_dense_1/kernel/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense_1/kernel/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "dense_1/kernel"
  input: "^RMSprop/RMSprop/update_dense_1/kernel/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense_1/bias/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense_1/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense_1/bias/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/dense_1/bias/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense_1/bias/mul"
  op: "Mul"
  input: "RMSprop/RMSprop/update_dense_1/bias/ReadVariableOp"
  input: "RMSprop/RMSprop/update_dense_1/bias/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense_1/bias/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense_1/bias/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense_1/bias/sub"
  op: "Sub"
  input: "RMSprop/RMSprop/update_dense_1/bias/sub/x"
  input: "RMSprop/RMSprop/update_dense_1/bias/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense_1/bias/Square"
  op: "Square"
  input: "RMSprop/gradients/dense_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense_1/bias/mul_1"
  op: "Mul"
  input: "RMSprop/RMSprop/update_dense_1/bias/sub"
  input: "RMSprop/RMSprop/update_dense_1/bias/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense_1/bias/add"
  op: "Add"
  input: "RMSprop/RMSprop/update_dense_1/bias/mul"
  input: "RMSprop/RMSprop/update_dense_1/bias/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense_1/bias/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop/dense_1/bias/rms"
  input: "RMSprop/RMSprop/update_dense_1/bias/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense_1/bias/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop/dense_1/bias/rms"
  input: "^RMSprop/RMSprop/update_dense_1/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense_1/bias/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense_1/bias/mul_2"
  op: "Mul"
  input: "RMSprop/RMSprop/update_dense_1/bias/ReadVariableOp_3"
  input: "RMSprop/gradients/dense_1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense_1/bias/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/dense_1/bias/rms"
  input: "^RMSprop/RMSprop/update_dense_1/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense_1/bias/Sqrt"
  op: "Sqrt"
  input: "RMSprop/RMSprop/update_dense_1/bias/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense_1/bias/add_1"
  op: "Add"
  input: "RMSprop/RMSprop/update_dense_1/bias/Sqrt"
  input: "RMSprop/RMSprop/update_dense_1/bias/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense_1/bias/truediv"
  op: "RealDiv"
  input: "RMSprop/RMSprop/update_dense_1/bias/mul_2"
  input: "RMSprop/RMSprop/update_dense_1/bias/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense_1/bias/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "dense_1/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense_1/bias/sub_1"
  op: "Sub"
  input: "RMSprop/RMSprop/update_dense_1/bias/ReadVariableOp_4"
  input: "RMSprop/RMSprop/update_dense_1/bias/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense_1/bias/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "dense_1/bias"
  input: "RMSprop/RMSprop/update_dense_1/bias/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/update_dense_1/bias/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "dense_1/bias"
  input: "^RMSprop/RMSprop/update_dense_1/bias/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop/RMSprop/Const"
  op: "Const"
  input: "^RMSprop/RMSprop/update_conv2d/bias/AssignVariableOp_1"
  input: "^RMSprop/RMSprop/update_conv2d/kernel/AssignVariableOp_1"
  input: "^RMSprop/RMSprop/update_conv2d_1/bias/AssignVariableOp_1"
  input: "^RMSprop/RMSprop/update_conv2d_1/kernel/AssignVariableOp_1"
  input: "^RMSprop/RMSprop/update_conv2d_2/bias/AssignVariableOp_1"
  input: "^RMSprop/RMSprop/update_conv2d_2/kernel/AssignVariableOp_1"
  input: "^RMSprop/RMSprop/update_conv2d_3/bias/AssignVariableOp_1"
  input: "^RMSprop/RMSprop/update_conv2d_3/kernel/AssignVariableOp_1"
  input: "^RMSprop/RMSprop/update_conv2d_4/bias/AssignVariableOp_1"
  input: "^RMSprop/RMSprop/update_conv2d_4/kernel/AssignVariableOp_1"
  input: "^RMSprop/RMSprop/update_conv2d_5/bias/AssignVariableOp_1"
  input: "^RMSprop/RMSprop/update_conv2d_5/kernel/AssignVariableOp_1"
  input: "^RMSprop/RMSprop/update_dense/bias/AssignVariableOp_1"
  input: "^RMSprop/RMSprop/update_dense/kernel/AssignVariableOp_1"
  input: "^RMSprop/RMSprop/update_dense_1/bias/AssignVariableOp_1"
  input: "^RMSprop/RMSprop/update_dense_1/kernel/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "RMSprop/RMSprop/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "RMSprop/iter"
  input: "RMSprop/RMSprop/Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "RMSprop/RMSprop/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop/iter"
  input: "^RMSprop/RMSprop/AssignAddVariableOp"
  input: "^RMSprop/RMSprop/update_conv2d/bias/AssignVariableOp_1"
  input: "^RMSprop/RMSprop/update_conv2d/kernel/AssignVariableOp_1"
  input: "^RMSprop/RMSprop/update_conv2d_1/bias/AssignVariableOp_1"
  input: "^RMSprop/RMSprop/update_conv2d_1/kernel/AssignVariableOp_1"
  input: "^RMSprop/RMSprop/update_conv2d_2/bias/AssignVariableOp_1"
  input: "^RMSprop/RMSprop/update_conv2d_2/kernel/AssignVariableOp_1"
  input: "^RMSprop/RMSprop/update_conv2d_3/bias/AssignVariableOp_1"
  input: "^RMSprop/RMSprop/update_conv2d_3/kernel/AssignVariableOp_1"
  input: "^RMSprop/RMSprop/update_conv2d_4/bias/AssignVariableOp_1"
  input: "^RMSprop/RMSprop/update_conv2d_4/kernel/AssignVariableOp_1"
  input: "^RMSprop/RMSprop/update_conv2d_5/bias/AssignVariableOp_1"
  input: "^RMSprop/RMSprop/update_conv2d_5/kernel/AssignVariableOp_1"
  input: "^RMSprop/RMSprop/update_dense/bias/AssignVariableOp_1"
  input: "^RMSprop/RMSprop/update_dense/kernel/AssignVariableOp_1"
  input: "^RMSprop/RMSprop/update_dense_1/bias/AssignVariableOp_1"
  input: "^RMSprop/RMSprop/update_dense_1/kernel/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training_1/group_deps"
  op: "NoOp"
  input: "^RMSprop/RMSprop/AssignAddVariableOp"
  input: "^loss/mul"
}
node {
  name: "Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "AssignVariableOp"
  op: "AssignVariableOp"
  input: "total"
  input: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp"
  op: "ReadVariableOp"
  input: "total"
  input: "^AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "count"
  input: "Placeholder_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "count"
  input: "^AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "RMSprop/decay"
}
node {
  name: "VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "RMSprop/rho"
}
node {
  name: "VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "RMSprop/conv2d_1/bias/rms"
}
node {
  name: "VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "RMSprop/conv2d_1/kernel/rms"
}
node {
  name: "VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "RMSprop/conv2d_5/bias/rms"
}
node {
  name: "VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "RMSprop/momentum"
}
node {
  name: "VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "RMSprop/conv2d_4/kernel/rms"
}
node {
  name: "VarIsInitializedOp_25"
  op: "VarIsInitializedOp"
  input: "RMSprop/conv2d/kernel/rms"
}
node {
  name: "VarIsInitializedOp_26"
  op: "VarIsInitializedOp"
  input: "RMSprop/conv2d_4/bias/rms"
}
node {
  name: "VarIsInitializedOp_27"
  op: "VarIsInitializedOp"
  input: "RMSprop/conv2d_5/kernel/rms"
}
node {
  name: "VarIsInitializedOp_28"
  op: "VarIsInitializedOp"
  input: "RMSprop/dense/kernel/rms"
}
node {
  name: "VarIsInitializedOp_29"
  op: "VarIsInitializedOp"
  input: "RMSprop/dense/bias/rms"
}
node {
  name: "VarIsInitializedOp_30"
  op: "VarIsInitializedOp"
  input: "RMSprop/conv2d/bias/rms"
}
node {
  name: "VarIsInitializedOp_31"
  op: "VarIsInitializedOp"
  input: "RMSprop/conv2d_2/kernel/rms"
}
node {
  name: "VarIsInitializedOp_32"
  op: "VarIsInitializedOp"
  input: "RMSprop/dense_1/bias/rms"
}
node {
  name: "VarIsInitializedOp_33"
  op: "VarIsInitializedOp"
  input: "RMSprop/conv2d_2/bias/rms"
}
node {
  name: "VarIsInitializedOp_34"
  op: "VarIsInitializedOp"
  input: "RMSprop/learning_rate"
}
node {
  name: "VarIsInitializedOp_35"
  op: "VarIsInitializedOp"
  input: "RMSprop/conv2d_3/kernel/rms"
}
node {
  name: "VarIsInitializedOp_36"
  op: "VarIsInitializedOp"
  input: "RMSprop/dense_1/kernel/rms"
}
node {
  name: "VarIsInitializedOp_37"
  op: "VarIsInitializedOp"
  input: "RMSprop/iter"
}
node {
  name: "VarIsInitializedOp_38"
  op: "VarIsInitializedOp"
  input: "RMSprop/conv2d_3/bias/rms"
}
node {
  name: "init_1"
  op: "NoOp"
  input: "^RMSprop/conv2d/bias/rms/Assign"
  input: "^RMSprop/conv2d/kernel/rms/Assign"
  input: "^RMSprop/conv2d_1/bias/rms/Assign"
  input: "^RMSprop/conv2d_1/kernel/rms/Assign"
  input: "^RMSprop/conv2d_2/bias/rms/Assign"
  input: "^RMSprop/conv2d_2/kernel/rms/Assign"
  input: "^RMSprop/conv2d_3/bias/rms/Assign"
  input: "^RMSprop/conv2d_3/kernel/rms/Assign"
  input: "^RMSprop/conv2d_4/bias/rms/Assign"
  input: "^RMSprop/conv2d_4/kernel/rms/Assign"
  input: "^RMSprop/conv2d_5/bias/rms/Assign"
  input: "^RMSprop/conv2d_5/kernel/rms/Assign"
  input: "^RMSprop/decay/Assign"
  input: "^RMSprop/dense/bias/rms/Assign"
  input: "^RMSprop/dense/kernel/rms/Assign"
  input: "^RMSprop/dense_1/bias/rms/Assign"
  input: "^RMSprop/dense_1/kernel/rms/Assign"
  input: "^RMSprop/iter/Assign"
  input: "^RMSprop/learning_rate/Assign"
  input: "^RMSprop/momentum/Assign"
  input: "^RMSprop/rho/Assign"
}
node {
  name: "evaluation/group_deps"
  op: "NoOp"
  input: "^loss/mul"
}
node {
  name: "predict/group_deps"
  op: "NoOp"
  input: "^activation_5/Softmax"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^max_pooling2d/MaxPool"
}
node {
  name: "conv2d_6_input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 1
        }
        dim {
          size: 120
        }
        dim {
          size: 120
        }
      }
    }
  }
}
node {
  name: "conv2d_6/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_6/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.14213381707668304
      }
    }
  }
}
node {
  name: "conv2d_6/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14213381707668304
      }
    }
  }
}
node {
  name: "conv2d_6/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_6/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_6/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_6/kernel/Initializer/random_uniform/max"
  input: "conv2d_6/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/kernel"
      }
    }
  }
}
node {
  name: "conv2d_6/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_6/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_6/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/kernel"
      }
    }
  }
}
node {
  name: "conv2d_6/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_6/kernel/Initializer/random_uniform/mul"
  input: "conv2d_6/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/kernel"
      }
    }
  }
}
node {
  name: "conv2d_6/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_6/kernel"
    }
  }
}
node {
  name: "conv2d_6/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_6/kernel"
}
node {
  name: "conv2d_6/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_6/kernel"
  input: "conv2d_6/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_6/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_6/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_6/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_6/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_6/bias"
    }
  }
}
node {
  name: "conv2d_6/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_6/bias"
}
node {
  name: "conv2d_6/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_6/bias"
  input: "conv2d_6/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_6/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_6/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_6/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_6/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_6/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_6/Conv2D"
  op: "Conv2D"
  input: "conv2d_6_input"
  input: "conv2d_6/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_6/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_6/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_6/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_6/Conv2D"
  input: "conv2d_6/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "activation_6/activation_6/Identity"
  op: "Identity"
  input: "conv2d_6/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_7/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_7/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10206207633018494
      }
    }
  }
}
node {
  name: "conv2d_7/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10206207633018494
      }
    }
  }
}
node {
  name: "conv2d_7/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_7/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_7/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_7/kernel/Initializer/random_uniform/max"
  input: "conv2d_7/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
}
node {
  name: "conv2d_7/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_7/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_7/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
}
node {
  name: "conv2d_7/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_7/kernel/Initializer/random_uniform/mul"
  input: "conv2d_7/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
}
node {
  name: "conv2d_7/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_7/kernel"
    }
  }
}
node {
  name: "conv2d_7/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_7/kernel"
}
node {
  name: "conv2d_7/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_7/kernel"
  input: "conv2d_7/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_7/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_7/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_7/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_7/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_7/bias"
    }
  }
}
node {
  name: "conv2d_7/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_7/bias"
}
node {
  name: "conv2d_7/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_7/bias"
  input: "conv2d_7/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_7/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_7/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_7/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_7/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_7/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_7/Conv2D"
  op: "Conv2D"
  input: "activation_6/activation_6/Identity"
  input: "conv2d_7/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_7/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_7/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_7/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_7/Conv2D"
  input: "conv2d_7/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "max_pooling2d_2/MaxPool"
  op: "MaxPool"
  input: "conv2d_7/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
}
node {
  name: "dropout_4/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_4/cond/switch_t"
  op: "Identity"
  input: "dropout_4/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_4/cond/switch_f"
  op: "Identity"
  input: "dropout_4/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_4/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_4/cond/dropout/rate"
  op: "Const"
  input: "^dropout_4/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "dropout_4/cond/dropout/Shape"
  op: "Shape"
  input: "dropout_4/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout_4/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "max_pooling2d_2/MaxPool"
  input: "dropout_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@max_pooling2d_2/MaxPool"
      }
    }
  }
}
node {
  name: "dropout_4/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^dropout_4/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_4/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^dropout_4/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_4/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout_4/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout_4/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "dropout_4/cond/dropout/random_uniform/max"
  input: "dropout_4/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_4/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "dropout_4/cond/dropout/random_uniform/RandomUniform"
  input: "dropout_4/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_4/cond/dropout/random_uniform"
  op: "Add"
  input: "dropout_4/cond/dropout/random_uniform/mul"
  input: "dropout_4/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_4/cond/dropout/sub/x"
  op: "Const"
  input: "^dropout_4/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_4/cond/dropout/sub"
  op: "Sub"
  input: "dropout_4/cond/dropout/sub/x"
  input: "dropout_4/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_4/cond/dropout/truediv/x"
  op: "Const"
  input: "^dropout_4/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_4/cond/dropout/truediv"
  op: "RealDiv"
  input: "dropout_4/cond/dropout/truediv/x"
  input: "dropout_4/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_4/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "dropout_4/cond/dropout/random_uniform"
  input: "dropout_4/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_4/cond/dropout/mul"
  op: "Mul"
  input: "dropout_4/cond/dropout/Shape/Switch:1"
  input: "dropout_4/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_4/cond/dropout/Cast"
  op: "Cast"
  input: "dropout_4/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "dropout_4/cond/dropout/mul_1"
  op: "Mul"
  input: "dropout_4/cond/dropout/mul"
  input: "dropout_4/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_4/cond/Identity"
  op: "Identity"
  input: "dropout_4/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_4/cond/Identity/Switch"
  op: "Switch"
  input: "max_pooling2d_2/MaxPool"
  input: "dropout_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@max_pooling2d_2/MaxPool"
      }
    }
  }
}
node {
  name: "dropout_4/cond/Merge"
  op: "Merge"
  input: "dropout_4/cond/Identity"
  input: "dropout_4/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_8/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_8/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0833333358168602
      }
    }
  }
}
node {
  name: "conv2d_8/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0833333358168602
      }
    }
  }
}
node {
  name: "conv2d_8/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_8/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_8/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_8/kernel/Initializer/random_uniform/max"
  input: "conv2d_8/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
}
node {
  name: "conv2d_8/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_8/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_8/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
}
node {
  name: "conv2d_8/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_8/kernel/Initializer/random_uniform/mul"
  input: "conv2d_8/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
}
node {
  name: "conv2d_8/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_8/kernel"
    }
  }
}
node {
  name: "conv2d_8/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_8/kernel"
}
node {
  name: "conv2d_8/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_8/kernel"
  input: "conv2d_8/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_8/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_8/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_8/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_8/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_8/bias"
    }
  }
}
node {
  name: "conv2d_8/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_8/bias"
}
node {
  name: "conv2d_8/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_8/bias"
  input: "conv2d_8/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_8/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_8/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_8/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_8/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_8/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_8/Conv2D"
  op: "Conv2D"
  input: "dropout_4/cond/Merge"
  input: "conv2d_8/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_8/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_8/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_8/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_8/Conv2D"
  input: "conv2d_8/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "activation_7/activation_7/Identity"
  op: "Identity"
  input: "conv2d_8/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_9/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_9/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07216878235340118
      }
    }
  }
}
node {
  name: "conv2d_9/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07216878235340118
      }
    }
  }
}
node {
  name: "conv2d_9/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_9/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_9/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_9/kernel/Initializer/random_uniform/max"
  input: "conv2d_9/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
}
node {
  name: "conv2d_9/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_9/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_9/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
}
node {
  name: "conv2d_9/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_9/kernel/Initializer/random_uniform/mul"
  input: "conv2d_9/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
}
node {
  name: "conv2d_9/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_9/kernel"
    }
  }
}
node {
  name: "conv2d_9/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_9/kernel"
}
node {
  name: "conv2d_9/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_9/kernel"
  input: "conv2d_9/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_9/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_9/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_9/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_9/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_9/bias"
    }
  }
}
node {
  name: "conv2d_9/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_9/bias"
}
node {
  name: "conv2d_9/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_9/bias"
  input: "conv2d_9/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_9/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_9/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_9/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_9/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_9/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_9/Conv2D"
  op: "Conv2D"
  input: "activation_7/activation_7/Identity"
  input: "conv2d_9/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_9/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_9/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_9/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_9/Conv2D"
  input: "conv2d_9/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "max_pooling2d_3/MaxPool"
  op: "MaxPool"
  input: "conv2d_9/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
}
node {
  name: "dropout_5/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_5/cond/switch_t"
  op: "Identity"
  input: "dropout_5/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_5/cond/switch_f"
  op: "Identity"
  input: "dropout_5/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_5/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_5/cond/dropout/rate"
  op: "Const"
  input: "^dropout_5/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "dropout_5/cond/dropout/Shape"
  op: "Shape"
  input: "dropout_5/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout_5/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "max_pooling2d_3/MaxPool"
  input: "dropout_5/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@max_pooling2d_3/MaxPool"
      }
    }
  }
}
node {
  name: "dropout_5/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^dropout_5/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_5/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^dropout_5/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_5/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout_5/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout_5/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "dropout_5/cond/dropout/random_uniform/max"
  input: "dropout_5/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_5/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "dropout_5/cond/dropout/random_uniform/RandomUniform"
  input: "dropout_5/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_5/cond/dropout/random_uniform"
  op: "Add"
  input: "dropout_5/cond/dropout/random_uniform/mul"
  input: "dropout_5/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_5/cond/dropout/sub/x"
  op: "Const"
  input: "^dropout_5/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_5/cond/dropout/sub"
  op: "Sub"
  input: "dropout_5/cond/dropout/sub/x"
  input: "dropout_5/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_5/cond/dropout/truediv/x"
  op: "Const"
  input: "^dropout_5/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_5/cond/dropout/truediv"
  op: "RealDiv"
  input: "dropout_5/cond/dropout/truediv/x"
  input: "dropout_5/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_5/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "dropout_5/cond/dropout/random_uniform"
  input: "dropout_5/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_5/cond/dropout/mul"
  op: "Mul"
  input: "dropout_5/cond/dropout/Shape/Switch:1"
  input: "dropout_5/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_5/cond/dropout/Cast"
  op: "Cast"
  input: "dropout_5/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "dropout_5/cond/dropout/mul_1"
  op: "Mul"
  input: "dropout_5/cond/dropout/mul"
  input: "dropout_5/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_5/cond/Identity"
  op: "Identity"
  input: "dropout_5/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_5/cond/Identity/Switch"
  op: "Switch"
  input: "max_pooling2d_3/MaxPool"
  input: "dropout_5/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@max_pooling2d_3/MaxPool"
      }
    }
  }
}
node {
  name: "dropout_5/cond/Merge"
  op: "Merge"
  input: "dropout_5/cond/Identity"
  input: "dropout_5/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_10/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_10/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0589255653321743
      }
    }
  }
}
node {
  name: "conv2d_10/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "conv2d_10/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_10/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_10/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_10/kernel/Initializer/random_uniform/max"
  input: "conv2d_10/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
}
node {
  name: "conv2d_10/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_10/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_10/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
}
node {
  name: "conv2d_10/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_10/kernel/Initializer/random_uniform/mul"
  input: "conv2d_10/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
}
node {
  name: "conv2d_10/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_10/kernel"
    }
  }
}
node {
  name: "conv2d_10/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_10/kernel"
}
node {
  name: "conv2d_10/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_10/kernel"
  input: "conv2d_10/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_10/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_10/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_10/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_10/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_10/bias"
    }
  }
}
node {
  name: "conv2d_10/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_10/bias"
}
node {
  name: "conv2d_10/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_10/bias"
  input: "conv2d_10/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_10/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_10/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_10/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_10/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_10/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_10/Conv2D"
  op: "Conv2D"
  input: "dropout_5/cond/Merge"
  input: "conv2d_10/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_10/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_10/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_10/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_10/Conv2D"
  input: "conv2d_10/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "activation_8/activation_8/Identity"
  op: "Identity"
  input: "conv2d_10/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_11/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_11/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05103103816509247
      }
    }
  }
}
node {
  name: "conv2d_11/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05103103816509247
      }
    }
  }
}
node {
  name: "conv2d_11/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_11/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_11/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_11/kernel/Initializer/random_uniform/max"
  input: "conv2d_11/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
}
node {
  name: "conv2d_11/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_11/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_11/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
}
node {
  name: "conv2d_11/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_11/kernel/Initializer/random_uniform/mul"
  input: "conv2d_11/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
}
node {
  name: "conv2d_11/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_11/kernel"
    }
  }
}
node {
  name: "conv2d_11/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_11/kernel"
}
node {
  name: "conv2d_11/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_11/kernel"
  input: "conv2d_11/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_11/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_11/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_11/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_11/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_11/bias"
    }
  }
}
node {
  name: "conv2d_11/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_11/bias"
}
node {
  name: "conv2d_11/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_11/bias"
  input: "conv2d_11/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_11/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_11/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_11/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_11/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_11/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_11/Conv2D"
  op: "Conv2D"
  input: "activation_8/activation_8/Identity"
  input: "conv2d_11/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_11/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_11/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_11/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_11/Conv2D"
  input: "conv2d_11/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "activation_9/activation_9/Identity"
  op: "Identity"
  input: "conv2d_11/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_6/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_6/cond/switch_t"
  op: "Identity"
  input: "dropout_6/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_6/cond/switch_f"
  op: "Identity"
  input: "dropout_6/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_6/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_6/cond/dropout/rate"
  op: "Const"
  input: "^dropout_6/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "dropout_6/cond/dropout/Shape"
  op: "Shape"
  input: "dropout_6/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout_6/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "activation_9/activation_9/Identity"
  input: "dropout_6/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@activation_9/activation_9/Identity"
      }
    }
  }
}
node {
  name: "dropout_6/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^dropout_6/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_6/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^dropout_6/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_6/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout_6/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout_6/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "dropout_6/cond/dropout/random_uniform/max"
  input: "dropout_6/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_6/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "dropout_6/cond/dropout/random_uniform/RandomUniform"
  input: "dropout_6/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_6/cond/dropout/random_uniform"
  op: "Add"
  input: "dropout_6/cond/dropout/random_uniform/mul"
  input: "dropout_6/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_6/cond/dropout/sub/x"
  op: "Const"
  input: "^dropout_6/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_6/cond/dropout/sub"
  op: "Sub"
  input: "dropout_6/cond/dropout/sub/x"
  input: "dropout_6/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_6/cond/dropout/truediv/x"
  op: "Const"
  input: "^dropout_6/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_6/cond/dropout/truediv"
  op: "RealDiv"
  input: "dropout_6/cond/dropout/truediv/x"
  input: "dropout_6/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_6/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "dropout_6/cond/dropout/random_uniform"
  input: "dropout_6/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_6/cond/dropout/mul"
  op: "Mul"
  input: "dropout_6/cond/dropout/Shape/Switch:1"
  input: "dropout_6/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_6/cond/dropout/Cast"
  op: "Cast"
  input: "dropout_6/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "dropout_6/cond/dropout/mul_1"
  op: "Mul"
  input: "dropout_6/cond/dropout/mul"
  input: "dropout_6/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_6/cond/Identity"
  op: "Identity"
  input: "dropout_6/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_6/cond/Identity/Switch"
  op: "Switch"
  input: "activation_9/activation_9/Identity"
  input: "dropout_6/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@activation_9/activation_9/Identity"
      }
    }
  }
}
node {
  name: "dropout_6/cond/Merge"
  op: "Merge"
  input: "dropout_6/cond/Identity"
  input: "dropout_6/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "flatten_1/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "flatten_1/transpose"
  op: "Transpose"
  input: "dropout_6/cond/Merge"
  input: "flatten_1/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "flatten_1/Shape"
  op: "Shape"
  input: "flatten_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "flatten_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "flatten_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "flatten_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "flatten_1/strided_slice"
  op: "StridedSlice"
  input: "flatten_1/Shape"
  input: "flatten_1/strided_slice/stack"
  input: "flatten_1/strided_slice/stack_1"
  input: "flatten_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "flatten_1/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "flatten_1/Reshape/shape"
  op: "Pack"
  input: "flatten_1/strided_slice"
  input: "flatten_1/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "flatten_1/Reshape"
  op: "Reshape"
  input: "flatten_1/transpose"
  input: "flatten_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000R\001\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.00832668598741293
      }
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00832668598741293
      }
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dense_2/kernel/Initializer/random_uniform/max"
  input: "dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dense_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "dense_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
}
node {
  name: "dense_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "dense_2/kernel/Initializer/random_uniform/mul"
  input: "dense_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
}
node {
  name: "dense_2/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 86528
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_2/kernel"
    }
  }
}
node {
  name: "dense_2/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_2/kernel"
}
node {
  name: "dense_2/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense_2/kernel"
  input: "dense_2/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_2/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_2/bias"
    }
  }
}
node {
  name: "dense_2/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_2/bias"
}
node {
  name: "dense_2/bias/Assign"
  op: "AssignVariableOp"
  input: "dense_2/bias"
  input: "dense_2/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/MatMul"
  op: "MatMul"
  input: "flatten_1/Reshape"
  input: "dense_2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_2/BiasAdd"
  op: "BiasAdd"
  input: "dense_2/MatMul"
  input: "dense_2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dropout_7/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_7/cond/switch_t"
  op: "Identity"
  input: "dropout_7/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_7/cond/switch_f"
  op: "Identity"
  input: "dropout_7/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_7/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_7/cond/dropout/rate"
  op: "Const"
  input: "^dropout_7/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "dropout_7/cond/dropout/Shape"
  op: "Shape"
  input: "dropout_7/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout_7/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "dense_2/BiasAdd"
  input: "dropout_7/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/BiasAdd"
      }
    }
  }
}
node {
  name: "dropout_7/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^dropout_7/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_7/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^dropout_7/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_7/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout_7/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout_7/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "dropout_7/cond/dropout/random_uniform/max"
  input: "dropout_7/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_7/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "dropout_7/cond/dropout/random_uniform/RandomUniform"
  input: "dropout_7/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_7/cond/dropout/random_uniform"
  op: "Add"
  input: "dropout_7/cond/dropout/random_uniform/mul"
  input: "dropout_7/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_7/cond/dropout/sub/x"
  op: "Const"
  input: "^dropout_7/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_7/cond/dropout/sub"
  op: "Sub"
  input: "dropout_7/cond/dropout/sub/x"
  input: "dropout_7/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_7/cond/dropout/truediv/x"
  op: "Const"
  input: "^dropout_7/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_7/cond/dropout/truediv"
  op: "RealDiv"
  input: "dropout_7/cond/dropout/truediv/x"
  input: "dropout_7/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_7/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "dropout_7/cond/dropout/random_uniform"
  input: "dropout_7/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_7/cond/dropout/mul"
  op: "Mul"
  input: "dropout_7/cond/dropout/Shape/Switch:1"
  input: "dropout_7/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_7/cond/dropout/Cast"
  op: "Cast"
  input: "dropout_7/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "dropout_7/cond/dropout/mul_1"
  op: "Mul"
  input: "dropout_7/cond/dropout/mul"
  input: "dropout_7/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_7/cond/Identity"
  op: "Identity"
  input: "dropout_7/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_7/cond/Identity/Switch"
  op: "Switch"
  input: "dense_2/BiasAdd"
  input: "dropout_7/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/BiasAdd"
      }
    }
  }
}
node {
  name: "dropout_7/cond/Merge"
  op: "Merge"
  input: "dropout_7/cond/Identity"
  input: "dropout_7/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_10/activation_10/Identity"
  op: "Identity"
  input: "dropout_7/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_3/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\n\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "dense_3/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.7071067690849304
      }
    }
  }
}
node {
  name: "dense_3/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.7071067690849304
      }
    }
  }
}
node {
  name: "dense_3/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense_3/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dense_3/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dense_3/kernel/Initializer/random_uniform/max"
  input: "dense_3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
}
node {
  name: "dense_3/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dense_3/kernel/Initializer/random_uniform/RandomUniform"
  input: "dense_3/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
}
node {
  name: "dense_3/kernel/Initializer/random_uniform"
  op: "Add"
  input: "dense_3/kernel/Initializer/random_uniform/mul"
  input: "dense_3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
}
node {
  name: "dense_3/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_3/kernel"
    }
  }
}
node {
  name: "dense_3/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_3/kernel"
}
node {
  name: "dense_3/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense_3/kernel"
  input: "dense_3/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_3/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_3/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_3/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_3/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_3/bias"
    }
  }
}
node {
  name: "dense_3/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_3/bias"
}
node {
  name: "dense_3/bias/Assign"
  op: "AssignVariableOp"
  input: "dense_3/bias"
  input: "dense_3/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_3/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_3/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_3/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_3/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_3/MatMul"
  op: "MatMul"
  input: "activation_10/activation_10/Identity"
  input: "dense_3/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_3/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_3/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_3/BiasAdd"
  op: "BiasAdd"
  input: "dense_3/MatMul"
  input: "dense_3/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "activation_11/Softmax"
  op: "Softmax"
  input: "dense_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_11_target"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "total_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "total_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "total_1"
    }
  }
}
node {
  name: "total_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "total_1"
}
node {
  name: "total_1/Assign"
  op: "AssignVariableOp"
  input: "total_1"
  input: "total_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "total_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "count_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "count_1"
    }
  }
}
node {
  name: "count_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "count_1"
}
node {
  name: "count_1/Assign"
  op: "AssignVariableOp"
  input: "count_1"
  input: "count_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "count_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_2/acc/ArgMax/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics_2/acc/ArgMax"
  op: "ArgMax"
  input: "activation_11_target"
  input: "metrics_2/acc/ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics_2/acc/ArgMax_1/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics_2/acc/ArgMax_1"
  op: "ArgMax"
  input: "activation_11/Softmax"
  input: "metrics_2/acc/ArgMax_1/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics_2/acc/Equal"
  op: "Equal"
  input: "metrics_2/acc/ArgMax"
  input: "metrics_2/acc/ArgMax_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics_2/acc/Cast"
  op: "Cast"
  input: "metrics_2/acc/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics_2/acc/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics_2/acc/Sum"
  op: "Sum"
  input: "metrics_2/acc/Cast"
  input: "metrics_2/acc/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics_2/acc/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "total_1"
  input: "metrics_2/acc/Sum"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_2/acc/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total_1"
  input: "^metrics_2/acc/AssignAddVariableOp"
  input: "^metrics_2/acc/Sum"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_2/acc/Size"
  op: "Size"
  input: "metrics_2/acc/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "metrics_2/acc/Cast_1"
  op: "Cast"
  input: "metrics_2/acc/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics_2/acc/AssignAddVariableOp_1"
  op: "AssignAddVariableOp"
  input: "count_1"
  input: "metrics_2/acc/Cast_1"
  input: "^metrics_2/acc/AssignAddVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_2/acc/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "count_1"
  input: "^metrics_2/acc/AssignAddVariableOp"
  input: "^metrics_2/acc/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_2/acc/div_no_nan/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total_1"
  input: "^metrics_2/acc/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_2/acc/div_no_nan/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "count_1"
  input: "^metrics_2/acc/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_2/acc/div_no_nan"
  op: "DivNoNan"
  input: "metrics_2/acc/div_no_nan/ReadVariableOp"
  input: "metrics_2/acc/div_no_nan/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_2/acc/Identity"
  op: "Identity"
  input: "metrics_2/acc/div_no_nan"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_1/activation_11_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Shape"
  op: "Shape"
  input: "dense_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Shape_1"
  op: "Shape"
  input: "dense_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Sub"
  op: "Sub"
  input: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Rank_1"
  input: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Slice/begin"
  op: "Pack"
  input: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Slice"
  op: "Slice"
  input: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Shape_1"
  input: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Slice/begin"
  input: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/concat/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/concat"
  op: "ConcatV2"
  input: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/concat/values_0"
  input: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Slice"
  input: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Reshape"
  op: "Reshape"
  input: "dense_3/BiasAdd"
  input: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Rank_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Shape_2"
  op: "Shape"
  input: "activation_11_target"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Sub_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Sub_1"
  op: "Sub"
  input: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Rank_2"
  input: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Slice_1/begin"
  op: "Pack"
  input: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Sub_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Slice_1"
  op: "Slice"
  input: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Shape_2"
  input: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Slice_1/begin"
  input: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/concat_1/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/concat_1"
  op: "ConcatV2"
  input: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/concat_1/values_0"
  input: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Slice_1"
  input: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Reshape_1"
  op: "Reshape"
  input: "activation_11_target"
  input: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits"
  op: "SoftmaxCrossEntropyWithLogits"
  input: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Reshape"
  input: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Sub_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Sub_2"
  op: "Sub"
  input: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Rank"
  input: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Slice_2/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Slice_2/size"
  op: "Pack"
  input: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Sub_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Slice_2"
  op: "Slice"
  input: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Shape"
  input: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Slice_2/begin"
  input: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Reshape_2"
  op: "Reshape"
  input: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits"
  input: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss_1/activation_11_loss/weighted_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss_1/activation_11_loss/weighted_loss/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "loss_1/activation_11_loss/weighted_loss/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss_1/activation_11_loss/weighted_loss/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss_1/activation_11_loss/weighted_loss/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss_1/activation_11_loss/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "loss_1/activation_11_loss/weighted_loss/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Reshape_2"
  input: "^loss_1/activation_11_loss/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss_1/activation_11_loss/weighted_loss/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^loss_1/activation_11_loss/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss_1/activation_11_loss/weighted_loss/broadcast_weights/ones_like"
  op: "Fill"
  input: "loss_1/activation_11_loss/weighted_loss/broadcast_weights/ones_like/Shape"
  input: "loss_1/activation_11_loss/weighted_loss/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss_1/activation_11_loss/weighted_loss/broadcast_weights"
  op: "Mul"
  input: "loss_1/activation_11_loss/weighted_loss/Const"
  input: "loss_1/activation_11_loss/weighted_loss/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_1/activation_11_loss/weighted_loss/Mul"
  op: "Mul"
  input: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Reshape_2"
  input: "loss_1/activation_11_loss/weighted_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_1/activation_11_loss/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss_1/activation_11_loss/Sum"
  op: "Sum"
  input: "loss_1/activation_11_loss/weighted_loss/Mul"
  input: "loss_1/activation_11_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss_1/activation_11_loss/num_elements"
  op: "Size"
  input: "loss_1/activation_11_loss/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss_1/activation_11_loss/num_elements/Cast"
  op: "Cast"
  input: "loss_1/activation_11_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "loss_1/activation_11_loss/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "loss_1/activation_11_loss/Sum_1"
  op: "Sum"
  input: "loss_1/activation_11_loss/Sum"
  input: "loss_1/activation_11_loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss_1/activation_11_loss/value"
  op: "DivNoNan"
  input: "loss_1/activation_11_loss/Sum_1"
  input: "loss_1/activation_11_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_1/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss_1/mul"
  op: "Mul"
  input: "loss_1/mul/x"
  input: "loss_1/activation_11_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RMSprop_1/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop_1/gradients/Fill"
  op: "Fill"
  input: "RMSprop_1/gradients/Shape"
  input: "RMSprop_1/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/loss_1/mul_grad/Mul"
  op: "Mul"
  input: "RMSprop_1/gradients/Fill"
  input: "loss_1/activation_11_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/loss_1/mul_grad/Mul_1"
  op: "Mul"
  input: "RMSprop_1/gradients/Fill"
  input: "loss_1/mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/loss_1/activation_11_loss/value_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RMSprop_1/gradients/loss_1/activation_11_loss/value_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RMSprop_1/gradients/loss_1/activation_11_loss/value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/value_grad/Shape"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/loss_1/activation_11_loss/value_grad/div_no_nan"
  op: "DivNoNan"
  input: "RMSprop_1/gradients/loss_1/mul_grad/Mul_1"
  input: "loss_1/activation_11_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/loss_1/activation_11_loss/value_grad/Sum"
  op: "Sum"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/value_grad/div_no_nan"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop_1/gradients/loss_1/activation_11_loss/value_grad/Reshape"
  op: "Reshape"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/value_grad/Sum"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/loss_1/activation_11_loss/value_grad/Neg"
  op: "Neg"
  input: "loss_1/activation_11_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/loss_1/activation_11_loss/value_grad/div_no_nan_1"
  op: "DivNoNan"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/value_grad/Neg"
  input: "loss_1/activation_11_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/loss_1/activation_11_loss/value_grad/div_no_nan_2"
  op: "DivNoNan"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/value_grad/div_no_nan_1"
  input: "loss_1/activation_11_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/loss_1/activation_11_loss/value_grad/mul"
  op: "Mul"
  input: "RMSprop_1/gradients/loss_1/mul_grad/Mul_1"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/value_grad/div_no_nan_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/loss_1/activation_11_loss/value_grad/Sum_1"
  op: "Sum"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/value_grad/mul"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop_1/gradients/loss_1/activation_11_loss/value_grad/Reshape_1"
  op: "Reshape"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/value_grad/Sum_1"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/loss_1/activation_11_loss/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RMSprop_1/gradients/loss_1/activation_11_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/value_grad/Reshape"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/Sum_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/loss_1/activation_11_loss/Sum_1_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RMSprop_1/gradients/loss_1/activation_11_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/Sum_1_grad/Reshape"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/Sum_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/loss_1/activation_11_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RMSprop_1/gradients/loss_1/activation_11_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/Sum_1_grad/Tile"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/loss_1/activation_11_loss/Sum_grad/Shape"
  op: "Shape"
  input: "loss_1/activation_11_loss/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/loss_1/activation_11_loss/Sum_grad/Tile"
  op: "Tile"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/Sum_grad/Reshape"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/loss_1/activation_11_loss/weighted_loss/Mul_grad/Shape"
  op: "Shape"
  input: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/loss_1/activation_11_loss/weighted_loss/Mul_grad/Shape_1"
  op: "Shape"
  input: "loss_1/activation_11_loss/weighted_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/loss_1/activation_11_loss/weighted_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/weighted_loss/Mul_grad/Shape"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/weighted_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/loss_1/activation_11_loss/weighted_loss/Mul_grad/Mul"
  op: "Mul"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/Sum_grad/Tile"
  input: "loss_1/activation_11_loss/weighted_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/loss_1/activation_11_loss/weighted_loss/Mul_grad/Sum"
  op: "Sum"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/weighted_loss/Mul_grad/Mul"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/weighted_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop_1/gradients/loss_1/activation_11_loss/weighted_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/weighted_loss/Mul_grad/Sum"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/weighted_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/loss_1/activation_11_loss/weighted_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Reshape_2"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/loss_1/activation_11_loss/weighted_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/weighted_loss/Mul_grad/Mul_1"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/weighted_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop_1/gradients/loss_1/activation_11_loss/weighted_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/weighted_loss/Mul_grad/Sum_1"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/weighted_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Reshape_2_grad/Shape"
  op: "Shape"
  input: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/weighted_loss/Mul_grad/Reshape"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/zeros_like"
  op: "ZerosLike"
  input: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/loss_1/activation_11_loss/softmax_cross_entropy_with_logits_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RMSprop_1/gradients/loss_1/activation_11_loss/softmax_cross_entropy_with_logits_grad/ExpandDims"
  op: "ExpandDims"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Reshape_2_grad/Reshape"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/softmax_cross_entropy_with_logits_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/loss_1/activation_11_loss/softmax_cross_entropy_with_logits_grad/mul"
  op: "Mul"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/softmax_cross_entropy_with_logits_grad/ExpandDims"
  input: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/loss_1/activation_11_loss/softmax_cross_entropy_with_logits_grad/LogSoftmax"
  op: "LogSoftmax"
  input: "loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/loss_1/activation_11_loss/softmax_cross_entropy_with_logits_grad/Neg"
  op: "Neg"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/softmax_cross_entropy_with_logits_grad/LogSoftmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/loss_1/activation_11_loss/softmax_cross_entropy_with_logits_grad/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RMSprop_1/gradients/loss_1/activation_11_loss/softmax_cross_entropy_with_logits_grad/ExpandDims_1"
  op: "ExpandDims"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Reshape_2_grad/Reshape"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/softmax_cross_entropy_with_logits_grad/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/loss_1/activation_11_loss/softmax_cross_entropy_with_logits_grad/mul_1"
  op: "Mul"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/softmax_cross_entropy_with_logits_grad/ExpandDims_1"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/softmax_cross_entropy_with_logits_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Reshape_grad/Shape"
  op: "Shape"
  input: "dense_3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Reshape_grad/Reshape"
  op: "Reshape"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/softmax_cross_entropy_with_logits_grad/mul"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/dense_3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "RMSprop_1/gradients/dense_3/MatMul_grad/MatMul"
  op: "MatMul"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Reshape_grad/Reshape"
  input: "dense_3/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "RMSprop_1/gradients/dense_3/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "activation_10/activation_10/Identity"
  input: "RMSprop_1/gradients/loss_1/activation_11_loss/softmax_cross_entropy_with_logits/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_7/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "RMSprop_1/gradients/dense_3/MatMul_grad/MatMul"
  input: "dropout_7/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_1/gradients/dense_3/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_7/cond/dropout/mul_1_grad/Shape"
  op: "Shape"
  input: "dropout_7/cond/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_7/cond/dropout/mul_1_grad/Shape_1"
  op: "Shape"
  input: "dropout_7/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_7/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "RMSprop_1/gradients/dropout_7/cond/dropout/mul_1_grad/Shape"
  input: "RMSprop_1/gradients/dropout_7/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_7/cond/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "RMSprop_1/gradients/dropout_7/cond/Merge_grad/cond_grad:1"
  input: "dropout_7/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_7/cond/dropout/mul_1_grad/Sum"
  op: "Sum"
  input: "RMSprop_1/gradients/dropout_7/cond/dropout/mul_1_grad/Mul"
  input: "RMSprop_1/gradients/dropout_7/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_7/cond/dropout/mul_1_grad/Reshape"
  op: "Reshape"
  input: "RMSprop_1/gradients/dropout_7/cond/dropout/mul_1_grad/Sum"
  input: "RMSprop_1/gradients/dropout_7/cond/dropout/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_7/cond/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "dropout_7/cond/dropout/mul"
  input: "RMSprop_1/gradients/dropout_7/cond/Merge_grad/cond_grad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_7/cond/dropout/mul_1_grad/Sum_1"
  op: "Sum"
  input: "RMSprop_1/gradients/dropout_7/cond/dropout/mul_1_grad/Mul_1"
  input: "RMSprop_1/gradients/dropout_7/cond/dropout/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_7/cond/dropout/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "RMSprop_1/gradients/dropout_7/cond/dropout/mul_1_grad/Sum_1"
  input: "RMSprop_1/gradients/dropout_7/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/Switch"
  op: "Switch"
  input: "dense_2/BiasAdd"
  input: "dropout_7/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/Identity"
  op: "Identity"
  input: "RMSprop_1/gradients/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/Shape_1"
  op: "Shape"
  input: "RMSprop_1/gradients/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/zeros/Const"
  op: "Const"
  input: "^RMSprop_1/gradients/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_1/gradients/zeros"
  op: "Fill"
  input: "RMSprop_1/gradients/Shape_1"
  input: "RMSprop_1/gradients/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_7/cond/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "RMSprop_1/gradients/dropout_7/cond/Merge_grad/cond_grad"
  input: "RMSprop_1/gradients/zeros"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_7/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "dropout_7/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_7/cond/dropout/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_7/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "RMSprop_1/gradients/dropout_7/cond/dropout/mul_grad/Shape"
  input: "RMSprop_1/gradients/dropout_7/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_7/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "RMSprop_1/gradients/dropout_7/cond/dropout/mul_1_grad/Reshape"
  input: "dropout_7/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_7/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "RMSprop_1/gradients/dropout_7/cond/dropout/mul_grad/Mul"
  input: "RMSprop_1/gradients/dropout_7/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_7/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "RMSprop_1/gradients/dropout_7/cond/dropout/mul_grad/Sum"
  input: "RMSprop_1/gradients/dropout_7/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_7/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "dropout_7/cond/dropout/Shape/Switch:1"
  input: "RMSprop_1/gradients/dropout_7/cond/dropout/mul_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_7/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "RMSprop_1/gradients/dropout_7/cond/dropout/mul_grad/Mul_1"
  input: "RMSprop_1/gradients/dropout_7/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_7/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "RMSprop_1/gradients/dropout_7/cond/dropout/mul_grad/Sum_1"
  input: "RMSprop_1/gradients/dropout_7/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/Switch_1"
  op: "Switch"
  input: "dense_2/BiasAdd"
  input: "dropout_7/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/Identity_1"
  op: "Identity"
  input: "RMSprop_1/gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/Shape_2"
  op: "Shape"
  input: "RMSprop_1/gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/zeros_1/Const"
  op: "Const"
  input: "^RMSprop_1/gradients/Identity_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_1/gradients/zeros_1"
  op: "Fill"
  input: "RMSprop_1/gradients/Shape_2"
  input: "RMSprop_1/gradients/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_7/cond/dropout/Shape/Switch_grad/cond_grad"
  op: "Merge"
  input: "RMSprop_1/gradients/zeros_1"
  input: "RMSprop_1/gradients/dropout_7/cond/dropout/mul_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/AddN"
  op: "AddN"
  input: "RMSprop_1/gradients/dropout_7/cond/Identity/Switch_grad/cond_grad"
  input: "RMSprop_1/gradients/dropout_7/cond/dropout/Shape/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_1/gradients/dropout_7/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "RMSprop_1/gradients/dense_2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "RMSprop_1/gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "RMSprop_1/gradients/dense_2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "RMSprop_1/gradients/AddN"
  input: "dense_2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "RMSprop_1/gradients/dense_2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "flatten_1/Reshape"
  input: "RMSprop_1/gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop_1/gradients/flatten_1/Reshape_grad/Shape"
  op: "Shape"
  input: "flatten_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/flatten_1/Reshape_grad/Reshape"
  op: "Reshape"
  input: "RMSprop_1/gradients/dense_2/MatMul_grad/MatMul"
  input: "RMSprop_1/gradients/flatten_1/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/flatten_1/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "flatten_1/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/flatten_1/transpose_grad/transpose"
  op: "Transpose"
  input: "RMSprop_1/gradients/flatten_1/Reshape_grad/Reshape"
  input: "RMSprop_1/gradients/flatten_1/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_6/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "RMSprop_1/gradients/flatten_1/transpose_grad/transpose"
  input: "dropout_6/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_1/gradients/flatten_1/transpose_grad/transpose"
      }
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_6/cond/dropout/mul_1_grad/Shape"
  op: "Shape"
  input: "dropout_6/cond/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_6/cond/dropout/mul_1_grad/Shape_1"
  op: "Shape"
  input: "dropout_6/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_6/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "RMSprop_1/gradients/dropout_6/cond/dropout/mul_1_grad/Shape"
  input: "RMSprop_1/gradients/dropout_6/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_6/cond/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "RMSprop_1/gradients/dropout_6/cond/Merge_grad/cond_grad:1"
  input: "dropout_6/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_6/cond/dropout/mul_1_grad/Sum"
  op: "Sum"
  input: "RMSprop_1/gradients/dropout_6/cond/dropout/mul_1_grad/Mul"
  input: "RMSprop_1/gradients/dropout_6/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_6/cond/dropout/mul_1_grad/Reshape"
  op: "Reshape"
  input: "RMSprop_1/gradients/dropout_6/cond/dropout/mul_1_grad/Sum"
  input: "RMSprop_1/gradients/dropout_6/cond/dropout/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_6/cond/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "dropout_6/cond/dropout/mul"
  input: "RMSprop_1/gradients/dropout_6/cond/Merge_grad/cond_grad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_6/cond/dropout/mul_1_grad/Sum_1"
  op: "Sum"
  input: "RMSprop_1/gradients/dropout_6/cond/dropout/mul_1_grad/Mul_1"
  input: "RMSprop_1/gradients/dropout_6/cond/dropout/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_6/cond/dropout/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "RMSprop_1/gradients/dropout_6/cond/dropout/mul_1_grad/Sum_1"
  input: "RMSprop_1/gradients/dropout_6/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/Switch_2"
  op: "Switch"
  input: "activation_9/activation_9/Identity"
  input: "dropout_6/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/Identity_2"
  op: "Identity"
  input: "RMSprop_1/gradients/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/Shape_3"
  op: "Shape"
  input: "RMSprop_1/gradients/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/zeros_2/Const"
  op: "Const"
  input: "^RMSprop_1/gradients/Identity_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_1/gradients/zeros_2"
  op: "Fill"
  input: "RMSprop_1/gradients/Shape_3"
  input: "RMSprop_1/gradients/zeros_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_6/cond/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "RMSprop_1/gradients/dropout_6/cond/Merge_grad/cond_grad"
  input: "RMSprop_1/gradients/zeros_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_6/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "dropout_6/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_6/cond/dropout/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_6/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "RMSprop_1/gradients/dropout_6/cond/dropout/mul_grad/Shape"
  input: "RMSprop_1/gradients/dropout_6/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_6/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "RMSprop_1/gradients/dropout_6/cond/dropout/mul_1_grad/Reshape"
  input: "dropout_6/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_6/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "RMSprop_1/gradients/dropout_6/cond/dropout/mul_grad/Mul"
  input: "RMSprop_1/gradients/dropout_6/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_6/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "RMSprop_1/gradients/dropout_6/cond/dropout/mul_grad/Sum"
  input: "RMSprop_1/gradients/dropout_6/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_6/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "dropout_6/cond/dropout/Shape/Switch:1"
  input: "RMSprop_1/gradients/dropout_6/cond/dropout/mul_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_6/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "RMSprop_1/gradients/dropout_6/cond/dropout/mul_grad/Mul_1"
  input: "RMSprop_1/gradients/dropout_6/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_6/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "RMSprop_1/gradients/dropout_6/cond/dropout/mul_grad/Sum_1"
  input: "RMSprop_1/gradients/dropout_6/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/Switch_3"
  op: "Switch"
  input: "activation_9/activation_9/Identity"
  input: "dropout_6/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/Identity_3"
  op: "Identity"
  input: "RMSprop_1/gradients/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/Shape_4"
  op: "Shape"
  input: "RMSprop_1/gradients/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/zeros_3/Const"
  op: "Const"
  input: "^RMSprop_1/gradients/Identity_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_1/gradients/zeros_3"
  op: "Fill"
  input: "RMSprop_1/gradients/Shape_4"
  input: "RMSprop_1/gradients/zeros_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_6/cond/dropout/Shape/Switch_grad/cond_grad"
  op: "Merge"
  input: "RMSprop_1/gradients/zeros_3"
  input: "RMSprop_1/gradients/dropout_6/cond/dropout/mul_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/AddN_1"
  op: "AddN"
  input: "RMSprop_1/gradients/dropout_6/cond/Identity/Switch_grad/cond_grad"
  input: "RMSprop_1/gradients/dropout_6/cond/dropout/Shape/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_1/gradients/dropout_6/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "RMSprop_1/gradients/conv2d_11/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "RMSprop_1/gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "RMSprop_1/gradients/conv2d_11/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "activation_8/activation_8/Identity"
  input: "conv2d_11/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/conv2d_11/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "RMSprop_1/gradients/conv2d_11/Conv2D_grad/ShapeN"
  input: "conv2d_11/Conv2D/ReadVariableOp"
  input: "RMSprop_1/gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "RMSprop_1/gradients/conv2d_11/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "activation_8/activation_8/Identity"
  input: "RMSprop_1/gradients/conv2d_11/Conv2D_grad/ShapeN:1"
  input: "RMSprop_1/gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "RMSprop_1/gradients/conv2d_10/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "RMSprop_1/gradients/conv2d_11/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "RMSprop_1/gradients/conv2d_10/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "dropout_5/cond/Merge"
  input: "conv2d_10/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/conv2d_10/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "RMSprop_1/gradients/conv2d_10/Conv2D_grad/ShapeN"
  input: "conv2d_10/Conv2D/ReadVariableOp"
  input: "RMSprop_1/gradients/conv2d_11/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "RMSprop_1/gradients/conv2d_10/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "dropout_5/cond/Merge"
  input: "RMSprop_1/gradients/conv2d_10/Conv2D_grad/ShapeN:1"
  input: "RMSprop_1/gradients/conv2d_11/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_5/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "RMSprop_1/gradients/conv2d_10/Conv2D_grad/Conv2DBackpropInput"
  input: "dropout_5/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_1/gradients/conv2d_10/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_5/cond/dropout/mul_1_grad/Shape"
  op: "Shape"
  input: "dropout_5/cond/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_5/cond/dropout/mul_1_grad/Shape_1"
  op: "Shape"
  input: "dropout_5/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_5/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "RMSprop_1/gradients/dropout_5/cond/dropout/mul_1_grad/Shape"
  input: "RMSprop_1/gradients/dropout_5/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_5/cond/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "RMSprop_1/gradients/dropout_5/cond/Merge_grad/cond_grad:1"
  input: "dropout_5/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_5/cond/dropout/mul_1_grad/Sum"
  op: "Sum"
  input: "RMSprop_1/gradients/dropout_5/cond/dropout/mul_1_grad/Mul"
  input: "RMSprop_1/gradients/dropout_5/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_5/cond/dropout/mul_1_grad/Reshape"
  op: "Reshape"
  input: "RMSprop_1/gradients/dropout_5/cond/dropout/mul_1_grad/Sum"
  input: "RMSprop_1/gradients/dropout_5/cond/dropout/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_5/cond/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "dropout_5/cond/dropout/mul"
  input: "RMSprop_1/gradients/dropout_5/cond/Merge_grad/cond_grad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_5/cond/dropout/mul_1_grad/Sum_1"
  op: "Sum"
  input: "RMSprop_1/gradients/dropout_5/cond/dropout/mul_1_grad/Mul_1"
  input: "RMSprop_1/gradients/dropout_5/cond/dropout/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_5/cond/dropout/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "RMSprop_1/gradients/dropout_5/cond/dropout/mul_1_grad/Sum_1"
  input: "RMSprop_1/gradients/dropout_5/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/Switch_4"
  op: "Switch"
  input: "max_pooling2d_3/MaxPool"
  input: "dropout_5/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/Identity_4"
  op: "Identity"
  input: "RMSprop_1/gradients/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/Shape_5"
  op: "Shape"
  input: "RMSprop_1/gradients/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/zeros_4/Const"
  op: "Const"
  input: "^RMSprop_1/gradients/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_1/gradients/zeros_4"
  op: "Fill"
  input: "RMSprop_1/gradients/Shape_5"
  input: "RMSprop_1/gradients/zeros_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_5/cond/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "RMSprop_1/gradients/dropout_5/cond/Merge_grad/cond_grad"
  input: "RMSprop_1/gradients/zeros_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_5/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "dropout_5/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_5/cond/dropout/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_5/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "RMSprop_1/gradients/dropout_5/cond/dropout/mul_grad/Shape"
  input: "RMSprop_1/gradients/dropout_5/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_5/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "RMSprop_1/gradients/dropout_5/cond/dropout/mul_1_grad/Reshape"
  input: "dropout_5/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_5/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "RMSprop_1/gradients/dropout_5/cond/dropout/mul_grad/Mul"
  input: "RMSprop_1/gradients/dropout_5/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_5/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "RMSprop_1/gradients/dropout_5/cond/dropout/mul_grad/Sum"
  input: "RMSprop_1/gradients/dropout_5/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_5/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "dropout_5/cond/dropout/Shape/Switch:1"
  input: "RMSprop_1/gradients/dropout_5/cond/dropout/mul_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_5/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "RMSprop_1/gradients/dropout_5/cond/dropout/mul_grad/Mul_1"
  input: "RMSprop_1/gradients/dropout_5/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_5/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "RMSprop_1/gradients/dropout_5/cond/dropout/mul_grad/Sum_1"
  input: "RMSprop_1/gradients/dropout_5/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/Switch_5"
  op: "Switch"
  input: "max_pooling2d_3/MaxPool"
  input: "dropout_5/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/Identity_5"
  op: "Identity"
  input: "RMSprop_1/gradients/Switch_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/Shape_6"
  op: "Shape"
  input: "RMSprop_1/gradients/Switch_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/zeros_5/Const"
  op: "Const"
  input: "^RMSprop_1/gradients/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_1/gradients/zeros_5"
  op: "Fill"
  input: "RMSprop_1/gradients/Shape_6"
  input: "RMSprop_1/gradients/zeros_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_5/cond/dropout/Shape/Switch_grad/cond_grad"
  op: "Merge"
  input: "RMSprop_1/gradients/zeros_5"
  input: "RMSprop_1/gradients/dropout_5/cond/dropout/mul_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/AddN_2"
  op: "AddN"
  input: "RMSprop_1/gradients/dropout_5/cond/Identity/Switch_grad/cond_grad"
  input: "RMSprop_1/gradients/dropout_5/cond/dropout/Shape/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_1/gradients/dropout_5/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "RMSprop_1/gradients/max_pooling2d_3/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "conv2d_9/BiasAdd"
  input: "max_pooling2d_3/MaxPool"
  input: "RMSprop_1/gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
}
node {
  name: "RMSprop_1/gradients/conv2d_9/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "RMSprop_1/gradients/max_pooling2d_3/MaxPool_grad/MaxPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "RMSprop_1/gradients/conv2d_9/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "activation_7/activation_7/Identity"
  input: "conv2d_9/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/conv2d_9/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "RMSprop_1/gradients/conv2d_9/Conv2D_grad/ShapeN"
  input: "conv2d_9/Conv2D/ReadVariableOp"
  input: "RMSprop_1/gradients/max_pooling2d_3/MaxPool_grad/MaxPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "RMSprop_1/gradients/conv2d_9/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "activation_7/activation_7/Identity"
  input: "RMSprop_1/gradients/conv2d_9/Conv2D_grad/ShapeN:1"
  input: "RMSprop_1/gradients/max_pooling2d_3/MaxPool_grad/MaxPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "RMSprop_1/gradients/conv2d_8/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "RMSprop_1/gradients/conv2d_9/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "RMSprop_1/gradients/conv2d_8/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "dropout_4/cond/Merge"
  input: "conv2d_8/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/conv2d_8/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "RMSprop_1/gradients/conv2d_8/Conv2D_grad/ShapeN"
  input: "conv2d_8/Conv2D/ReadVariableOp"
  input: "RMSprop_1/gradients/conv2d_9/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "RMSprop_1/gradients/conv2d_8/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "dropout_4/cond/Merge"
  input: "RMSprop_1/gradients/conv2d_8/Conv2D_grad/ShapeN:1"
  input: "RMSprop_1/gradients/conv2d_9/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_4/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "RMSprop_1/gradients/conv2d_8/Conv2D_grad/Conv2DBackpropInput"
  input: "dropout_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_1/gradients/conv2d_8/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_4/cond/dropout/mul_1_grad/Shape"
  op: "Shape"
  input: "dropout_4/cond/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_4/cond/dropout/mul_1_grad/Shape_1"
  op: "Shape"
  input: "dropout_4/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_4/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "RMSprop_1/gradients/dropout_4/cond/dropout/mul_1_grad/Shape"
  input: "RMSprop_1/gradients/dropout_4/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_4/cond/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "RMSprop_1/gradients/dropout_4/cond/Merge_grad/cond_grad:1"
  input: "dropout_4/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_4/cond/dropout/mul_1_grad/Sum"
  op: "Sum"
  input: "RMSprop_1/gradients/dropout_4/cond/dropout/mul_1_grad/Mul"
  input: "RMSprop_1/gradients/dropout_4/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_4/cond/dropout/mul_1_grad/Reshape"
  op: "Reshape"
  input: "RMSprop_1/gradients/dropout_4/cond/dropout/mul_1_grad/Sum"
  input: "RMSprop_1/gradients/dropout_4/cond/dropout/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_4/cond/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "dropout_4/cond/dropout/mul"
  input: "RMSprop_1/gradients/dropout_4/cond/Merge_grad/cond_grad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_4/cond/dropout/mul_1_grad/Sum_1"
  op: "Sum"
  input: "RMSprop_1/gradients/dropout_4/cond/dropout/mul_1_grad/Mul_1"
  input: "RMSprop_1/gradients/dropout_4/cond/dropout/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_4/cond/dropout/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "RMSprop_1/gradients/dropout_4/cond/dropout/mul_1_grad/Sum_1"
  input: "RMSprop_1/gradients/dropout_4/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/Switch_6"
  op: "Switch"
  input: "max_pooling2d_2/MaxPool"
  input: "dropout_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/Identity_6"
  op: "Identity"
  input: "RMSprop_1/gradients/Switch_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/Shape_7"
  op: "Shape"
  input: "RMSprop_1/gradients/Switch_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/zeros_6/Const"
  op: "Const"
  input: "^RMSprop_1/gradients/Identity_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_1/gradients/zeros_6"
  op: "Fill"
  input: "RMSprop_1/gradients/Shape_7"
  input: "RMSprop_1/gradients/zeros_6/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_4/cond/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "RMSprop_1/gradients/dropout_4/cond/Merge_grad/cond_grad"
  input: "RMSprop_1/gradients/zeros_6"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_4/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "dropout_4/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_4/cond/dropout/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_4/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "RMSprop_1/gradients/dropout_4/cond/dropout/mul_grad/Shape"
  input: "RMSprop_1/gradients/dropout_4/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_4/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "RMSprop_1/gradients/dropout_4/cond/dropout/mul_1_grad/Reshape"
  input: "dropout_4/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_4/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "RMSprop_1/gradients/dropout_4/cond/dropout/mul_grad/Mul"
  input: "RMSprop_1/gradients/dropout_4/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_4/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "RMSprop_1/gradients/dropout_4/cond/dropout/mul_grad/Sum"
  input: "RMSprop_1/gradients/dropout_4/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_4/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "dropout_4/cond/dropout/Shape/Switch:1"
  input: "RMSprop_1/gradients/dropout_4/cond/dropout/mul_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_4/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "RMSprop_1/gradients/dropout_4/cond/dropout/mul_grad/Mul_1"
  input: "RMSprop_1/gradients/dropout_4/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_4/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "RMSprop_1/gradients/dropout_4/cond/dropout/mul_grad/Sum_1"
  input: "RMSprop_1/gradients/dropout_4/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/Switch_7"
  op: "Switch"
  input: "max_pooling2d_2/MaxPool"
  input: "dropout_4/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/Identity_7"
  op: "Identity"
  input: "RMSprop_1/gradients/Switch_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/Shape_8"
  op: "Shape"
  input: "RMSprop_1/gradients/Switch_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/zeros_7/Const"
  op: "Const"
  input: "^RMSprop_1/gradients/Identity_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_1/gradients/zeros_7"
  op: "Fill"
  input: "RMSprop_1/gradients/Shape_8"
  input: "RMSprop_1/gradients/zeros_7/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/dropout_4/cond/dropout/Shape/Switch_grad/cond_grad"
  op: "Merge"
  input: "RMSprop_1/gradients/zeros_7"
  input: "RMSprop_1/gradients/dropout_4/cond/dropout/mul_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/gradients/AddN_3"
  op: "AddN"
  input: "RMSprop_1/gradients/dropout_4/cond/Identity/Switch_grad/cond_grad"
  input: "RMSprop_1/gradients/dropout_4/cond/dropout/Shape/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_1/gradients/dropout_4/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "RMSprop_1/gradients/max_pooling2d_2/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "conv2d_7/BiasAdd"
  input: "max_pooling2d_2/MaxPool"
  input: "RMSprop_1/gradients/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
}
node {
  name: "RMSprop_1/gradients/conv2d_7/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "RMSprop_1/gradients/max_pooling2d_2/MaxPool_grad/MaxPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "RMSprop_1/gradients/conv2d_7/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "activation_6/activation_6/Identity"
  input: "conv2d_7/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/conv2d_7/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "RMSprop_1/gradients/conv2d_7/Conv2D_grad/ShapeN"
  input: "conv2d_7/Conv2D/ReadVariableOp"
  input: "RMSprop_1/gradients/max_pooling2d_2/MaxPool_grad/MaxPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "RMSprop_1/gradients/conv2d_7/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "activation_6/activation_6/Identity"
  input: "RMSprop_1/gradients/conv2d_7/Conv2D_grad/ShapeN:1"
  input: "RMSprop_1/gradients/max_pooling2d_2/MaxPool_grad/MaxPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "RMSprop_1/gradients/conv2d_6/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "RMSprop_1/gradients/conv2d_7/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "RMSprop_1/gradients/conv2d_6/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "conv2d_6_input"
  input: "conv2d_6/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/gradients/conv2d_6/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "RMSprop_1/gradients/conv2d_6/Conv2D_grad/ShapeN"
  input: "conv2d_6/Conv2D/ReadVariableOp"
  input: "RMSprop_1/gradients/conv2d_7/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "RMSprop_1/gradients/conv2d_6/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv2d_6_input"
  input: "RMSprop_1/gradients/conv2d_6/Conv2D_grad/ShapeN:1"
  input: "RMSprop_1/gradients/conv2d_7/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "RMSprop_1/iter/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_1/iter"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "RMSprop_1/iter"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_1/iter"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop_1/iter"
    }
  }
}
node {
  name: "RMSprop_1/iter/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop_1/iter"
}
node {
  name: "RMSprop_1/iter/Assign"
  op: "AssignVariableOp"
  input: "RMSprop_1/iter"
  input: "RMSprop_1/iter/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_1/iter"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "RMSprop_1/iter/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/iter"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_1/iter"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "RMSprop_1/decay/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_1/decay"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_1/decay"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_1/decay"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop_1/decay"
    }
  }
}
node {
  name: "RMSprop_1/decay/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop_1/decay"
}
node {
  name: "RMSprop_1/decay/Assign"
  op: "AssignVariableOp"
  input: "RMSprop_1/decay"
  input: "RMSprop_1/decay/Initializer/initial_value"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_1/decay"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/decay/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/decay"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_1/decay"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/learning_rate/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_1/learning_rate"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "RMSprop_1/learning_rate"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_1/learning_rate"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop_1/learning_rate"
    }
  }
}
node {
  name: "RMSprop_1/learning_rate/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop_1/learning_rate"
}
node {
  name: "RMSprop_1/learning_rate/Assign"
  op: "AssignVariableOp"
  input: "RMSprop_1/learning_rate"
  input: "RMSprop_1/learning_rate/Initializer/initial_value"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_1/learning_rate"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/learning_rate/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/learning_rate"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_1/learning_rate"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/momentum/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_1/momentum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_1/momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_1/momentum"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop_1/momentum"
    }
  }
}
node {
  name: "RMSprop_1/momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop_1/momentum"
}
node {
  name: "RMSprop_1/momentum/Assign"
  op: "AssignVariableOp"
  input: "RMSprop_1/momentum"
  input: "RMSprop_1/momentum/Initializer/initial_value"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_1/momentum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_1/momentum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/rho/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_1/rho"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "RMSprop_1/rho"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_1/rho"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop_1/rho"
    }
  }
}
node {
  name: "RMSprop_1/rho/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop_1/rho"
}
node {
  name: "RMSprop_1/rho/Assign"
  op: "AssignVariableOp"
  input: "RMSprop_1/rho"
  input: "RMSprop_1/rho/Initializer/initial_value"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_1/rho"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/rho/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/rho"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_1/rho"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/conv2d_6/kernel/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_1/conv2d_6/kernel/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop_1/conv2d_6/kernel/rms"
    }
  }
}
node {
  name: "RMSprop_1/conv2d_6/kernel/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop_1/conv2d_6/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/kernel"
      }
    }
  }
}
node {
  name: "RMSprop_1/conv2d_6/kernel/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_6/kernel/rms"
  input: "RMSprop_1/conv2d_6/kernel/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/conv2d_6/kernel/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_6/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/conv2d_6/bias/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_1/conv2d_6/bias/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop_1/conv2d_6/bias/rms"
    }
  }
}
node {
  name: "RMSprop_1/conv2d_6/bias/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop_1/conv2d_6/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/bias"
      }
    }
  }
}
node {
  name: "RMSprop_1/conv2d_6/bias/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_6/bias/rms"
  input: "RMSprop_1/conv2d_6/bias/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/conv2d_6/bias/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_6/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_6/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/conv2d_7/kernel/rms/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "RMSprop_1/conv2d_7/kernel/rms/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_1/conv2d_7/kernel/rms/Initializer/zeros"
  op: "Fill"
  input: "RMSprop_1/conv2d_7/kernel/rms/Initializer/zeros/shape_as_tensor"
  input: "RMSprop_1/conv2d_7/kernel/rms/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/conv2d_7/kernel/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop_1/conv2d_7/kernel/rms"
    }
  }
}
node {
  name: "RMSprop_1/conv2d_7/kernel/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop_1/conv2d_7/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
}
node {
  name: "RMSprop_1/conv2d_7/kernel/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_7/kernel/rms"
  input: "RMSprop_1/conv2d_7/kernel/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/conv2d_7/kernel/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_7/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/conv2d_7/bias/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_1/conv2d_7/bias/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop_1/conv2d_7/bias/rms"
    }
  }
}
node {
  name: "RMSprop_1/conv2d_7/bias/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop_1/conv2d_7/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/bias"
      }
    }
  }
}
node {
  name: "RMSprop_1/conv2d_7/bias/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_7/bias/rms"
  input: "RMSprop_1/conv2d_7/bias/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/conv2d_7/bias/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_7/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_7/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/conv2d_8/kernel/rms/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "RMSprop_1/conv2d_8/kernel/rms/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_1/conv2d_8/kernel/rms/Initializer/zeros"
  op: "Fill"
  input: "RMSprop_1/conv2d_8/kernel/rms/Initializer/zeros/shape_as_tensor"
  input: "RMSprop_1/conv2d_8/kernel/rms/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/conv2d_8/kernel/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop_1/conv2d_8/kernel/rms"
    }
  }
}
node {
  name: "RMSprop_1/conv2d_8/kernel/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop_1/conv2d_8/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
}
node {
  name: "RMSprop_1/conv2d_8/kernel/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_8/kernel/rms"
  input: "RMSprop_1/conv2d_8/kernel/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/conv2d_8/kernel/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_8/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/conv2d_8/bias/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_1/conv2d_8/bias/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop_1/conv2d_8/bias/rms"
    }
  }
}
node {
  name: "RMSprop_1/conv2d_8/bias/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop_1/conv2d_8/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/bias"
      }
    }
  }
}
node {
  name: "RMSprop_1/conv2d_8/bias/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_8/bias/rms"
  input: "RMSprop_1/conv2d_8/bias/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/conv2d_8/bias/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_8/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_8/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/conv2d_9/kernel/rms/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "RMSprop_1/conv2d_9/kernel/rms/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_1/conv2d_9/kernel/rms/Initializer/zeros"
  op: "Fill"
  input: "RMSprop_1/conv2d_9/kernel/rms/Initializer/zeros/shape_as_tensor"
  input: "RMSprop_1/conv2d_9/kernel/rms/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/conv2d_9/kernel/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop_1/conv2d_9/kernel/rms"
    }
  }
}
node {
  name: "RMSprop_1/conv2d_9/kernel/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop_1/conv2d_9/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
}
node {
  name: "RMSprop_1/conv2d_9/kernel/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_9/kernel/rms"
  input: "RMSprop_1/conv2d_9/kernel/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/conv2d_9/kernel/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_9/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/conv2d_9/bias/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_1/conv2d_9/bias/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop_1/conv2d_9/bias/rms"
    }
  }
}
node {
  name: "RMSprop_1/conv2d_9/bias/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop_1/conv2d_9/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/bias"
      }
    }
  }
}
node {
  name: "RMSprop_1/conv2d_9/bias/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_9/bias/rms"
  input: "RMSprop_1/conv2d_9/bias/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/conv2d_9/bias/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_9/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_9/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/conv2d_10/kernel/rms/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "RMSprop_1/conv2d_10/kernel/rms/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_1/conv2d_10/kernel/rms/Initializer/zeros"
  op: "Fill"
  input: "RMSprop_1/conv2d_10/kernel/rms/Initializer/zeros/shape_as_tensor"
  input: "RMSprop_1/conv2d_10/kernel/rms/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/conv2d_10/kernel/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop_1/conv2d_10/kernel/rms"
    }
  }
}
node {
  name: "RMSprop_1/conv2d_10/kernel/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop_1/conv2d_10/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
}
node {
  name: "RMSprop_1/conv2d_10/kernel/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_10/kernel/rms"
  input: "RMSprop_1/conv2d_10/kernel/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/conv2d_10/kernel/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_10/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/conv2d_10/bias/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_1/conv2d_10/bias/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop_1/conv2d_10/bias/rms"
    }
  }
}
node {
  name: "RMSprop_1/conv2d_10/bias/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop_1/conv2d_10/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/bias"
      }
    }
  }
}
node {
  name: "RMSprop_1/conv2d_10/bias/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_10/bias/rms"
  input: "RMSprop_1/conv2d_10/bias/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/conv2d_10/bias/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_10/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_10/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/conv2d_11/kernel/rms/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "RMSprop_1/conv2d_11/kernel/rms/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_1/conv2d_11/kernel/rms/Initializer/zeros"
  op: "Fill"
  input: "RMSprop_1/conv2d_11/kernel/rms/Initializer/zeros/shape_as_tensor"
  input: "RMSprop_1/conv2d_11/kernel/rms/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/conv2d_11/kernel/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop_1/conv2d_11/kernel/rms"
    }
  }
}
node {
  name: "RMSprop_1/conv2d_11/kernel/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop_1/conv2d_11/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
}
node {
  name: "RMSprop_1/conv2d_11/kernel/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_11/kernel/rms"
  input: "RMSprop_1/conv2d_11/kernel/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/conv2d_11/kernel/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_11/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/conv2d_11/bias/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_1/conv2d_11/bias/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop_1/conv2d_11/bias/rms"
    }
  }
}
node {
  name: "RMSprop_1/conv2d_11/bias/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop_1/conv2d_11/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/bias"
      }
    }
  }
}
node {
  name: "RMSprop_1/conv2d_11/bias/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_11/bias/rms"
  input: "RMSprop_1/conv2d_11/bias/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/conv2d_11/bias/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_11/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_11/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/dense_2/kernel/rms/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000R\001\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "RMSprop_1/dense_2/kernel/rms/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_1/dense_2/kernel/rms/Initializer/zeros"
  op: "Fill"
  input: "RMSprop_1/dense_2/kernel/rms/Initializer/zeros/shape_as_tensor"
  input: "RMSprop_1/dense_2/kernel/rms/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_1/dense_2/kernel/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 86528
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop_1/dense_2/kernel/rms"
    }
  }
}
node {
  name: "RMSprop_1/dense_2/kernel/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop_1/dense_2/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
}
node {
  name: "RMSprop_1/dense_2/kernel/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop_1/dense_2/kernel/rms"
  input: "RMSprop_1/dense_2/kernel/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/dense_2/kernel/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/dense_2/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/dense_2/bias/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_1/dense_2/bias/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop_1/dense_2/bias/rms"
    }
  }
}
node {
  name: "RMSprop_1/dense_2/bias/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop_1/dense_2/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
}
node {
  name: "RMSprop_1/dense_2/bias/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop_1/dense_2/bias/rms"
  input: "RMSprop_1/dense_2/bias/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/dense_2/bias/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/dense_2/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/dense_3/kernel/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_1/dense_3/kernel/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop_1/dense_3/kernel/rms"
    }
  }
}
node {
  name: "RMSprop_1/dense_3/kernel/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop_1/dense_3/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
}
node {
  name: "RMSprop_1/dense_3/kernel/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop_1/dense_3/kernel/rms"
  input: "RMSprop_1/dense_3/kernel/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/dense_3/kernel/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/dense_3/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/dense_3/bias/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_1/dense_3/bias/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop_1/dense_3/bias/rms"
    }
  }
}
node {
  name: "RMSprop_1/dense_3/bias/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop_1/dense_3/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/bias"
      }
    }
  }
}
node {
  name: "RMSprop_1/dense_3/bias/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop_1/dense_3/bias/rms"
  input: "RMSprop_1/dense_3/bias/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/dense_3/bias/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/dense_3/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_6/kernel/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_6/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_6/kernel/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_6/kernel/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_6/kernel/mul"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_conv2d_6/kernel/ReadVariableOp"
  input: "RMSprop_1/RMSprop/update_conv2d_6/kernel/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_6/kernel/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop_1/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_6/kernel/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_6/kernel/sub"
  op: "Sub"
  input: "RMSprop_1/RMSprop/update_conv2d_6/kernel/sub/x"
  input: "RMSprop_1/RMSprop/update_conv2d_6/kernel/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_6/kernel/Square"
  op: "Square"
  input: "RMSprop_1/gradients/conv2d_6/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_6/kernel/mul_1"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_conv2d_6/kernel/sub"
  input: "RMSprop_1/RMSprop/update_conv2d_6/kernel/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_6/kernel/add"
  op: "Add"
  input: "RMSprop_1/RMSprop/update_conv2d_6/kernel/mul"
  input: "RMSprop_1/RMSprop/update_conv2d_6/kernel/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_6/kernel/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_6/kernel/rms"
  input: "RMSprop_1/RMSprop/update_conv2d_6/kernel/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_6/kernel/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_6/kernel/rms"
  input: "^RMSprop_1/RMSprop/update_conv2d_6/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_6/kernel/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop_1/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_6/kernel/mul_2"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_conv2d_6/kernel/ReadVariableOp_3"
  input: "RMSprop_1/gradients/conv2d_6/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_6/kernel/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_6/kernel/rms"
  input: "^RMSprop_1/RMSprop/update_conv2d_6/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_6/kernel/Sqrt"
  op: "Sqrt"
  input: "RMSprop_1/RMSprop/update_conv2d_6/kernel/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_6/kernel/add_1"
  op: "Add"
  input: "RMSprop_1/RMSprop/update_conv2d_6/kernel/Sqrt"
  input: "RMSprop_1/RMSprop/update_conv2d_6/kernel/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_6/kernel/truediv"
  op: "RealDiv"
  input: "RMSprop_1/RMSprop/update_conv2d_6/kernel/mul_2"
  input: "RMSprop_1/RMSprop/update_conv2d_6/kernel/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_6/kernel/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv2d_6/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_6/kernel/sub_1"
  op: "Sub"
  input: "RMSprop_1/RMSprop/update_conv2d_6/kernel/ReadVariableOp_4"
  input: "RMSprop_1/RMSprop/update_conv2d_6/kernel/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_6/kernel/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "conv2d_6/kernel"
  input: "RMSprop_1/RMSprop/update_conv2d_6/kernel/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_6/kernel/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv2d_6/kernel"
  input: "^RMSprop_1/RMSprop/update_conv2d_6/kernel/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_6/bias/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_6/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_6/bias/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_6/bias/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_6/bias/mul"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_conv2d_6/bias/ReadVariableOp"
  input: "RMSprop_1/RMSprop/update_conv2d_6/bias/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_6/bias/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop_1/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_6/bias/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_6/bias/sub"
  op: "Sub"
  input: "RMSprop_1/RMSprop/update_conv2d_6/bias/sub/x"
  input: "RMSprop_1/RMSprop/update_conv2d_6/bias/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_6/bias/Square"
  op: "Square"
  input: "RMSprop_1/gradients/conv2d_6/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_6/bias/mul_1"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_conv2d_6/bias/sub"
  input: "RMSprop_1/RMSprop/update_conv2d_6/bias/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_6/bias/add"
  op: "Add"
  input: "RMSprop_1/RMSprop/update_conv2d_6/bias/mul"
  input: "RMSprop_1/RMSprop/update_conv2d_6/bias/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_6/bias/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_6/bias/rms"
  input: "RMSprop_1/RMSprop/update_conv2d_6/bias/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_6/bias/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_6/bias/rms"
  input: "^RMSprop_1/RMSprop/update_conv2d_6/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_6/bias/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop_1/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_6/bias/mul_2"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_conv2d_6/bias/ReadVariableOp_3"
  input: "RMSprop_1/gradients/conv2d_6/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_6/bias/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_6/bias/rms"
  input: "^RMSprop_1/RMSprop/update_conv2d_6/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_6/bias/Sqrt"
  op: "Sqrt"
  input: "RMSprop_1/RMSprop/update_conv2d_6/bias/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_6/bias/add_1"
  op: "Add"
  input: "RMSprop_1/RMSprop/update_conv2d_6/bias/Sqrt"
  input: "RMSprop_1/RMSprop/update_conv2d_6/bias/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_6/bias/truediv"
  op: "RealDiv"
  input: "RMSprop_1/RMSprop/update_conv2d_6/bias/mul_2"
  input: "RMSprop_1/RMSprop/update_conv2d_6/bias/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_6/bias/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv2d_6/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_6/bias/sub_1"
  op: "Sub"
  input: "RMSprop_1/RMSprop/update_conv2d_6/bias/ReadVariableOp_4"
  input: "RMSprop_1/RMSprop/update_conv2d_6/bias/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_6/bias/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "conv2d_6/bias"
  input: "RMSprop_1/RMSprop/update_conv2d_6/bias/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_6/bias/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv2d_6/bias"
  input: "^RMSprop_1/RMSprop/update_conv2d_6/bias/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_7/kernel/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_7/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_7/kernel/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_7/kernel/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_7/kernel/mul"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_conv2d_7/kernel/ReadVariableOp"
  input: "RMSprop_1/RMSprop/update_conv2d_7/kernel/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_7/kernel/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop_1/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_7/kernel/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_7/kernel/sub"
  op: "Sub"
  input: "RMSprop_1/RMSprop/update_conv2d_7/kernel/sub/x"
  input: "RMSprop_1/RMSprop/update_conv2d_7/kernel/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_7/kernel/Square"
  op: "Square"
  input: "RMSprop_1/gradients/conv2d_7/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_7/kernel/mul_1"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_conv2d_7/kernel/sub"
  input: "RMSprop_1/RMSprop/update_conv2d_7/kernel/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_7/kernel/add"
  op: "Add"
  input: "RMSprop_1/RMSprop/update_conv2d_7/kernel/mul"
  input: "RMSprop_1/RMSprop/update_conv2d_7/kernel/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_7/kernel/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_7/kernel/rms"
  input: "RMSprop_1/RMSprop/update_conv2d_7/kernel/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_7/kernel/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_7/kernel/rms"
  input: "^RMSprop_1/RMSprop/update_conv2d_7/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_7/kernel/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop_1/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_7/kernel/mul_2"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_conv2d_7/kernel/ReadVariableOp_3"
  input: "RMSprop_1/gradients/conv2d_7/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_7/kernel/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_7/kernel/rms"
  input: "^RMSprop_1/RMSprop/update_conv2d_7/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_7/kernel/Sqrt"
  op: "Sqrt"
  input: "RMSprop_1/RMSprop/update_conv2d_7/kernel/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_7/kernel/add_1"
  op: "Add"
  input: "RMSprop_1/RMSprop/update_conv2d_7/kernel/Sqrt"
  input: "RMSprop_1/RMSprop/update_conv2d_7/kernel/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_7/kernel/truediv"
  op: "RealDiv"
  input: "RMSprop_1/RMSprop/update_conv2d_7/kernel/mul_2"
  input: "RMSprop_1/RMSprop/update_conv2d_7/kernel/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_7/kernel/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv2d_7/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_7/kernel/sub_1"
  op: "Sub"
  input: "RMSprop_1/RMSprop/update_conv2d_7/kernel/ReadVariableOp_4"
  input: "RMSprop_1/RMSprop/update_conv2d_7/kernel/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_7/kernel/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "conv2d_7/kernel"
  input: "RMSprop_1/RMSprop/update_conv2d_7/kernel/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_7/kernel/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv2d_7/kernel"
  input: "^RMSprop_1/RMSprop/update_conv2d_7/kernel/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_7/bias/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_7/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_7/bias/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_7/bias/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_7/bias/mul"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_conv2d_7/bias/ReadVariableOp"
  input: "RMSprop_1/RMSprop/update_conv2d_7/bias/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_7/bias/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop_1/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_7/bias/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_7/bias/sub"
  op: "Sub"
  input: "RMSprop_1/RMSprop/update_conv2d_7/bias/sub/x"
  input: "RMSprop_1/RMSprop/update_conv2d_7/bias/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_7/bias/Square"
  op: "Square"
  input: "RMSprop_1/gradients/conv2d_7/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_7/bias/mul_1"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_conv2d_7/bias/sub"
  input: "RMSprop_1/RMSprop/update_conv2d_7/bias/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_7/bias/add"
  op: "Add"
  input: "RMSprop_1/RMSprop/update_conv2d_7/bias/mul"
  input: "RMSprop_1/RMSprop/update_conv2d_7/bias/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_7/bias/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_7/bias/rms"
  input: "RMSprop_1/RMSprop/update_conv2d_7/bias/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_7/bias/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_7/bias/rms"
  input: "^RMSprop_1/RMSprop/update_conv2d_7/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_7/bias/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop_1/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_7/bias/mul_2"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_conv2d_7/bias/ReadVariableOp_3"
  input: "RMSprop_1/gradients/conv2d_7/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_7/bias/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_7/bias/rms"
  input: "^RMSprop_1/RMSprop/update_conv2d_7/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_7/bias/Sqrt"
  op: "Sqrt"
  input: "RMSprop_1/RMSprop/update_conv2d_7/bias/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_7/bias/add_1"
  op: "Add"
  input: "RMSprop_1/RMSprop/update_conv2d_7/bias/Sqrt"
  input: "RMSprop_1/RMSprop/update_conv2d_7/bias/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_7/bias/truediv"
  op: "RealDiv"
  input: "RMSprop_1/RMSprop/update_conv2d_7/bias/mul_2"
  input: "RMSprop_1/RMSprop/update_conv2d_7/bias/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_7/bias/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv2d_7/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_7/bias/sub_1"
  op: "Sub"
  input: "RMSprop_1/RMSprop/update_conv2d_7/bias/ReadVariableOp_4"
  input: "RMSprop_1/RMSprop/update_conv2d_7/bias/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_7/bias/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "conv2d_7/bias"
  input: "RMSprop_1/RMSprop/update_conv2d_7/bias/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_7/bias/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv2d_7/bias"
  input: "^RMSprop_1/RMSprop/update_conv2d_7/bias/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_8/kernel/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_8/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_8/kernel/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_8/kernel/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_8/kernel/mul"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_conv2d_8/kernel/ReadVariableOp"
  input: "RMSprop_1/RMSprop/update_conv2d_8/kernel/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_8/kernel/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop_1/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_8/kernel/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_8/kernel/sub"
  op: "Sub"
  input: "RMSprop_1/RMSprop/update_conv2d_8/kernel/sub/x"
  input: "RMSprop_1/RMSprop/update_conv2d_8/kernel/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_8/kernel/Square"
  op: "Square"
  input: "RMSprop_1/gradients/conv2d_8/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_8/kernel/mul_1"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_conv2d_8/kernel/sub"
  input: "RMSprop_1/RMSprop/update_conv2d_8/kernel/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_8/kernel/add"
  op: "Add"
  input: "RMSprop_1/RMSprop/update_conv2d_8/kernel/mul"
  input: "RMSprop_1/RMSprop/update_conv2d_8/kernel/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_8/kernel/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_8/kernel/rms"
  input: "RMSprop_1/RMSprop/update_conv2d_8/kernel/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_8/kernel/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_8/kernel/rms"
  input: "^RMSprop_1/RMSprop/update_conv2d_8/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_8/kernel/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop_1/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_8/kernel/mul_2"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_conv2d_8/kernel/ReadVariableOp_3"
  input: "RMSprop_1/gradients/conv2d_8/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_8/kernel/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_8/kernel/rms"
  input: "^RMSprop_1/RMSprop/update_conv2d_8/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_8/kernel/Sqrt"
  op: "Sqrt"
  input: "RMSprop_1/RMSprop/update_conv2d_8/kernel/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_8/kernel/add_1"
  op: "Add"
  input: "RMSprop_1/RMSprop/update_conv2d_8/kernel/Sqrt"
  input: "RMSprop_1/RMSprop/update_conv2d_8/kernel/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_8/kernel/truediv"
  op: "RealDiv"
  input: "RMSprop_1/RMSprop/update_conv2d_8/kernel/mul_2"
  input: "RMSprop_1/RMSprop/update_conv2d_8/kernel/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_8/kernel/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv2d_8/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_8/kernel/sub_1"
  op: "Sub"
  input: "RMSprop_1/RMSprop/update_conv2d_8/kernel/ReadVariableOp_4"
  input: "RMSprop_1/RMSprop/update_conv2d_8/kernel/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_8/kernel/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "conv2d_8/kernel"
  input: "RMSprop_1/RMSprop/update_conv2d_8/kernel/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_8/kernel/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv2d_8/kernel"
  input: "^RMSprop_1/RMSprop/update_conv2d_8/kernel/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_8/bias/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_8/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_8/bias/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_8/bias/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_8/bias/mul"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_conv2d_8/bias/ReadVariableOp"
  input: "RMSprop_1/RMSprop/update_conv2d_8/bias/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_8/bias/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop_1/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_8/bias/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_8/bias/sub"
  op: "Sub"
  input: "RMSprop_1/RMSprop/update_conv2d_8/bias/sub/x"
  input: "RMSprop_1/RMSprop/update_conv2d_8/bias/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_8/bias/Square"
  op: "Square"
  input: "RMSprop_1/gradients/conv2d_8/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_8/bias/mul_1"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_conv2d_8/bias/sub"
  input: "RMSprop_1/RMSprop/update_conv2d_8/bias/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_8/bias/add"
  op: "Add"
  input: "RMSprop_1/RMSprop/update_conv2d_8/bias/mul"
  input: "RMSprop_1/RMSprop/update_conv2d_8/bias/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_8/bias/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_8/bias/rms"
  input: "RMSprop_1/RMSprop/update_conv2d_8/bias/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_8/bias/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_8/bias/rms"
  input: "^RMSprop_1/RMSprop/update_conv2d_8/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_8/bias/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop_1/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_8/bias/mul_2"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_conv2d_8/bias/ReadVariableOp_3"
  input: "RMSprop_1/gradients/conv2d_8/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_8/bias/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_8/bias/rms"
  input: "^RMSprop_1/RMSprop/update_conv2d_8/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_8/bias/Sqrt"
  op: "Sqrt"
  input: "RMSprop_1/RMSprop/update_conv2d_8/bias/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_8/bias/add_1"
  op: "Add"
  input: "RMSprop_1/RMSprop/update_conv2d_8/bias/Sqrt"
  input: "RMSprop_1/RMSprop/update_conv2d_8/bias/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_8/bias/truediv"
  op: "RealDiv"
  input: "RMSprop_1/RMSprop/update_conv2d_8/bias/mul_2"
  input: "RMSprop_1/RMSprop/update_conv2d_8/bias/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_8/bias/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv2d_8/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_8/bias/sub_1"
  op: "Sub"
  input: "RMSprop_1/RMSprop/update_conv2d_8/bias/ReadVariableOp_4"
  input: "RMSprop_1/RMSprop/update_conv2d_8/bias/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_8/bias/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "conv2d_8/bias"
  input: "RMSprop_1/RMSprop/update_conv2d_8/bias/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_8/bias/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv2d_8/bias"
  input: "^RMSprop_1/RMSprop/update_conv2d_8/bias/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_9/kernel/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_9/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_9/kernel/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_9/kernel/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_9/kernel/mul"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_conv2d_9/kernel/ReadVariableOp"
  input: "RMSprop_1/RMSprop/update_conv2d_9/kernel/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_9/kernel/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop_1/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_9/kernel/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_9/kernel/sub"
  op: "Sub"
  input: "RMSprop_1/RMSprop/update_conv2d_9/kernel/sub/x"
  input: "RMSprop_1/RMSprop/update_conv2d_9/kernel/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_9/kernel/Square"
  op: "Square"
  input: "RMSprop_1/gradients/conv2d_9/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_9/kernel/mul_1"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_conv2d_9/kernel/sub"
  input: "RMSprop_1/RMSprop/update_conv2d_9/kernel/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_9/kernel/add"
  op: "Add"
  input: "RMSprop_1/RMSprop/update_conv2d_9/kernel/mul"
  input: "RMSprop_1/RMSprop/update_conv2d_9/kernel/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_9/kernel/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_9/kernel/rms"
  input: "RMSprop_1/RMSprop/update_conv2d_9/kernel/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_9/kernel/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_9/kernel/rms"
  input: "^RMSprop_1/RMSprop/update_conv2d_9/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_9/kernel/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop_1/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_9/kernel/mul_2"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_conv2d_9/kernel/ReadVariableOp_3"
  input: "RMSprop_1/gradients/conv2d_9/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_9/kernel/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_9/kernel/rms"
  input: "^RMSprop_1/RMSprop/update_conv2d_9/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_9/kernel/Sqrt"
  op: "Sqrt"
  input: "RMSprop_1/RMSprop/update_conv2d_9/kernel/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_9/kernel/add_1"
  op: "Add"
  input: "RMSprop_1/RMSprop/update_conv2d_9/kernel/Sqrt"
  input: "RMSprop_1/RMSprop/update_conv2d_9/kernel/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_9/kernel/truediv"
  op: "RealDiv"
  input: "RMSprop_1/RMSprop/update_conv2d_9/kernel/mul_2"
  input: "RMSprop_1/RMSprop/update_conv2d_9/kernel/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_9/kernel/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv2d_9/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_9/kernel/sub_1"
  op: "Sub"
  input: "RMSprop_1/RMSprop/update_conv2d_9/kernel/ReadVariableOp_4"
  input: "RMSprop_1/RMSprop/update_conv2d_9/kernel/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_9/kernel/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "conv2d_9/kernel"
  input: "RMSprop_1/RMSprop/update_conv2d_9/kernel/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_9/kernel/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv2d_9/kernel"
  input: "^RMSprop_1/RMSprop/update_conv2d_9/kernel/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_9/bias/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_9/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_9/bias/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_9/bias/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_9/bias/mul"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_conv2d_9/bias/ReadVariableOp"
  input: "RMSprop_1/RMSprop/update_conv2d_9/bias/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_9/bias/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop_1/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_9/bias/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_9/bias/sub"
  op: "Sub"
  input: "RMSprop_1/RMSprop/update_conv2d_9/bias/sub/x"
  input: "RMSprop_1/RMSprop/update_conv2d_9/bias/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_9/bias/Square"
  op: "Square"
  input: "RMSprop_1/gradients/conv2d_9/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_9/bias/mul_1"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_conv2d_9/bias/sub"
  input: "RMSprop_1/RMSprop/update_conv2d_9/bias/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_9/bias/add"
  op: "Add"
  input: "RMSprop_1/RMSprop/update_conv2d_9/bias/mul"
  input: "RMSprop_1/RMSprop/update_conv2d_9/bias/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_9/bias/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_9/bias/rms"
  input: "RMSprop_1/RMSprop/update_conv2d_9/bias/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_9/bias/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_9/bias/rms"
  input: "^RMSprop_1/RMSprop/update_conv2d_9/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_9/bias/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop_1/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_9/bias/mul_2"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_conv2d_9/bias/ReadVariableOp_3"
  input: "RMSprop_1/gradients/conv2d_9/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_9/bias/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_9/bias/rms"
  input: "^RMSprop_1/RMSprop/update_conv2d_9/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_9/bias/Sqrt"
  op: "Sqrt"
  input: "RMSprop_1/RMSprop/update_conv2d_9/bias/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_9/bias/add_1"
  op: "Add"
  input: "RMSprop_1/RMSprop/update_conv2d_9/bias/Sqrt"
  input: "RMSprop_1/RMSprop/update_conv2d_9/bias/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_9/bias/truediv"
  op: "RealDiv"
  input: "RMSprop_1/RMSprop/update_conv2d_9/bias/mul_2"
  input: "RMSprop_1/RMSprop/update_conv2d_9/bias/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_9/bias/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv2d_9/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_9/bias/sub_1"
  op: "Sub"
  input: "RMSprop_1/RMSprop/update_conv2d_9/bias/ReadVariableOp_4"
  input: "RMSprop_1/RMSprop/update_conv2d_9/bias/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_9/bias/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "conv2d_9/bias"
  input: "RMSprop_1/RMSprop/update_conv2d_9/bias/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_9/bias/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv2d_9/bias"
  input: "^RMSprop_1/RMSprop/update_conv2d_9/bias/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_10/kernel/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_10/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_10/kernel/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_10/kernel/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_10/kernel/mul"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_conv2d_10/kernel/ReadVariableOp"
  input: "RMSprop_1/RMSprop/update_conv2d_10/kernel/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_10/kernel/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop_1/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_10/kernel/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_10/kernel/sub"
  op: "Sub"
  input: "RMSprop_1/RMSprop/update_conv2d_10/kernel/sub/x"
  input: "RMSprop_1/RMSprop/update_conv2d_10/kernel/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_10/kernel/Square"
  op: "Square"
  input: "RMSprop_1/gradients/conv2d_10/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_10/kernel/mul_1"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_conv2d_10/kernel/sub"
  input: "RMSprop_1/RMSprop/update_conv2d_10/kernel/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_10/kernel/add"
  op: "Add"
  input: "RMSprop_1/RMSprop/update_conv2d_10/kernel/mul"
  input: "RMSprop_1/RMSprop/update_conv2d_10/kernel/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_10/kernel/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_10/kernel/rms"
  input: "RMSprop_1/RMSprop/update_conv2d_10/kernel/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_10/kernel/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_10/kernel/rms"
  input: "^RMSprop_1/RMSprop/update_conv2d_10/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_10/kernel/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop_1/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_10/kernel/mul_2"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_conv2d_10/kernel/ReadVariableOp_3"
  input: "RMSprop_1/gradients/conv2d_10/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_10/kernel/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_10/kernel/rms"
  input: "^RMSprop_1/RMSprop/update_conv2d_10/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_10/kernel/Sqrt"
  op: "Sqrt"
  input: "RMSprop_1/RMSprop/update_conv2d_10/kernel/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_10/kernel/add_1"
  op: "Add"
  input: "RMSprop_1/RMSprop/update_conv2d_10/kernel/Sqrt"
  input: "RMSprop_1/RMSprop/update_conv2d_10/kernel/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_10/kernel/truediv"
  op: "RealDiv"
  input: "RMSprop_1/RMSprop/update_conv2d_10/kernel/mul_2"
  input: "RMSprop_1/RMSprop/update_conv2d_10/kernel/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_10/kernel/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv2d_10/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_10/kernel/sub_1"
  op: "Sub"
  input: "RMSprop_1/RMSprop/update_conv2d_10/kernel/ReadVariableOp_4"
  input: "RMSprop_1/RMSprop/update_conv2d_10/kernel/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_10/kernel/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "conv2d_10/kernel"
  input: "RMSprop_1/RMSprop/update_conv2d_10/kernel/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_10/kernel/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv2d_10/kernel"
  input: "^RMSprop_1/RMSprop/update_conv2d_10/kernel/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_10/bias/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_10/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_10/bias/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_10/bias/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_10/bias/mul"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_conv2d_10/bias/ReadVariableOp"
  input: "RMSprop_1/RMSprop/update_conv2d_10/bias/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_10/bias/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop_1/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_10/bias/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_10/bias/sub"
  op: "Sub"
  input: "RMSprop_1/RMSprop/update_conv2d_10/bias/sub/x"
  input: "RMSprop_1/RMSprop/update_conv2d_10/bias/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_10/bias/Square"
  op: "Square"
  input: "RMSprop_1/gradients/conv2d_10/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_10/bias/mul_1"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_conv2d_10/bias/sub"
  input: "RMSprop_1/RMSprop/update_conv2d_10/bias/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_10/bias/add"
  op: "Add"
  input: "RMSprop_1/RMSprop/update_conv2d_10/bias/mul"
  input: "RMSprop_1/RMSprop/update_conv2d_10/bias/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_10/bias/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_10/bias/rms"
  input: "RMSprop_1/RMSprop/update_conv2d_10/bias/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_10/bias/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_10/bias/rms"
  input: "^RMSprop_1/RMSprop/update_conv2d_10/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_10/bias/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop_1/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_10/bias/mul_2"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_conv2d_10/bias/ReadVariableOp_3"
  input: "RMSprop_1/gradients/conv2d_10/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_10/bias/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_10/bias/rms"
  input: "^RMSprop_1/RMSprop/update_conv2d_10/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_10/bias/Sqrt"
  op: "Sqrt"
  input: "RMSprop_1/RMSprop/update_conv2d_10/bias/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_10/bias/add_1"
  op: "Add"
  input: "RMSprop_1/RMSprop/update_conv2d_10/bias/Sqrt"
  input: "RMSprop_1/RMSprop/update_conv2d_10/bias/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_10/bias/truediv"
  op: "RealDiv"
  input: "RMSprop_1/RMSprop/update_conv2d_10/bias/mul_2"
  input: "RMSprop_1/RMSprop/update_conv2d_10/bias/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_10/bias/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv2d_10/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_10/bias/sub_1"
  op: "Sub"
  input: "RMSprop_1/RMSprop/update_conv2d_10/bias/ReadVariableOp_4"
  input: "RMSprop_1/RMSprop/update_conv2d_10/bias/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_10/bias/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "conv2d_10/bias"
  input: "RMSprop_1/RMSprop/update_conv2d_10/bias/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_10/bias/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv2d_10/bias"
  input: "^RMSprop_1/RMSprop/update_conv2d_10/bias/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_11/kernel/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_11/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_11/kernel/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_11/kernel/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_11/kernel/mul"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_conv2d_11/kernel/ReadVariableOp"
  input: "RMSprop_1/RMSprop/update_conv2d_11/kernel/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_11/kernel/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop_1/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_11/kernel/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_11/kernel/sub"
  op: "Sub"
  input: "RMSprop_1/RMSprop/update_conv2d_11/kernel/sub/x"
  input: "RMSprop_1/RMSprop/update_conv2d_11/kernel/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_11/kernel/Square"
  op: "Square"
  input: "RMSprop_1/gradients/conv2d_11/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_11/kernel/mul_1"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_conv2d_11/kernel/sub"
  input: "RMSprop_1/RMSprop/update_conv2d_11/kernel/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_11/kernel/add"
  op: "Add"
  input: "RMSprop_1/RMSprop/update_conv2d_11/kernel/mul"
  input: "RMSprop_1/RMSprop/update_conv2d_11/kernel/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_11/kernel/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_11/kernel/rms"
  input: "RMSprop_1/RMSprop/update_conv2d_11/kernel/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_11/kernel/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_11/kernel/rms"
  input: "^RMSprop_1/RMSprop/update_conv2d_11/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_11/kernel/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop_1/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_11/kernel/mul_2"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_conv2d_11/kernel/ReadVariableOp_3"
  input: "RMSprop_1/gradients/conv2d_11/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_11/kernel/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_11/kernel/rms"
  input: "^RMSprop_1/RMSprop/update_conv2d_11/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_11/kernel/Sqrt"
  op: "Sqrt"
  input: "RMSprop_1/RMSprop/update_conv2d_11/kernel/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_11/kernel/add_1"
  op: "Add"
  input: "RMSprop_1/RMSprop/update_conv2d_11/kernel/Sqrt"
  input: "RMSprop_1/RMSprop/update_conv2d_11/kernel/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_11/kernel/truediv"
  op: "RealDiv"
  input: "RMSprop_1/RMSprop/update_conv2d_11/kernel/mul_2"
  input: "RMSprop_1/RMSprop/update_conv2d_11/kernel/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_11/kernel/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv2d_11/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_11/kernel/sub_1"
  op: "Sub"
  input: "RMSprop_1/RMSprop/update_conv2d_11/kernel/ReadVariableOp_4"
  input: "RMSprop_1/RMSprop/update_conv2d_11/kernel/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_11/kernel/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "conv2d_11/kernel"
  input: "RMSprop_1/RMSprop/update_conv2d_11/kernel/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_11/kernel/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv2d_11/kernel"
  input: "^RMSprop_1/RMSprop/update_conv2d_11/kernel/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_11/bias/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_11/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_11/bias/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_11/bias/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_11/bias/mul"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_conv2d_11/bias/ReadVariableOp"
  input: "RMSprop_1/RMSprop/update_conv2d_11/bias/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_11/bias/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop_1/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_11/bias/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_11/bias/sub"
  op: "Sub"
  input: "RMSprop_1/RMSprop/update_conv2d_11/bias/sub/x"
  input: "RMSprop_1/RMSprop/update_conv2d_11/bias/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_11/bias/Square"
  op: "Square"
  input: "RMSprop_1/gradients/conv2d_11/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_11/bias/mul_1"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_conv2d_11/bias/sub"
  input: "RMSprop_1/RMSprop/update_conv2d_11/bias/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_11/bias/add"
  op: "Add"
  input: "RMSprop_1/RMSprop/update_conv2d_11/bias/mul"
  input: "RMSprop_1/RMSprop/update_conv2d_11/bias/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_11/bias/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_11/bias/rms"
  input: "RMSprop_1/RMSprop/update_conv2d_11/bias/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_11/bias/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_11/bias/rms"
  input: "^RMSprop_1/RMSprop/update_conv2d_11/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_11/bias/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop_1/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_11/bias/mul_2"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_conv2d_11/bias/ReadVariableOp_3"
  input: "RMSprop_1/gradients/conv2d_11/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_11/bias/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/conv2d_11/bias/rms"
  input: "^RMSprop_1/RMSprop/update_conv2d_11/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_11/bias/Sqrt"
  op: "Sqrt"
  input: "RMSprop_1/RMSprop/update_conv2d_11/bias/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_11/bias/add_1"
  op: "Add"
  input: "RMSprop_1/RMSprop/update_conv2d_11/bias/Sqrt"
  input: "RMSprop_1/RMSprop/update_conv2d_11/bias/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_11/bias/truediv"
  op: "RealDiv"
  input: "RMSprop_1/RMSprop/update_conv2d_11/bias/mul_2"
  input: "RMSprop_1/RMSprop/update_conv2d_11/bias/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_11/bias/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv2d_11/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_11/bias/sub_1"
  op: "Sub"
  input: "RMSprop_1/RMSprop/update_conv2d_11/bias/ReadVariableOp_4"
  input: "RMSprop_1/RMSprop/update_conv2d_11/bias/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_11/bias/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "conv2d_11/bias"
  input: "RMSprop_1/RMSprop/update_conv2d_11/bias/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_conv2d_11/bias/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv2d_11/bias"
  input: "^RMSprop_1/RMSprop/update_conv2d_11/bias/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_2/kernel/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_2/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_2/kernel/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/dense_2/kernel/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_2/kernel/mul"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_dense_2/kernel/ReadVariableOp"
  input: "RMSprop_1/RMSprop/update_dense_2/kernel/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_2/kernel/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop_1/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_2/kernel/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_2/kernel/sub"
  op: "Sub"
  input: "RMSprop_1/RMSprop/update_dense_2/kernel/sub/x"
  input: "RMSprop_1/RMSprop/update_dense_2/kernel/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_2/kernel/Square"
  op: "Square"
  input: "RMSprop_1/gradients/dense_2/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_2/kernel/mul_1"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_dense_2/kernel/sub"
  input: "RMSprop_1/RMSprop/update_dense_2/kernel/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_2/kernel/add"
  op: "Add"
  input: "RMSprop_1/RMSprop/update_dense_2/kernel/mul"
  input: "RMSprop_1/RMSprop/update_dense_2/kernel/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_2/kernel/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop_1/dense_2/kernel/rms"
  input: "RMSprop_1/RMSprop/update_dense_2/kernel/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_2/kernel/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop_1/dense_2/kernel/rms"
  input: "^RMSprop_1/RMSprop/update_dense_2/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_2/kernel/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop_1/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_2/kernel/mul_2"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_dense_2/kernel/ReadVariableOp_3"
  input: "RMSprop_1/gradients/dense_2/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_2/kernel/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/dense_2/kernel/rms"
  input: "^RMSprop_1/RMSprop/update_dense_2/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_2/kernel/Sqrt"
  op: "Sqrt"
  input: "RMSprop_1/RMSprop/update_dense_2/kernel/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_2/kernel/add_1"
  op: "Add"
  input: "RMSprop_1/RMSprop/update_dense_2/kernel/Sqrt"
  input: "RMSprop_1/RMSprop/update_dense_2/kernel/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_2/kernel/truediv"
  op: "RealDiv"
  input: "RMSprop_1/RMSprop/update_dense_2/kernel/mul_2"
  input: "RMSprop_1/RMSprop/update_dense_2/kernel/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_2/kernel/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "dense_2/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_2/kernel/sub_1"
  op: "Sub"
  input: "RMSprop_1/RMSprop/update_dense_2/kernel/ReadVariableOp_4"
  input: "RMSprop_1/RMSprop/update_dense_2/kernel/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_2/kernel/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "dense_2/kernel"
  input: "RMSprop_1/RMSprop/update_dense_2/kernel/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_2/kernel/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "dense_2/kernel"
  input: "^RMSprop_1/RMSprop/update_dense_2/kernel/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_2/bias/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_2/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_2/bias/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/dense_2/bias/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_2/bias/mul"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_dense_2/bias/ReadVariableOp"
  input: "RMSprop_1/RMSprop/update_dense_2/bias/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_2/bias/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop_1/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_2/bias/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_2/bias/sub"
  op: "Sub"
  input: "RMSprop_1/RMSprop/update_dense_2/bias/sub/x"
  input: "RMSprop_1/RMSprop/update_dense_2/bias/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_2/bias/Square"
  op: "Square"
  input: "RMSprop_1/gradients/dense_2/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_2/bias/mul_1"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_dense_2/bias/sub"
  input: "RMSprop_1/RMSprop/update_dense_2/bias/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_2/bias/add"
  op: "Add"
  input: "RMSprop_1/RMSprop/update_dense_2/bias/mul"
  input: "RMSprop_1/RMSprop/update_dense_2/bias/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_2/bias/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop_1/dense_2/bias/rms"
  input: "RMSprop_1/RMSprop/update_dense_2/bias/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_2/bias/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop_1/dense_2/bias/rms"
  input: "^RMSprop_1/RMSprop/update_dense_2/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_2/bias/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop_1/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_2/bias/mul_2"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_dense_2/bias/ReadVariableOp_3"
  input: "RMSprop_1/gradients/dense_2/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_2/bias/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/dense_2/bias/rms"
  input: "^RMSprop_1/RMSprop/update_dense_2/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_2/bias/Sqrt"
  op: "Sqrt"
  input: "RMSprop_1/RMSprop/update_dense_2/bias/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_2/bias/add_1"
  op: "Add"
  input: "RMSprop_1/RMSprop/update_dense_2/bias/Sqrt"
  input: "RMSprop_1/RMSprop/update_dense_2/bias/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_2/bias/truediv"
  op: "RealDiv"
  input: "RMSprop_1/RMSprop/update_dense_2/bias/mul_2"
  input: "RMSprop_1/RMSprop/update_dense_2/bias/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_2/bias/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "dense_2/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_2/bias/sub_1"
  op: "Sub"
  input: "RMSprop_1/RMSprop/update_dense_2/bias/ReadVariableOp_4"
  input: "RMSprop_1/RMSprop/update_dense_2/bias/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_2/bias/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "dense_2/bias"
  input: "RMSprop_1/RMSprop/update_dense_2/bias/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_2/bias/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "dense_2/bias"
  input: "^RMSprop_1/RMSprop/update_dense_2/bias/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_3/kernel/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_3/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_3/kernel/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/dense_3/kernel/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_3/kernel/mul"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_dense_3/kernel/ReadVariableOp"
  input: "RMSprop_1/RMSprop/update_dense_3/kernel/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_3/kernel/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop_1/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_3/kernel/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_3/kernel/sub"
  op: "Sub"
  input: "RMSprop_1/RMSprop/update_dense_3/kernel/sub/x"
  input: "RMSprop_1/RMSprop/update_dense_3/kernel/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_3/kernel/Square"
  op: "Square"
  input: "RMSprop_1/gradients/dense_3/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_3/kernel/mul_1"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_dense_3/kernel/sub"
  input: "RMSprop_1/RMSprop/update_dense_3/kernel/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_3/kernel/add"
  op: "Add"
  input: "RMSprop_1/RMSprop/update_dense_3/kernel/mul"
  input: "RMSprop_1/RMSprop/update_dense_3/kernel/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_3/kernel/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop_1/dense_3/kernel/rms"
  input: "RMSprop_1/RMSprop/update_dense_3/kernel/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_3/kernel/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop_1/dense_3/kernel/rms"
  input: "^RMSprop_1/RMSprop/update_dense_3/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_3/kernel/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop_1/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_3/kernel/mul_2"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_dense_3/kernel/ReadVariableOp_3"
  input: "RMSprop_1/gradients/dense_3/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_3/kernel/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/dense_3/kernel/rms"
  input: "^RMSprop_1/RMSprop/update_dense_3/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_3/kernel/Sqrt"
  op: "Sqrt"
  input: "RMSprop_1/RMSprop/update_dense_3/kernel/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_3/kernel/add_1"
  op: "Add"
  input: "RMSprop_1/RMSprop/update_dense_3/kernel/Sqrt"
  input: "RMSprop_1/RMSprop/update_dense_3/kernel/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_3/kernel/truediv"
  op: "RealDiv"
  input: "RMSprop_1/RMSprop/update_dense_3/kernel/mul_2"
  input: "RMSprop_1/RMSprop/update_dense_3/kernel/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_3/kernel/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "dense_3/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_3/kernel/sub_1"
  op: "Sub"
  input: "RMSprop_1/RMSprop/update_dense_3/kernel/ReadVariableOp_4"
  input: "RMSprop_1/RMSprop/update_dense_3/kernel/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_3/kernel/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "dense_3/kernel"
  input: "RMSprop_1/RMSprop/update_dense_3/kernel/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_3/kernel/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "dense_3/kernel"
  input: "^RMSprop_1/RMSprop/update_dense_3/kernel/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_3/bias/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_3/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_3/bias/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/dense_3/bias/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_3/bias/mul"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_dense_3/bias/ReadVariableOp"
  input: "RMSprop_1/RMSprop/update_dense_3/bias/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_3/bias/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop_1/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_3/bias/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_3/bias/sub"
  op: "Sub"
  input: "RMSprop_1/RMSprop/update_dense_3/bias/sub/x"
  input: "RMSprop_1/RMSprop/update_dense_3/bias/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_3/bias/Square"
  op: "Square"
  input: "RMSprop_1/gradients/dense_3/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_3/bias/mul_1"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_dense_3/bias/sub"
  input: "RMSprop_1/RMSprop/update_dense_3/bias/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_3/bias/add"
  op: "Add"
  input: "RMSprop_1/RMSprop/update_dense_3/bias/mul"
  input: "RMSprop_1/RMSprop/update_dense_3/bias/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_3/bias/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop_1/dense_3/bias/rms"
  input: "RMSprop_1/RMSprop/update_dense_3/bias/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_3/bias/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop_1/dense_3/bias/rms"
  input: "^RMSprop_1/RMSprop/update_dense_3/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_3/bias/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop_1/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_3/bias/mul_2"
  op: "Mul"
  input: "RMSprop_1/RMSprop/update_dense_3/bias/ReadVariableOp_3"
  input: "RMSprop_1/gradients/dense_3/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_3/bias/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/dense_3/bias/rms"
  input: "^RMSprop_1/RMSprop/update_dense_3/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_3/bias/Sqrt"
  op: "Sqrt"
  input: "RMSprop_1/RMSprop/update_dense_3/bias/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_3/bias/add_1"
  op: "Add"
  input: "RMSprop_1/RMSprop/update_dense_3/bias/Sqrt"
  input: "RMSprop_1/RMSprop/update_dense_3/bias/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_3/bias/truediv"
  op: "RealDiv"
  input: "RMSprop_1/RMSprop/update_dense_3/bias/mul_2"
  input: "RMSprop_1/RMSprop/update_dense_3/bias/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_3/bias/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "dense_3/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_3/bias/sub_1"
  op: "Sub"
  input: "RMSprop_1/RMSprop/update_dense_3/bias/ReadVariableOp_4"
  input: "RMSprop_1/RMSprop/update_dense_3/bias/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_3/bias/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "dense_3/bias"
  input: "RMSprop_1/RMSprop/update_dense_3/bias/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/update_dense_3/bias/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "dense_3/bias"
  input: "^RMSprop_1/RMSprop/update_dense_3/bias/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/Const"
  op: "Const"
  input: "^RMSprop_1/RMSprop/update_conv2d_10/bias/AssignVariableOp_1"
  input: "^RMSprop_1/RMSprop/update_conv2d_10/kernel/AssignVariableOp_1"
  input: "^RMSprop_1/RMSprop/update_conv2d_11/bias/AssignVariableOp_1"
  input: "^RMSprop_1/RMSprop/update_conv2d_11/kernel/AssignVariableOp_1"
  input: "^RMSprop_1/RMSprop/update_conv2d_6/bias/AssignVariableOp_1"
  input: "^RMSprop_1/RMSprop/update_conv2d_6/kernel/AssignVariableOp_1"
  input: "^RMSprop_1/RMSprop/update_conv2d_7/bias/AssignVariableOp_1"
  input: "^RMSprop_1/RMSprop/update_conv2d_7/kernel/AssignVariableOp_1"
  input: "^RMSprop_1/RMSprop/update_conv2d_8/bias/AssignVariableOp_1"
  input: "^RMSprop_1/RMSprop/update_conv2d_8/kernel/AssignVariableOp_1"
  input: "^RMSprop_1/RMSprop/update_conv2d_9/bias/AssignVariableOp_1"
  input: "^RMSprop_1/RMSprop/update_conv2d_9/kernel/AssignVariableOp_1"
  input: "^RMSprop_1/RMSprop/update_dense_2/bias/AssignVariableOp_1"
  input: "^RMSprop_1/RMSprop/update_dense_2/kernel/AssignVariableOp_1"
  input: "^RMSprop_1/RMSprop/update_dense_3/bias/AssignVariableOp_1"
  input: "^RMSprop_1/RMSprop/update_dense_3/kernel/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "RMSprop_1/iter"
  input: "RMSprop_1/RMSprop/Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "RMSprop_1/RMSprop/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_1/iter"
  input: "^RMSprop_1/RMSprop/AssignAddVariableOp"
  input: "^RMSprop_1/RMSprop/update_conv2d_10/bias/AssignVariableOp_1"
  input: "^RMSprop_1/RMSprop/update_conv2d_10/kernel/AssignVariableOp_1"
  input: "^RMSprop_1/RMSprop/update_conv2d_11/bias/AssignVariableOp_1"
  input: "^RMSprop_1/RMSprop/update_conv2d_11/kernel/AssignVariableOp_1"
  input: "^RMSprop_1/RMSprop/update_conv2d_6/bias/AssignVariableOp_1"
  input: "^RMSprop_1/RMSprop/update_conv2d_6/kernel/AssignVariableOp_1"
  input: "^RMSprop_1/RMSprop/update_conv2d_7/bias/AssignVariableOp_1"
  input: "^RMSprop_1/RMSprop/update_conv2d_7/kernel/AssignVariableOp_1"
  input: "^RMSprop_1/RMSprop/update_conv2d_8/bias/AssignVariableOp_1"
  input: "^RMSprop_1/RMSprop/update_conv2d_8/kernel/AssignVariableOp_1"
  input: "^RMSprop_1/RMSprop/update_conv2d_9/bias/AssignVariableOp_1"
  input: "^RMSprop_1/RMSprop/update_conv2d_9/kernel/AssignVariableOp_1"
  input: "^RMSprop_1/RMSprop/update_dense_2/bias/AssignVariableOp_1"
  input: "^RMSprop_1/RMSprop/update_dense_2/kernel/AssignVariableOp_1"
  input: "^RMSprop_1/RMSprop/update_dense_3/bias/AssignVariableOp_1"
  input: "^RMSprop_1/RMSprop/update_dense_3/kernel/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training_3/group_deps"
  op: "NoOp"
  input: "^RMSprop_1/RMSprop/AssignAddVariableOp"
  input: "^loss_1/mul"
}
node {
  name: "Placeholder_2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "total_1"
  input: "Placeholder_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "total_1"
  input: "^AssignVariableOp_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_3"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "count_1"
  input: "Placeholder_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "count_1"
  input: "^AssignVariableOp_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VarIsInitializedOp_39"
  op: "VarIsInitializedOp"
  input: "RMSprop_1/conv2d_6/kernel/rms"
}
node {
  name: "VarIsInitializedOp_40"
  op: "VarIsInitializedOp"
  input: "RMSprop_1/conv2d_8/kernel/rms"
}
node {
  name: "VarIsInitializedOp_41"
  op: "VarIsInitializedOp"
  input: "RMSprop_1/learning_rate"
}
node {
  name: "VarIsInitializedOp_42"
  op: "VarIsInitializedOp"
  input: "RMSprop_1/iter"
}
node {
  name: "VarIsInitializedOp_43"
  op: "VarIsInitializedOp"
  input: "RMSprop_1/conv2d_6/bias/rms"
}
node {
  name: "VarIsInitializedOp_44"
  op: "VarIsInitializedOp"
  input: "RMSprop_1/conv2d_8/bias/rms"
}
node {
  name: "VarIsInitializedOp_45"
  op: "VarIsInitializedOp"
  input: "RMSprop_1/decay"
}
node {
  name: "VarIsInitializedOp_46"
  op: "VarIsInitializedOp"
  input: "RMSprop_1/momentum"
}
node {
  name: "VarIsInitializedOp_47"
  op: "VarIsInitializedOp"
  input: "RMSprop_1/rho"
}
node {
  name: "VarIsInitializedOp_48"
  op: "VarIsInitializedOp"
  input: "RMSprop_1/conv2d_7/bias/rms"
}
node {
  name: "VarIsInitializedOp_49"
  op: "VarIsInitializedOp"
  input: "RMSprop_1/conv2d_7/kernel/rms"
}
node {
  name: "VarIsInitializedOp_50"
  op: "VarIsInitializedOp"
  input: "RMSprop_1/dense_2/kernel/rms"
}
node {
  name: "VarIsInitializedOp_51"
  op: "VarIsInitializedOp"
  input: "RMSprop_1/conv2d_10/bias/rms"
}
node {
  name: "VarIsInitializedOp_52"
  op: "VarIsInitializedOp"
  input: "RMSprop_1/conv2d_11/kernel/rms"
}
node {
  name: "VarIsInitializedOp_53"
  op: "VarIsInitializedOp"
  input: "RMSprop_1/dense_3/kernel/rms"
}
node {
  name: "VarIsInitializedOp_54"
  op: "VarIsInitializedOp"
  input: "RMSprop_1/dense_2/bias/rms"
}
node {
  name: "VarIsInitializedOp_55"
  op: "VarIsInitializedOp"
  input: "RMSprop_1/conv2d_10/kernel/rms"
}
node {
  name: "VarIsInitializedOp_56"
  op: "VarIsInitializedOp"
  input: "conv2d_6/bias"
}
node {
  name: "VarIsInitializedOp_57"
  op: "VarIsInitializedOp"
  input: "RMSprop_1/conv2d_11/bias/rms"
}
node {
  name: "VarIsInitializedOp_58"
  op: "VarIsInitializedOp"
  input: "dense_2/bias"
}
node {
  name: "VarIsInitializedOp_59"
  op: "VarIsInitializedOp"
  input: "RMSprop_1/conv2d_9/kernel/rms"
}
node {
  name: "VarIsInitializedOp_60"
  op: "VarIsInitializedOp"
  input: "conv2d_11/kernel"
}
node {
  name: "VarIsInitializedOp_61"
  op: "VarIsInitializedOp"
  input: "RMSprop_1/conv2d_9/bias/rms"
}
node {
  name: "VarIsInitializedOp_62"
  op: "VarIsInitializedOp"
  input: "conv2d_6/kernel"
}
node {
  name: "VarIsInitializedOp_63"
  op: "VarIsInitializedOp"
  input: "conv2d_11/bias"
}
node {
  name: "VarIsInitializedOp_64"
  op: "VarIsInitializedOp"
  input: "dense_2/kernel"
}
node {
  name: "VarIsInitializedOp_65"
  op: "VarIsInitializedOp"
  input: "dense_3/bias"
}
node {
  name: "VarIsInitializedOp_66"
  op: "VarIsInitializedOp"
  input: "total_1"
}
node {
  name: "VarIsInitializedOp_67"
  op: "VarIsInitializedOp"
  input: "dense_3/kernel"
}
node {
  name: "VarIsInitializedOp_68"
  op: "VarIsInitializedOp"
  input: "count_1"
}
node {
  name: "VarIsInitializedOp_69"
  op: "VarIsInitializedOp"
  input: "conv2d_10/kernel"
}
node {
  name: "VarIsInitializedOp_70"
  op: "VarIsInitializedOp"
  input: "conv2d_8/kernel"
}
node {
  name: "VarIsInitializedOp_71"
  op: "VarIsInitializedOp"
  input: "conv2d_10/bias"
}
node {
  name: "VarIsInitializedOp_72"
  op: "VarIsInitializedOp"
  input: "conv2d_8/bias"
}
node {
  name: "VarIsInitializedOp_73"
  op: "VarIsInitializedOp"
  input: "conv2d_9/kernel"
}
node {
  name: "VarIsInitializedOp_74"
  op: "VarIsInitializedOp"
  input: "conv2d_7/kernel"
}
node {
  name: "VarIsInitializedOp_75"
  op: "VarIsInitializedOp"
  input: "conv2d_9/bias"
}
node {
  name: "VarIsInitializedOp_76"
  op: "VarIsInitializedOp"
  input: "conv2d_7/bias"
}
node {
  name: "VarIsInitializedOp_77"
  op: "VarIsInitializedOp"
  input: "RMSprop_1/dense_3/bias/rms"
}
node {
  name: "init_2"
  op: "NoOp"
  input: "^RMSprop_1/conv2d_10/bias/rms/Assign"
  input: "^RMSprop_1/conv2d_10/kernel/rms/Assign"
  input: "^RMSprop_1/conv2d_11/bias/rms/Assign"
  input: "^RMSprop_1/conv2d_11/kernel/rms/Assign"
  input: "^RMSprop_1/conv2d_6/bias/rms/Assign"
  input: "^RMSprop_1/conv2d_6/kernel/rms/Assign"
  input: "^RMSprop_1/conv2d_7/bias/rms/Assign"
  input: "^RMSprop_1/conv2d_7/kernel/rms/Assign"
  input: "^RMSprop_1/conv2d_8/bias/rms/Assign"
  input: "^RMSprop_1/conv2d_8/kernel/rms/Assign"
  input: "^RMSprop_1/conv2d_9/bias/rms/Assign"
  input: "^RMSprop_1/conv2d_9/kernel/rms/Assign"
  input: "^RMSprop_1/decay/Assign"
  input: "^RMSprop_1/dense_2/bias/rms/Assign"
  input: "^RMSprop_1/dense_2/kernel/rms/Assign"
  input: "^RMSprop_1/dense_3/bias/rms/Assign"
  input: "^RMSprop_1/dense_3/kernel/rms/Assign"
  input: "^RMSprop_1/iter/Assign"
  input: "^RMSprop_1/learning_rate/Assign"
  input: "^RMSprop_1/momentum/Assign"
  input: "^RMSprop_1/rho/Assign"
  input: "^conv2d_10/bias/Assign"
  input: "^conv2d_10/kernel/Assign"
  input: "^conv2d_11/bias/Assign"
  input: "^conv2d_11/kernel/Assign"
  input: "^conv2d_6/bias/Assign"
  input: "^conv2d_6/kernel/Assign"
  input: "^conv2d_7/bias/Assign"
  input: "^conv2d_7/kernel/Assign"
  input: "^conv2d_8/bias/Assign"
  input: "^conv2d_8/kernel/Assign"
  input: "^conv2d_9/bias/Assign"
  input: "^conv2d_9/kernel/Assign"
  input: "^count_1/Assign"
  input: "^dense_2/bias/Assign"
  input: "^dense_2/kernel/Assign"
  input: "^dense_3/bias/Assign"
  input: "^dense_3/kernel/Assign"
  input: "^total_1/Assign"
}
node {
  name: "evaluation_1/group_deps"
  op: "NoOp"
  input: "^loss_1/mul"
}
node {
  name: "conv2d_12_input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 1
        }
        dim {
          size: 120
        }
        dim {
          size: 120
        }
      }
    }
  }
}
node {
  name: "conv2d_12/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_12/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.14213381707668304
      }
    }
  }
}
node {
  name: "conv2d_12/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14213381707668304
      }
    }
  }
}
node {
  name: "conv2d_12/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_12/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_12/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_12/kernel/Initializer/random_uniform/max"
  input: "conv2d_12/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/kernel"
      }
    }
  }
}
node {
  name: "conv2d_12/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_12/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_12/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/kernel"
      }
    }
  }
}
node {
  name: "conv2d_12/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_12/kernel/Initializer/random_uniform/mul"
  input: "conv2d_12/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/kernel"
      }
    }
  }
}
node {
  name: "conv2d_12/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_12/kernel"
    }
  }
}
node {
  name: "conv2d_12/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_12/kernel"
}
node {
  name: "conv2d_12/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_12/kernel"
  input: "conv2d_12/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_12/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_12/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_12/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_12/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_12/bias"
    }
  }
}
node {
  name: "conv2d_12/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_12/bias"
}
node {
  name: "conv2d_12/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_12/bias"
  input: "conv2d_12/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_12/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_12/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_12/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_12/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_12/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_12/Conv2D"
  op: "Conv2D"
  input: "conv2d_12_input"
  input: "conv2d_12/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_12/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_12/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_12/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_12/Conv2D"
  input: "conv2d_12/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "activation_12/activation_12/Identity"
  op: "Identity"
  input: "conv2d_12/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_13/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_13/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10206207633018494
      }
    }
  }
}
node {
  name: "conv2d_13/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10206207633018494
      }
    }
  }
}
node {
  name: "conv2d_13/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_13/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_13/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_13/kernel/Initializer/random_uniform/max"
  input: "conv2d_13/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
}
node {
  name: "conv2d_13/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_13/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_13/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
}
node {
  name: "conv2d_13/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_13/kernel/Initializer/random_uniform/mul"
  input: "conv2d_13/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
}
node {
  name: "conv2d_13/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_13/kernel"
    }
  }
}
node {
  name: "conv2d_13/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_13/kernel"
}
node {
  name: "conv2d_13/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_13/kernel"
  input: "conv2d_13/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_13/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_13/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_13/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_13/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_13/bias"
    }
  }
}
node {
  name: "conv2d_13/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_13/bias"
}
node {
  name: "conv2d_13/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_13/bias"
  input: "conv2d_13/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_13/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_13/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_13/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_13/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_13/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_13/Conv2D"
  op: "Conv2D"
  input: "activation_12/activation_12/Identity"
  input: "conv2d_13/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_13/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_13/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_13/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_13/Conv2D"
  input: "conv2d_13/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "max_pooling2d_4/MaxPool"
  op: "MaxPool"
  input: "conv2d_13/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
}
node {
  name: "dropout_8/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_8/cond/switch_t"
  op: "Identity"
  input: "dropout_8/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_8/cond/switch_f"
  op: "Identity"
  input: "dropout_8/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_8/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_8/cond/dropout/rate"
  op: "Const"
  input: "^dropout_8/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "dropout_8/cond/dropout/Shape"
  op: "Shape"
  input: "dropout_8/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout_8/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "max_pooling2d_4/MaxPool"
  input: "dropout_8/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@max_pooling2d_4/MaxPool"
      }
    }
  }
}
node {
  name: "dropout_8/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^dropout_8/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_8/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^dropout_8/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_8/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout_8/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout_8/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "dropout_8/cond/dropout/random_uniform/max"
  input: "dropout_8/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_8/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "dropout_8/cond/dropout/random_uniform/RandomUniform"
  input: "dropout_8/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_8/cond/dropout/random_uniform"
  op: "Add"
  input: "dropout_8/cond/dropout/random_uniform/mul"
  input: "dropout_8/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_8/cond/dropout/sub/x"
  op: "Const"
  input: "^dropout_8/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_8/cond/dropout/sub"
  op: "Sub"
  input: "dropout_8/cond/dropout/sub/x"
  input: "dropout_8/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_8/cond/dropout/truediv/x"
  op: "Const"
  input: "^dropout_8/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_8/cond/dropout/truediv"
  op: "RealDiv"
  input: "dropout_8/cond/dropout/truediv/x"
  input: "dropout_8/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_8/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "dropout_8/cond/dropout/random_uniform"
  input: "dropout_8/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_8/cond/dropout/mul"
  op: "Mul"
  input: "dropout_8/cond/dropout/Shape/Switch:1"
  input: "dropout_8/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_8/cond/dropout/Cast"
  op: "Cast"
  input: "dropout_8/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "dropout_8/cond/dropout/mul_1"
  op: "Mul"
  input: "dropout_8/cond/dropout/mul"
  input: "dropout_8/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_8/cond/Identity"
  op: "Identity"
  input: "dropout_8/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_8/cond/Identity/Switch"
  op: "Switch"
  input: "max_pooling2d_4/MaxPool"
  input: "dropout_8/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@max_pooling2d_4/MaxPool"
      }
    }
  }
}
node {
  name: "dropout_8/cond/Merge"
  op: "Merge"
  input: "dropout_8/cond/Identity"
  input: "dropout_8/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_14/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_14/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0833333358168602
      }
    }
  }
}
node {
  name: "conv2d_14/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0833333358168602
      }
    }
  }
}
node {
  name: "conv2d_14/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_14/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_14/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_14/kernel/Initializer/random_uniform/max"
  input: "conv2d_14/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
}
node {
  name: "conv2d_14/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_14/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_14/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
}
node {
  name: "conv2d_14/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_14/kernel/Initializer/random_uniform/mul"
  input: "conv2d_14/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
}
node {
  name: "conv2d_14/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_14/kernel"
    }
  }
}
node {
  name: "conv2d_14/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_14/kernel"
}
node {
  name: "conv2d_14/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_14/kernel"
  input: "conv2d_14/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_14/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_14/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_14/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_14/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_14/bias"
    }
  }
}
node {
  name: "conv2d_14/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_14/bias"
}
node {
  name: "conv2d_14/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_14/bias"
  input: "conv2d_14/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_14/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_14/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_14/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_14/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_14/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_14/Conv2D"
  op: "Conv2D"
  input: "dropout_8/cond/Merge"
  input: "conv2d_14/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_14/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_14/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_14/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_14/Conv2D"
  input: "conv2d_14/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "activation_13/activation_13/Identity"
  op: "Identity"
  input: "conv2d_14/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_15/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_15/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07216878235340118
      }
    }
  }
}
node {
  name: "conv2d_15/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07216878235340118
      }
    }
  }
}
node {
  name: "conv2d_15/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_15/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_15/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_15/kernel/Initializer/random_uniform/max"
  input: "conv2d_15/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
}
node {
  name: "conv2d_15/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_15/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_15/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
}
node {
  name: "conv2d_15/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_15/kernel/Initializer/random_uniform/mul"
  input: "conv2d_15/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
}
node {
  name: "conv2d_15/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_15/kernel"
    }
  }
}
node {
  name: "conv2d_15/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_15/kernel"
}
node {
  name: "conv2d_15/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_15/kernel"
  input: "conv2d_15/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_15/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_15/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_15/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_15/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_15/bias"
    }
  }
}
node {
  name: "conv2d_15/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_15/bias"
}
node {
  name: "conv2d_15/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_15/bias"
  input: "conv2d_15/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_15/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_15/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_15/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_15/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_15/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_15/Conv2D"
  op: "Conv2D"
  input: "activation_13/activation_13/Identity"
  input: "conv2d_15/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_15/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_15/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_15/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_15/Conv2D"
  input: "conv2d_15/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "max_pooling2d_5/MaxPool"
  op: "MaxPool"
  input: "conv2d_15/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
}
node {
  name: "dropout_9/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_9/cond/switch_t"
  op: "Identity"
  input: "dropout_9/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_9/cond/switch_f"
  op: "Identity"
  input: "dropout_9/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_9/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_9/cond/dropout/rate"
  op: "Const"
  input: "^dropout_9/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "dropout_9/cond/dropout/Shape"
  op: "Shape"
  input: "dropout_9/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout_9/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "max_pooling2d_5/MaxPool"
  input: "dropout_9/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@max_pooling2d_5/MaxPool"
      }
    }
  }
}
node {
  name: "dropout_9/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^dropout_9/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_9/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^dropout_9/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_9/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout_9/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout_9/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "dropout_9/cond/dropout/random_uniform/max"
  input: "dropout_9/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_9/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "dropout_9/cond/dropout/random_uniform/RandomUniform"
  input: "dropout_9/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_9/cond/dropout/random_uniform"
  op: "Add"
  input: "dropout_9/cond/dropout/random_uniform/mul"
  input: "dropout_9/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_9/cond/dropout/sub/x"
  op: "Const"
  input: "^dropout_9/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_9/cond/dropout/sub"
  op: "Sub"
  input: "dropout_9/cond/dropout/sub/x"
  input: "dropout_9/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_9/cond/dropout/truediv/x"
  op: "Const"
  input: "^dropout_9/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_9/cond/dropout/truediv"
  op: "RealDiv"
  input: "dropout_9/cond/dropout/truediv/x"
  input: "dropout_9/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_9/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "dropout_9/cond/dropout/random_uniform"
  input: "dropout_9/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_9/cond/dropout/mul"
  op: "Mul"
  input: "dropout_9/cond/dropout/Shape/Switch:1"
  input: "dropout_9/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_9/cond/dropout/Cast"
  op: "Cast"
  input: "dropout_9/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "dropout_9/cond/dropout/mul_1"
  op: "Mul"
  input: "dropout_9/cond/dropout/mul"
  input: "dropout_9/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_9/cond/Identity"
  op: "Identity"
  input: "dropout_9/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_9/cond/Identity/Switch"
  op: "Switch"
  input: "max_pooling2d_5/MaxPool"
  input: "dropout_9/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@max_pooling2d_5/MaxPool"
      }
    }
  }
}
node {
  name: "dropout_9/cond/Merge"
  op: "Merge"
  input: "dropout_9/cond/Identity"
  input: "dropout_9/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_16/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_16/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0589255653321743
      }
    }
  }
}
node {
  name: "conv2d_16/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "conv2d_16/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_16/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_16/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_16/kernel/Initializer/random_uniform/max"
  input: "conv2d_16/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
}
node {
  name: "conv2d_16/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_16/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_16/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
}
node {
  name: "conv2d_16/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_16/kernel/Initializer/random_uniform/mul"
  input: "conv2d_16/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
}
node {
  name: "conv2d_16/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_16/kernel"
    }
  }
}
node {
  name: "conv2d_16/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_16/kernel"
}
node {
  name: "conv2d_16/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_16/kernel"
  input: "conv2d_16/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_16/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_16/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_16/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_16/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_16/bias"
    }
  }
}
node {
  name: "conv2d_16/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_16/bias"
}
node {
  name: "conv2d_16/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_16/bias"
  input: "conv2d_16/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_16/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_16/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_16/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_16/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_16/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_16/Conv2D"
  op: "Conv2D"
  input: "dropout_9/cond/Merge"
  input: "conv2d_16/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_16/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_16/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_16/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_16/Conv2D"
  input: "conv2d_16/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "activation_14/activation_14/Identity"
  op: "Identity"
  input: "conv2d_16/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_17/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_17/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05103103816509247
      }
    }
  }
}
node {
  name: "conv2d_17/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05103103816509247
      }
    }
  }
}
node {
  name: "conv2d_17/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_17/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_17/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_17/kernel/Initializer/random_uniform/max"
  input: "conv2d_17/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
}
node {
  name: "conv2d_17/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_17/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_17/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
}
node {
  name: "conv2d_17/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_17/kernel/Initializer/random_uniform/mul"
  input: "conv2d_17/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
}
node {
  name: "conv2d_17/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_17/kernel"
    }
  }
}
node {
  name: "conv2d_17/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_17/kernel"
}
node {
  name: "conv2d_17/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_17/kernel"
  input: "conv2d_17/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_17/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_17/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_17/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_17/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_17/bias"
    }
  }
}
node {
  name: "conv2d_17/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_17/bias"
}
node {
  name: "conv2d_17/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_17/bias"
  input: "conv2d_17/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_17/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_17/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_17/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_17/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_17/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_17/Conv2D"
  op: "Conv2D"
  input: "activation_14/activation_14/Identity"
  input: "conv2d_17/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_17/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_17/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_17/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_17/Conv2D"
  input: "conv2d_17/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "activation_15/activation_15/Identity"
  op: "Identity"
  input: "conv2d_17/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_10/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_10/cond/switch_t"
  op: "Identity"
  input: "dropout_10/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_10/cond/switch_f"
  op: "Identity"
  input: "dropout_10/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_10/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_10/cond/dropout/rate"
  op: "Const"
  input: "^dropout_10/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "dropout_10/cond/dropout/Shape"
  op: "Shape"
  input: "dropout_10/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout_10/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "activation_15/activation_15/Identity"
  input: "dropout_10/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@activation_15/activation_15/Identity"
      }
    }
  }
}
node {
  name: "dropout_10/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^dropout_10/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_10/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^dropout_10/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_10/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout_10/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout_10/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "dropout_10/cond/dropout/random_uniform/max"
  input: "dropout_10/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_10/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "dropout_10/cond/dropout/random_uniform/RandomUniform"
  input: "dropout_10/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_10/cond/dropout/random_uniform"
  op: "Add"
  input: "dropout_10/cond/dropout/random_uniform/mul"
  input: "dropout_10/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_10/cond/dropout/sub/x"
  op: "Const"
  input: "^dropout_10/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_10/cond/dropout/sub"
  op: "Sub"
  input: "dropout_10/cond/dropout/sub/x"
  input: "dropout_10/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_10/cond/dropout/truediv/x"
  op: "Const"
  input: "^dropout_10/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_10/cond/dropout/truediv"
  op: "RealDiv"
  input: "dropout_10/cond/dropout/truediv/x"
  input: "dropout_10/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_10/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "dropout_10/cond/dropout/random_uniform"
  input: "dropout_10/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_10/cond/dropout/mul"
  op: "Mul"
  input: "dropout_10/cond/dropout/Shape/Switch:1"
  input: "dropout_10/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_10/cond/dropout/Cast"
  op: "Cast"
  input: "dropout_10/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "dropout_10/cond/dropout/mul_1"
  op: "Mul"
  input: "dropout_10/cond/dropout/mul"
  input: "dropout_10/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_10/cond/Identity"
  op: "Identity"
  input: "dropout_10/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_10/cond/Identity/Switch"
  op: "Switch"
  input: "activation_15/activation_15/Identity"
  input: "dropout_10/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@activation_15/activation_15/Identity"
      }
    }
  }
}
node {
  name: "dropout_10/cond/Merge"
  op: "Merge"
  input: "dropout_10/cond/Identity"
  input: "dropout_10/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "flatten_2/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "flatten_2/transpose"
  op: "Transpose"
  input: "dropout_10/cond/Merge"
  input: "flatten_2/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "flatten_2/Shape"
  op: "Shape"
  input: "flatten_2/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "flatten_2/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "flatten_2/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "flatten_2/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "flatten_2/strided_slice"
  op: "StridedSlice"
  input: "flatten_2/Shape"
  input: "flatten_2/strided_slice/stack"
  input: "flatten_2/strided_slice/stack_1"
  input: "flatten_2/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "flatten_2/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "flatten_2/Reshape/shape"
  op: "Pack"
  input: "flatten_2/strided_slice"
  input: "flatten_2/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "flatten_2/Reshape"
  op: "Reshape"
  input: "flatten_2/transpose"
  input: "flatten_2/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense_4/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000R\001\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "dense_4/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.00832668598741293
      }
    }
  }
}
node {
  name: "dense_4/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00832668598741293
      }
    }
  }
}
node {
  name: "dense_4/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense_4/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dense_4/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dense_4/kernel/Initializer/random_uniform/max"
  input: "dense_4/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/kernel"
      }
    }
  }
}
node {
  name: "dense_4/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dense_4/kernel/Initializer/random_uniform/RandomUniform"
  input: "dense_4/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/kernel"
      }
    }
  }
}
node {
  name: "dense_4/kernel/Initializer/random_uniform"
  op: "Add"
  input: "dense_4/kernel/Initializer/random_uniform/mul"
  input: "dense_4/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/kernel"
      }
    }
  }
}
node {
  name: "dense_4/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 86528
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_4/kernel"
    }
  }
}
node {
  name: "dense_4/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_4/kernel"
}
node {
  name: "dense_4/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense_4/kernel"
  input: "dense_4/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_4/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_4/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_4/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_4/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_4/bias"
    }
  }
}
node {
  name: "dense_4/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_4/bias"
}
node {
  name: "dense_4/bias/Assign"
  op: "AssignVariableOp"
  input: "dense_4/bias"
  input: "dense_4/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_4/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_4/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_4/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_4/MatMul"
  op: "MatMul"
  input: "flatten_2/Reshape"
  input: "dense_4/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_4/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_4/BiasAdd"
  op: "BiasAdd"
  input: "dense_4/MatMul"
  input: "dense_4/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dropout_11/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_11/cond/switch_t"
  op: "Identity"
  input: "dropout_11/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_11/cond/switch_f"
  op: "Identity"
  input: "dropout_11/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_11/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_11/cond/dropout/rate"
  op: "Const"
  input: "^dropout_11/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "dropout_11/cond/dropout/Shape"
  op: "Shape"
  input: "dropout_11/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout_11/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "dense_4/BiasAdd"
  input: "dropout_11/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/BiasAdd"
      }
    }
  }
}
node {
  name: "dropout_11/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^dropout_11/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_11/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^dropout_11/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_11/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout_11/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout_11/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "dropout_11/cond/dropout/random_uniform/max"
  input: "dropout_11/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_11/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "dropout_11/cond/dropout/random_uniform/RandomUniform"
  input: "dropout_11/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_11/cond/dropout/random_uniform"
  op: "Add"
  input: "dropout_11/cond/dropout/random_uniform/mul"
  input: "dropout_11/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_11/cond/dropout/sub/x"
  op: "Const"
  input: "^dropout_11/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_11/cond/dropout/sub"
  op: "Sub"
  input: "dropout_11/cond/dropout/sub/x"
  input: "dropout_11/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_11/cond/dropout/truediv/x"
  op: "Const"
  input: "^dropout_11/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_11/cond/dropout/truediv"
  op: "RealDiv"
  input: "dropout_11/cond/dropout/truediv/x"
  input: "dropout_11/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_11/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "dropout_11/cond/dropout/random_uniform"
  input: "dropout_11/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_11/cond/dropout/mul"
  op: "Mul"
  input: "dropout_11/cond/dropout/Shape/Switch:1"
  input: "dropout_11/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_11/cond/dropout/Cast"
  op: "Cast"
  input: "dropout_11/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "dropout_11/cond/dropout/mul_1"
  op: "Mul"
  input: "dropout_11/cond/dropout/mul"
  input: "dropout_11/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_11/cond/Identity"
  op: "Identity"
  input: "dropout_11/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_11/cond/Identity/Switch"
  op: "Switch"
  input: "dense_4/BiasAdd"
  input: "dropout_11/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/BiasAdd"
      }
    }
  }
}
node {
  name: "dropout_11/cond/Merge"
  op: "Merge"
  input: "dropout_11/cond/Identity"
  input: "dropout_11/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_16/activation_16/Identity"
  op: "Identity"
  input: "dropout_11/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_5/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\n\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "dense_5/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.7071067690849304
      }
    }
  }
}
node {
  name: "dense_5/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.7071067690849304
      }
    }
  }
}
node {
  name: "dense_5/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense_5/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dense_5/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dense_5/kernel/Initializer/random_uniform/max"
  input: "dense_5/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/kernel"
      }
    }
  }
}
node {
  name: "dense_5/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dense_5/kernel/Initializer/random_uniform/RandomUniform"
  input: "dense_5/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/kernel"
      }
    }
  }
}
node {
  name: "dense_5/kernel/Initializer/random_uniform"
  op: "Add"
  input: "dense_5/kernel/Initializer/random_uniform/mul"
  input: "dense_5/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/kernel"
      }
    }
  }
}
node {
  name: "dense_5/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_5/kernel"
    }
  }
}
node {
  name: "dense_5/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_5/kernel"
}
node {
  name: "dense_5/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense_5/kernel"
  input: "dense_5/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_5/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_5/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_5/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_5/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_5/bias"
    }
  }
}
node {
  name: "dense_5/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_5/bias"
}
node {
  name: "dense_5/bias/Assign"
  op: "AssignVariableOp"
  input: "dense_5/bias"
  input: "dense_5/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_5/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_5/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_5/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_5/MatMul"
  op: "MatMul"
  input: "activation_16/activation_16/Identity"
  input: "dense_5/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_5/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_5/BiasAdd"
  op: "BiasAdd"
  input: "dense_5/MatMul"
  input: "dense_5/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "activation_17/Softmax"
  op: "Softmax"
  input: "dense_5/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_17_target"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "total_2/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "total_2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total_2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "total_2"
    }
  }
}
node {
  name: "total_2/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "total_2"
}
node {
  name: "total_2/Assign"
  op: "AssignVariableOp"
  input: "total_2"
  input: "total_2/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "total_2/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count_2/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "count_2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count_2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "count_2"
    }
  }
}
node {
  name: "count_2/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "count_2"
}
node {
  name: "count_2/Assign"
  op: "AssignVariableOp"
  input: "count_2"
  input: "count_2/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count_2/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "count_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_4/acc/ArgMax/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics_4/acc/ArgMax"
  op: "ArgMax"
  input: "activation_17_target"
  input: "metrics_4/acc/ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics_4/acc/ArgMax_1/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics_4/acc/ArgMax_1"
  op: "ArgMax"
  input: "activation_17/Softmax"
  input: "metrics_4/acc/ArgMax_1/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics_4/acc/Equal"
  op: "Equal"
  input: "metrics_4/acc/ArgMax"
  input: "metrics_4/acc/ArgMax_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics_4/acc/Cast"
  op: "Cast"
  input: "metrics_4/acc/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics_4/acc/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics_4/acc/Sum"
  op: "Sum"
  input: "metrics_4/acc/Cast"
  input: "metrics_4/acc/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics_4/acc/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "total_2"
  input: "metrics_4/acc/Sum"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_4/acc/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total_2"
  input: "^metrics_4/acc/AssignAddVariableOp"
  input: "^metrics_4/acc/Sum"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_4/acc/Size"
  op: "Size"
  input: "metrics_4/acc/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "metrics_4/acc/Cast_1"
  op: "Cast"
  input: "metrics_4/acc/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics_4/acc/AssignAddVariableOp_1"
  op: "AssignAddVariableOp"
  input: "count_2"
  input: "metrics_4/acc/Cast_1"
  input: "^metrics_4/acc/AssignAddVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_4/acc/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "count_2"
  input: "^metrics_4/acc/AssignAddVariableOp"
  input: "^metrics_4/acc/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_4/acc/div_no_nan/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total_2"
  input: "^metrics_4/acc/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_4/acc/div_no_nan/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "count_2"
  input: "^metrics_4/acc/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_4/acc/div_no_nan"
  op: "DivNoNan"
  input: "metrics_4/acc/div_no_nan/ReadVariableOp"
  input: "metrics_4/acc/div_no_nan/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics_4/acc/Identity"
  op: "Identity"
  input: "metrics_4/acc/div_no_nan"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_2/activation_17_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Shape"
  op: "Shape"
  input: "dense_5/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Shape_1"
  op: "Shape"
  input: "dense_5/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Sub"
  op: "Sub"
  input: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Rank_1"
  input: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Slice/begin"
  op: "Pack"
  input: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Slice"
  op: "Slice"
  input: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Shape_1"
  input: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Slice/begin"
  input: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/concat/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/concat"
  op: "ConcatV2"
  input: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/concat/values_0"
  input: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Slice"
  input: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Reshape"
  op: "Reshape"
  input: "dense_5/BiasAdd"
  input: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Rank_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Shape_2"
  op: "Shape"
  input: "activation_17_target"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Sub_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Sub_1"
  op: "Sub"
  input: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Rank_2"
  input: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Slice_1/begin"
  op: "Pack"
  input: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Sub_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Slice_1"
  op: "Slice"
  input: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Shape_2"
  input: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Slice_1/begin"
  input: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/concat_1/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/concat_1"
  op: "ConcatV2"
  input: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/concat_1/values_0"
  input: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Slice_1"
  input: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Reshape_1"
  op: "Reshape"
  input: "activation_17_target"
  input: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits"
  op: "SoftmaxCrossEntropyWithLogits"
  input: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Reshape"
  input: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Sub_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Sub_2"
  op: "Sub"
  input: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Rank"
  input: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Slice_2/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Slice_2/size"
  op: "Pack"
  input: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Sub_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Slice_2"
  op: "Slice"
  input: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Shape"
  input: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Slice_2/begin"
  input: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Reshape_2"
  op: "Reshape"
  input: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits"
  input: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss_2/activation_17_loss/weighted_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss_2/activation_17_loss/weighted_loss/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "loss_2/activation_17_loss/weighted_loss/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss_2/activation_17_loss/weighted_loss/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss_2/activation_17_loss/weighted_loss/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss_2/activation_17_loss/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "loss_2/activation_17_loss/weighted_loss/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Reshape_2"
  input: "^loss_2/activation_17_loss/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss_2/activation_17_loss/weighted_loss/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^loss_2/activation_17_loss/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss_2/activation_17_loss/weighted_loss/broadcast_weights/ones_like"
  op: "Fill"
  input: "loss_2/activation_17_loss/weighted_loss/broadcast_weights/ones_like/Shape"
  input: "loss_2/activation_17_loss/weighted_loss/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss_2/activation_17_loss/weighted_loss/broadcast_weights"
  op: "Mul"
  input: "loss_2/activation_17_loss/weighted_loss/Const"
  input: "loss_2/activation_17_loss/weighted_loss/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_2/activation_17_loss/weighted_loss/Mul"
  op: "Mul"
  input: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Reshape_2"
  input: "loss_2/activation_17_loss/weighted_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_2/activation_17_loss/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss_2/activation_17_loss/Sum"
  op: "Sum"
  input: "loss_2/activation_17_loss/weighted_loss/Mul"
  input: "loss_2/activation_17_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss_2/activation_17_loss/num_elements"
  op: "Size"
  input: "loss_2/activation_17_loss/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss_2/activation_17_loss/num_elements/Cast"
  op: "Cast"
  input: "loss_2/activation_17_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "loss_2/activation_17_loss/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "loss_2/activation_17_loss/Sum_1"
  op: "Sum"
  input: "loss_2/activation_17_loss/Sum"
  input: "loss_2/activation_17_loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss_2/activation_17_loss/value"
  op: "DivNoNan"
  input: "loss_2/activation_17_loss/Sum_1"
  input: "loss_2/activation_17_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss_2/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss_2/mul"
  op: "Mul"
  input: "loss_2/mul/x"
  input: "loss_2/activation_17_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RMSprop_2/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop_2/gradients/Fill"
  op: "Fill"
  input: "RMSprop_2/gradients/Shape"
  input: "RMSprop_2/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/loss_2/mul_grad/Mul"
  op: "Mul"
  input: "RMSprop_2/gradients/Fill"
  input: "loss_2/activation_17_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/loss_2/mul_grad/Mul_1"
  op: "Mul"
  input: "RMSprop_2/gradients/Fill"
  input: "loss_2/mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/loss_2/activation_17_loss/value_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RMSprop_2/gradients/loss_2/activation_17_loss/value_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RMSprop_2/gradients/loss_2/activation_17_loss/value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/value_grad/Shape"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/loss_2/activation_17_loss/value_grad/div_no_nan"
  op: "DivNoNan"
  input: "RMSprop_2/gradients/loss_2/mul_grad/Mul_1"
  input: "loss_2/activation_17_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/loss_2/activation_17_loss/value_grad/Sum"
  op: "Sum"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/value_grad/div_no_nan"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop_2/gradients/loss_2/activation_17_loss/value_grad/Reshape"
  op: "Reshape"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/value_grad/Sum"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/loss_2/activation_17_loss/value_grad/Neg"
  op: "Neg"
  input: "loss_2/activation_17_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/loss_2/activation_17_loss/value_grad/div_no_nan_1"
  op: "DivNoNan"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/value_grad/Neg"
  input: "loss_2/activation_17_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/loss_2/activation_17_loss/value_grad/div_no_nan_2"
  op: "DivNoNan"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/value_grad/div_no_nan_1"
  input: "loss_2/activation_17_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/loss_2/activation_17_loss/value_grad/mul"
  op: "Mul"
  input: "RMSprop_2/gradients/loss_2/mul_grad/Mul_1"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/value_grad/div_no_nan_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/loss_2/activation_17_loss/value_grad/Sum_1"
  op: "Sum"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/value_grad/mul"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop_2/gradients/loss_2/activation_17_loss/value_grad/Reshape_1"
  op: "Reshape"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/value_grad/Sum_1"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/loss_2/activation_17_loss/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RMSprop_2/gradients/loss_2/activation_17_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/value_grad/Reshape"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/Sum_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/loss_2/activation_17_loss/Sum_1_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RMSprop_2/gradients/loss_2/activation_17_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/Sum_1_grad/Reshape"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/Sum_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/loss_2/activation_17_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "RMSprop_2/gradients/loss_2/activation_17_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/Sum_1_grad/Tile"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/loss_2/activation_17_loss/Sum_grad/Shape"
  op: "Shape"
  input: "loss_2/activation_17_loss/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/loss_2/activation_17_loss/Sum_grad/Tile"
  op: "Tile"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/Sum_grad/Reshape"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/loss_2/activation_17_loss/weighted_loss/Mul_grad/Shape"
  op: "Shape"
  input: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/loss_2/activation_17_loss/weighted_loss/Mul_grad/Shape_1"
  op: "Shape"
  input: "loss_2/activation_17_loss/weighted_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/loss_2/activation_17_loss/weighted_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/weighted_loss/Mul_grad/Shape"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/weighted_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/loss_2/activation_17_loss/weighted_loss/Mul_grad/Mul"
  op: "Mul"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/Sum_grad/Tile"
  input: "loss_2/activation_17_loss/weighted_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/loss_2/activation_17_loss/weighted_loss/Mul_grad/Sum"
  op: "Sum"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/weighted_loss/Mul_grad/Mul"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/weighted_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop_2/gradients/loss_2/activation_17_loss/weighted_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/weighted_loss/Mul_grad/Sum"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/weighted_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/loss_2/activation_17_loss/weighted_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Reshape_2"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/loss_2/activation_17_loss/weighted_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/weighted_loss/Mul_grad/Mul_1"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/weighted_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop_2/gradients/loss_2/activation_17_loss/weighted_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/weighted_loss/Mul_grad/Sum_1"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/weighted_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Reshape_2_grad/Shape"
  op: "Shape"
  input: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/weighted_loss/Mul_grad/Reshape"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/zeros_like"
  op: "ZerosLike"
  input: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/loss_2/activation_17_loss/softmax_cross_entropy_with_logits_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RMSprop_2/gradients/loss_2/activation_17_loss/softmax_cross_entropy_with_logits_grad/ExpandDims"
  op: "ExpandDims"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Reshape_2_grad/Reshape"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/softmax_cross_entropy_with_logits_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/loss_2/activation_17_loss/softmax_cross_entropy_with_logits_grad/mul"
  op: "Mul"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/softmax_cross_entropy_with_logits_grad/ExpandDims"
  input: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/loss_2/activation_17_loss/softmax_cross_entropy_with_logits_grad/LogSoftmax"
  op: "LogSoftmax"
  input: "loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/loss_2/activation_17_loss/softmax_cross_entropy_with_logits_grad/Neg"
  op: "Neg"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/softmax_cross_entropy_with_logits_grad/LogSoftmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/loss_2/activation_17_loss/softmax_cross_entropy_with_logits_grad/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "RMSprop_2/gradients/loss_2/activation_17_loss/softmax_cross_entropy_with_logits_grad/ExpandDims_1"
  op: "ExpandDims"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Reshape_2_grad/Reshape"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/softmax_cross_entropy_with_logits_grad/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/loss_2/activation_17_loss/softmax_cross_entropy_with_logits_grad/mul_1"
  op: "Mul"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/softmax_cross_entropy_with_logits_grad/ExpandDims_1"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/softmax_cross_entropy_with_logits_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Reshape_grad/Shape"
  op: "Shape"
  input: "dense_5/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Reshape_grad/Reshape"
  op: "Reshape"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/softmax_cross_entropy_with_logits_grad/mul"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/dense_5/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "RMSprop_2/gradients/dense_5/MatMul_grad/MatMul"
  op: "MatMul"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Reshape_grad/Reshape"
  input: "dense_5/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "RMSprop_2/gradients/dense_5/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "activation_16/activation_16/Identity"
  input: "RMSprop_2/gradients/loss_2/activation_17_loss/softmax_cross_entropy_with_logits/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_11/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "RMSprop_2/gradients/dense_5/MatMul_grad/MatMul"
  input: "dropout_11/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_2/gradients/dense_5/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_11/cond/dropout/mul_1_grad/Shape"
  op: "Shape"
  input: "dropout_11/cond/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_11/cond/dropout/mul_1_grad/Shape_1"
  op: "Shape"
  input: "dropout_11/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_11/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "RMSprop_2/gradients/dropout_11/cond/dropout/mul_1_grad/Shape"
  input: "RMSprop_2/gradients/dropout_11/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_11/cond/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "RMSprop_2/gradients/dropout_11/cond/Merge_grad/cond_grad:1"
  input: "dropout_11/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_11/cond/dropout/mul_1_grad/Sum"
  op: "Sum"
  input: "RMSprop_2/gradients/dropout_11/cond/dropout/mul_1_grad/Mul"
  input: "RMSprop_2/gradients/dropout_11/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_11/cond/dropout/mul_1_grad/Reshape"
  op: "Reshape"
  input: "RMSprop_2/gradients/dropout_11/cond/dropout/mul_1_grad/Sum"
  input: "RMSprop_2/gradients/dropout_11/cond/dropout/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_11/cond/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "dropout_11/cond/dropout/mul"
  input: "RMSprop_2/gradients/dropout_11/cond/Merge_grad/cond_grad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_11/cond/dropout/mul_1_grad/Sum_1"
  op: "Sum"
  input: "RMSprop_2/gradients/dropout_11/cond/dropout/mul_1_grad/Mul_1"
  input: "RMSprop_2/gradients/dropout_11/cond/dropout/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_11/cond/dropout/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "RMSprop_2/gradients/dropout_11/cond/dropout/mul_1_grad/Sum_1"
  input: "RMSprop_2/gradients/dropout_11/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/Switch"
  op: "Switch"
  input: "dense_4/BiasAdd"
  input: "dropout_11/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/Identity"
  op: "Identity"
  input: "RMSprop_2/gradients/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/Shape_1"
  op: "Shape"
  input: "RMSprop_2/gradients/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/zeros/Const"
  op: "Const"
  input: "^RMSprop_2/gradients/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_2/gradients/zeros"
  op: "Fill"
  input: "RMSprop_2/gradients/Shape_1"
  input: "RMSprop_2/gradients/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_11/cond/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "RMSprop_2/gradients/dropout_11/cond/Merge_grad/cond_grad"
  input: "RMSprop_2/gradients/zeros"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_11/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "dropout_11/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_11/cond/dropout/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_11/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "RMSprop_2/gradients/dropout_11/cond/dropout/mul_grad/Shape"
  input: "RMSprop_2/gradients/dropout_11/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_11/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "RMSprop_2/gradients/dropout_11/cond/dropout/mul_1_grad/Reshape"
  input: "dropout_11/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_11/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "RMSprop_2/gradients/dropout_11/cond/dropout/mul_grad/Mul"
  input: "RMSprop_2/gradients/dropout_11/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_11/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "RMSprop_2/gradients/dropout_11/cond/dropout/mul_grad/Sum"
  input: "RMSprop_2/gradients/dropout_11/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_11/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "dropout_11/cond/dropout/Shape/Switch:1"
  input: "RMSprop_2/gradients/dropout_11/cond/dropout/mul_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_11/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "RMSprop_2/gradients/dropout_11/cond/dropout/mul_grad/Mul_1"
  input: "RMSprop_2/gradients/dropout_11/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_11/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "RMSprop_2/gradients/dropout_11/cond/dropout/mul_grad/Sum_1"
  input: "RMSprop_2/gradients/dropout_11/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/Switch_1"
  op: "Switch"
  input: "dense_4/BiasAdd"
  input: "dropout_11/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/Identity_1"
  op: "Identity"
  input: "RMSprop_2/gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/Shape_2"
  op: "Shape"
  input: "RMSprop_2/gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/zeros_1/Const"
  op: "Const"
  input: "^RMSprop_2/gradients/Identity_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_2/gradients/zeros_1"
  op: "Fill"
  input: "RMSprop_2/gradients/Shape_2"
  input: "RMSprop_2/gradients/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_11/cond/dropout/Shape/Switch_grad/cond_grad"
  op: "Merge"
  input: "RMSprop_2/gradients/zeros_1"
  input: "RMSprop_2/gradients/dropout_11/cond/dropout/mul_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/AddN"
  op: "AddN"
  input: "RMSprop_2/gradients/dropout_11/cond/Identity/Switch_grad/cond_grad"
  input: "RMSprop_2/gradients/dropout_11/cond/dropout/Shape/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_2/gradients/dropout_11/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "RMSprop_2/gradients/dense_4/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "RMSprop_2/gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "RMSprop_2/gradients/dense_4/MatMul_grad/MatMul"
  op: "MatMul"
  input: "RMSprop_2/gradients/AddN"
  input: "dense_4/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "RMSprop_2/gradients/dense_4/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "flatten_2/Reshape"
  input: "RMSprop_2/gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop_2/gradients/flatten_2/Reshape_grad/Shape"
  op: "Shape"
  input: "flatten_2/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/flatten_2/Reshape_grad/Reshape"
  op: "Reshape"
  input: "RMSprop_2/gradients/dense_4/MatMul_grad/MatMul"
  input: "RMSprop_2/gradients/flatten_2/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/flatten_2/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "flatten_2/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/flatten_2/transpose_grad/transpose"
  op: "Transpose"
  input: "RMSprop_2/gradients/flatten_2/Reshape_grad/Reshape"
  input: "RMSprop_2/gradients/flatten_2/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_10/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "RMSprop_2/gradients/flatten_2/transpose_grad/transpose"
  input: "dropout_10/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_2/gradients/flatten_2/transpose_grad/transpose"
      }
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_10/cond/dropout/mul_1_grad/Shape"
  op: "Shape"
  input: "dropout_10/cond/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_10/cond/dropout/mul_1_grad/Shape_1"
  op: "Shape"
  input: "dropout_10/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_10/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "RMSprop_2/gradients/dropout_10/cond/dropout/mul_1_grad/Shape"
  input: "RMSprop_2/gradients/dropout_10/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_10/cond/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "RMSprop_2/gradients/dropout_10/cond/Merge_grad/cond_grad:1"
  input: "dropout_10/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_10/cond/dropout/mul_1_grad/Sum"
  op: "Sum"
  input: "RMSprop_2/gradients/dropout_10/cond/dropout/mul_1_grad/Mul"
  input: "RMSprop_2/gradients/dropout_10/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_10/cond/dropout/mul_1_grad/Reshape"
  op: "Reshape"
  input: "RMSprop_2/gradients/dropout_10/cond/dropout/mul_1_grad/Sum"
  input: "RMSprop_2/gradients/dropout_10/cond/dropout/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_10/cond/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "dropout_10/cond/dropout/mul"
  input: "RMSprop_2/gradients/dropout_10/cond/Merge_grad/cond_grad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_10/cond/dropout/mul_1_grad/Sum_1"
  op: "Sum"
  input: "RMSprop_2/gradients/dropout_10/cond/dropout/mul_1_grad/Mul_1"
  input: "RMSprop_2/gradients/dropout_10/cond/dropout/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_10/cond/dropout/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "RMSprop_2/gradients/dropout_10/cond/dropout/mul_1_grad/Sum_1"
  input: "RMSprop_2/gradients/dropout_10/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/Switch_2"
  op: "Switch"
  input: "activation_15/activation_15/Identity"
  input: "dropout_10/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/Identity_2"
  op: "Identity"
  input: "RMSprop_2/gradients/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/Shape_3"
  op: "Shape"
  input: "RMSprop_2/gradients/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/zeros_2/Const"
  op: "Const"
  input: "^RMSprop_2/gradients/Identity_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_2/gradients/zeros_2"
  op: "Fill"
  input: "RMSprop_2/gradients/Shape_3"
  input: "RMSprop_2/gradients/zeros_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_10/cond/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "RMSprop_2/gradients/dropout_10/cond/Merge_grad/cond_grad"
  input: "RMSprop_2/gradients/zeros_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_10/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "dropout_10/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_10/cond/dropout/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_10/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "RMSprop_2/gradients/dropout_10/cond/dropout/mul_grad/Shape"
  input: "RMSprop_2/gradients/dropout_10/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_10/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "RMSprop_2/gradients/dropout_10/cond/dropout/mul_1_grad/Reshape"
  input: "dropout_10/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_10/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "RMSprop_2/gradients/dropout_10/cond/dropout/mul_grad/Mul"
  input: "RMSprop_2/gradients/dropout_10/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_10/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "RMSprop_2/gradients/dropout_10/cond/dropout/mul_grad/Sum"
  input: "RMSprop_2/gradients/dropout_10/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_10/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "dropout_10/cond/dropout/Shape/Switch:1"
  input: "RMSprop_2/gradients/dropout_10/cond/dropout/mul_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_10/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "RMSprop_2/gradients/dropout_10/cond/dropout/mul_grad/Mul_1"
  input: "RMSprop_2/gradients/dropout_10/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_10/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "RMSprop_2/gradients/dropout_10/cond/dropout/mul_grad/Sum_1"
  input: "RMSprop_2/gradients/dropout_10/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/Switch_3"
  op: "Switch"
  input: "activation_15/activation_15/Identity"
  input: "dropout_10/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/Identity_3"
  op: "Identity"
  input: "RMSprop_2/gradients/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/Shape_4"
  op: "Shape"
  input: "RMSprop_2/gradients/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/zeros_3/Const"
  op: "Const"
  input: "^RMSprop_2/gradients/Identity_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_2/gradients/zeros_3"
  op: "Fill"
  input: "RMSprop_2/gradients/Shape_4"
  input: "RMSprop_2/gradients/zeros_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_10/cond/dropout/Shape/Switch_grad/cond_grad"
  op: "Merge"
  input: "RMSprop_2/gradients/zeros_3"
  input: "RMSprop_2/gradients/dropout_10/cond/dropout/mul_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/AddN_1"
  op: "AddN"
  input: "RMSprop_2/gradients/dropout_10/cond/Identity/Switch_grad/cond_grad"
  input: "RMSprop_2/gradients/dropout_10/cond/dropout/Shape/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_2/gradients/dropout_10/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "RMSprop_2/gradients/conv2d_17/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "RMSprop_2/gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "RMSprop_2/gradients/conv2d_17/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "activation_14/activation_14/Identity"
  input: "conv2d_17/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/conv2d_17/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "RMSprop_2/gradients/conv2d_17/Conv2D_grad/ShapeN"
  input: "conv2d_17/Conv2D/ReadVariableOp"
  input: "RMSprop_2/gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "RMSprop_2/gradients/conv2d_17/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "activation_14/activation_14/Identity"
  input: "RMSprop_2/gradients/conv2d_17/Conv2D_grad/ShapeN:1"
  input: "RMSprop_2/gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "RMSprop_2/gradients/conv2d_16/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "RMSprop_2/gradients/conv2d_17/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "RMSprop_2/gradients/conv2d_16/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "dropout_9/cond/Merge"
  input: "conv2d_16/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/conv2d_16/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "RMSprop_2/gradients/conv2d_16/Conv2D_grad/ShapeN"
  input: "conv2d_16/Conv2D/ReadVariableOp"
  input: "RMSprop_2/gradients/conv2d_17/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "RMSprop_2/gradients/conv2d_16/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "dropout_9/cond/Merge"
  input: "RMSprop_2/gradients/conv2d_16/Conv2D_grad/ShapeN:1"
  input: "RMSprop_2/gradients/conv2d_17/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_9/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "RMSprop_2/gradients/conv2d_16/Conv2D_grad/Conv2DBackpropInput"
  input: "dropout_9/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_2/gradients/conv2d_16/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_9/cond/dropout/mul_1_grad/Shape"
  op: "Shape"
  input: "dropout_9/cond/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_9/cond/dropout/mul_1_grad/Shape_1"
  op: "Shape"
  input: "dropout_9/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_9/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "RMSprop_2/gradients/dropout_9/cond/dropout/mul_1_grad/Shape"
  input: "RMSprop_2/gradients/dropout_9/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_9/cond/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "RMSprop_2/gradients/dropout_9/cond/Merge_grad/cond_grad:1"
  input: "dropout_9/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_9/cond/dropout/mul_1_grad/Sum"
  op: "Sum"
  input: "RMSprop_2/gradients/dropout_9/cond/dropout/mul_1_grad/Mul"
  input: "RMSprop_2/gradients/dropout_9/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_9/cond/dropout/mul_1_grad/Reshape"
  op: "Reshape"
  input: "RMSprop_2/gradients/dropout_9/cond/dropout/mul_1_grad/Sum"
  input: "RMSprop_2/gradients/dropout_9/cond/dropout/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_9/cond/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "dropout_9/cond/dropout/mul"
  input: "RMSprop_2/gradients/dropout_9/cond/Merge_grad/cond_grad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_9/cond/dropout/mul_1_grad/Sum_1"
  op: "Sum"
  input: "RMSprop_2/gradients/dropout_9/cond/dropout/mul_1_grad/Mul_1"
  input: "RMSprop_2/gradients/dropout_9/cond/dropout/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_9/cond/dropout/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "RMSprop_2/gradients/dropout_9/cond/dropout/mul_1_grad/Sum_1"
  input: "RMSprop_2/gradients/dropout_9/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/Switch_4"
  op: "Switch"
  input: "max_pooling2d_5/MaxPool"
  input: "dropout_9/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/Identity_4"
  op: "Identity"
  input: "RMSprop_2/gradients/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/Shape_5"
  op: "Shape"
  input: "RMSprop_2/gradients/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/zeros_4/Const"
  op: "Const"
  input: "^RMSprop_2/gradients/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_2/gradients/zeros_4"
  op: "Fill"
  input: "RMSprop_2/gradients/Shape_5"
  input: "RMSprop_2/gradients/zeros_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_9/cond/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "RMSprop_2/gradients/dropout_9/cond/Merge_grad/cond_grad"
  input: "RMSprop_2/gradients/zeros_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_9/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "dropout_9/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_9/cond/dropout/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_9/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "RMSprop_2/gradients/dropout_9/cond/dropout/mul_grad/Shape"
  input: "RMSprop_2/gradients/dropout_9/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_9/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "RMSprop_2/gradients/dropout_9/cond/dropout/mul_1_grad/Reshape"
  input: "dropout_9/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_9/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "RMSprop_2/gradients/dropout_9/cond/dropout/mul_grad/Mul"
  input: "RMSprop_2/gradients/dropout_9/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_9/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "RMSprop_2/gradients/dropout_9/cond/dropout/mul_grad/Sum"
  input: "RMSprop_2/gradients/dropout_9/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_9/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "dropout_9/cond/dropout/Shape/Switch:1"
  input: "RMSprop_2/gradients/dropout_9/cond/dropout/mul_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_9/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "RMSprop_2/gradients/dropout_9/cond/dropout/mul_grad/Mul_1"
  input: "RMSprop_2/gradients/dropout_9/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_9/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "RMSprop_2/gradients/dropout_9/cond/dropout/mul_grad/Sum_1"
  input: "RMSprop_2/gradients/dropout_9/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/Switch_5"
  op: "Switch"
  input: "max_pooling2d_5/MaxPool"
  input: "dropout_9/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/Identity_5"
  op: "Identity"
  input: "RMSprop_2/gradients/Switch_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/Shape_6"
  op: "Shape"
  input: "RMSprop_2/gradients/Switch_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/zeros_5/Const"
  op: "Const"
  input: "^RMSprop_2/gradients/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_2/gradients/zeros_5"
  op: "Fill"
  input: "RMSprop_2/gradients/Shape_6"
  input: "RMSprop_2/gradients/zeros_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_9/cond/dropout/Shape/Switch_grad/cond_grad"
  op: "Merge"
  input: "RMSprop_2/gradients/zeros_5"
  input: "RMSprop_2/gradients/dropout_9/cond/dropout/mul_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/AddN_2"
  op: "AddN"
  input: "RMSprop_2/gradients/dropout_9/cond/Identity/Switch_grad/cond_grad"
  input: "RMSprop_2/gradients/dropout_9/cond/dropout/Shape/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_2/gradients/dropout_9/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "RMSprop_2/gradients/max_pooling2d_5/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "conv2d_15/BiasAdd"
  input: "max_pooling2d_5/MaxPool"
  input: "RMSprop_2/gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
}
node {
  name: "RMSprop_2/gradients/conv2d_15/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "RMSprop_2/gradients/max_pooling2d_5/MaxPool_grad/MaxPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "RMSprop_2/gradients/conv2d_15/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "activation_13/activation_13/Identity"
  input: "conv2d_15/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/conv2d_15/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "RMSprop_2/gradients/conv2d_15/Conv2D_grad/ShapeN"
  input: "conv2d_15/Conv2D/ReadVariableOp"
  input: "RMSprop_2/gradients/max_pooling2d_5/MaxPool_grad/MaxPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "RMSprop_2/gradients/conv2d_15/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "activation_13/activation_13/Identity"
  input: "RMSprop_2/gradients/conv2d_15/Conv2D_grad/ShapeN:1"
  input: "RMSprop_2/gradients/max_pooling2d_5/MaxPool_grad/MaxPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "RMSprop_2/gradients/conv2d_14/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "RMSprop_2/gradients/conv2d_15/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "RMSprop_2/gradients/conv2d_14/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "dropout_8/cond/Merge"
  input: "conv2d_14/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/conv2d_14/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "RMSprop_2/gradients/conv2d_14/Conv2D_grad/ShapeN"
  input: "conv2d_14/Conv2D/ReadVariableOp"
  input: "RMSprop_2/gradients/conv2d_15/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "RMSprop_2/gradients/conv2d_14/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "dropout_8/cond/Merge"
  input: "RMSprop_2/gradients/conv2d_14/Conv2D_grad/ShapeN:1"
  input: "RMSprop_2/gradients/conv2d_15/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_8/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "RMSprop_2/gradients/conv2d_14/Conv2D_grad/Conv2DBackpropInput"
  input: "dropout_8/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_2/gradients/conv2d_14/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_8/cond/dropout/mul_1_grad/Shape"
  op: "Shape"
  input: "dropout_8/cond/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_8/cond/dropout/mul_1_grad/Shape_1"
  op: "Shape"
  input: "dropout_8/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_8/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "RMSprop_2/gradients/dropout_8/cond/dropout/mul_1_grad/Shape"
  input: "RMSprop_2/gradients/dropout_8/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_8/cond/dropout/mul_1_grad/Mul"
  op: "Mul"
  input: "RMSprop_2/gradients/dropout_8/cond/Merge_grad/cond_grad:1"
  input: "dropout_8/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_8/cond/dropout/mul_1_grad/Sum"
  op: "Sum"
  input: "RMSprop_2/gradients/dropout_8/cond/dropout/mul_1_grad/Mul"
  input: "RMSprop_2/gradients/dropout_8/cond/dropout/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_8/cond/dropout/mul_1_grad/Reshape"
  op: "Reshape"
  input: "RMSprop_2/gradients/dropout_8/cond/dropout/mul_1_grad/Sum"
  input: "RMSprop_2/gradients/dropout_8/cond/dropout/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_8/cond/dropout/mul_1_grad/Mul_1"
  op: "Mul"
  input: "dropout_8/cond/dropout/mul"
  input: "RMSprop_2/gradients/dropout_8/cond/Merge_grad/cond_grad:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_8/cond/dropout/mul_1_grad/Sum_1"
  op: "Sum"
  input: "RMSprop_2/gradients/dropout_8/cond/dropout/mul_1_grad/Mul_1"
  input: "RMSprop_2/gradients/dropout_8/cond/dropout/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_8/cond/dropout/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "RMSprop_2/gradients/dropout_8/cond/dropout/mul_1_grad/Sum_1"
  input: "RMSprop_2/gradients/dropout_8/cond/dropout/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/Switch_6"
  op: "Switch"
  input: "max_pooling2d_4/MaxPool"
  input: "dropout_8/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/Identity_6"
  op: "Identity"
  input: "RMSprop_2/gradients/Switch_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/Shape_7"
  op: "Shape"
  input: "RMSprop_2/gradients/Switch_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/zeros_6/Const"
  op: "Const"
  input: "^RMSprop_2/gradients/Identity_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_2/gradients/zeros_6"
  op: "Fill"
  input: "RMSprop_2/gradients/Shape_7"
  input: "RMSprop_2/gradients/zeros_6/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_8/cond/Identity/Switch_grad/cond_grad"
  op: "Merge"
  input: "RMSprop_2/gradients/dropout_8/cond/Merge_grad/cond_grad"
  input: "RMSprop_2/gradients/zeros_6"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_8/cond/dropout/mul_grad/Shape"
  op: "Shape"
  input: "dropout_8/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_8/cond/dropout/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_8/cond/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "RMSprop_2/gradients/dropout_8/cond/dropout/mul_grad/Shape"
  input: "RMSprop_2/gradients/dropout_8/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_8/cond/dropout/mul_grad/Mul"
  op: "Mul"
  input: "RMSprop_2/gradients/dropout_8/cond/dropout/mul_1_grad/Reshape"
  input: "dropout_8/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_8/cond/dropout/mul_grad/Sum"
  op: "Sum"
  input: "RMSprop_2/gradients/dropout_8/cond/dropout/mul_grad/Mul"
  input: "RMSprop_2/gradients/dropout_8/cond/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_8/cond/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "RMSprop_2/gradients/dropout_8/cond/dropout/mul_grad/Sum"
  input: "RMSprop_2/gradients/dropout_8/cond/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_8/cond/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "dropout_8/cond/dropout/Shape/Switch:1"
  input: "RMSprop_2/gradients/dropout_8/cond/dropout/mul_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_8/cond/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "RMSprop_2/gradients/dropout_8/cond/dropout/mul_grad/Mul_1"
  input: "RMSprop_2/gradients/dropout_8/cond/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_8/cond/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "RMSprop_2/gradients/dropout_8/cond/dropout/mul_grad/Sum_1"
  input: "RMSprop_2/gradients/dropout_8/cond/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/Switch_7"
  op: "Switch"
  input: "max_pooling2d_4/MaxPool"
  input: "dropout_8/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/Identity_7"
  op: "Identity"
  input: "RMSprop_2/gradients/Switch_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/Shape_8"
  op: "Shape"
  input: "RMSprop_2/gradients/Switch_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/zeros_7/Const"
  op: "Const"
  input: "^RMSprop_2/gradients/Identity_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_2/gradients/zeros_7"
  op: "Fill"
  input: "RMSprop_2/gradients/Shape_8"
  input: "RMSprop_2/gradients/zeros_7/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/dropout_8/cond/dropout/Shape/Switch_grad/cond_grad"
  op: "Merge"
  input: "RMSprop_2/gradients/zeros_7"
  input: "RMSprop_2/gradients/dropout_8/cond/dropout/mul_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/gradients/AddN_3"
  op: "AddN"
  input: "RMSprop_2/gradients/dropout_8/cond/Identity/Switch_grad/cond_grad"
  input: "RMSprop_2/gradients/dropout_8/cond/dropout/Shape/Switch_grad/cond_grad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_2/gradients/dropout_8/cond/Identity/Switch_grad/cond_grad"
      }
    }
  }
}
node {
  name: "RMSprop_2/gradients/max_pooling2d_4/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "conv2d_13/BiasAdd"
  input: "max_pooling2d_4/MaxPool"
  input: "RMSprop_2/gradients/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
}
node {
  name: "RMSprop_2/gradients/conv2d_13/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "RMSprop_2/gradients/max_pooling2d_4/MaxPool_grad/MaxPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "RMSprop_2/gradients/conv2d_13/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "activation_12/activation_12/Identity"
  input: "conv2d_13/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/conv2d_13/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "RMSprop_2/gradients/conv2d_13/Conv2D_grad/ShapeN"
  input: "conv2d_13/Conv2D/ReadVariableOp"
  input: "RMSprop_2/gradients/max_pooling2d_4/MaxPool_grad/MaxPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "RMSprop_2/gradients/conv2d_13/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "activation_12/activation_12/Identity"
  input: "RMSprop_2/gradients/conv2d_13/Conv2D_grad/ShapeN:1"
  input: "RMSprop_2/gradients/max_pooling2d_4/MaxPool_grad/MaxPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "RMSprop_2/gradients/conv2d_12/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "RMSprop_2/gradients/conv2d_13/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "RMSprop_2/gradients/conv2d_12/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "conv2d_12_input"
  input: "conv2d_12/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/gradients/conv2d_12/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "RMSprop_2/gradients/conv2d_12/Conv2D_grad/ShapeN"
  input: "conv2d_12/Conv2D/ReadVariableOp"
  input: "RMSprop_2/gradients/conv2d_13/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "RMSprop_2/gradients/conv2d_12/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv2d_12_input"
  input: "RMSprop_2/gradients/conv2d_12/Conv2D_grad/ShapeN:1"
  input: "RMSprop_2/gradients/conv2d_13/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "RMSprop_2/iter/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_2/iter"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "RMSprop_2/iter"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_2/iter"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop_2/iter"
    }
  }
}
node {
  name: "RMSprop_2/iter/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop_2/iter"
}
node {
  name: "RMSprop_2/iter/Assign"
  op: "AssignVariableOp"
  input: "RMSprop_2/iter"
  input: "RMSprop_2/iter/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_2/iter"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "RMSprop_2/iter/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/iter"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_2/iter"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "RMSprop_2/decay/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_2/decay"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_2/decay"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_2/decay"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop_2/decay"
    }
  }
}
node {
  name: "RMSprop_2/decay/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop_2/decay"
}
node {
  name: "RMSprop_2/decay/Assign"
  op: "AssignVariableOp"
  input: "RMSprop_2/decay"
  input: "RMSprop_2/decay/Initializer/initial_value"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_2/decay"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/decay/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/decay"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_2/decay"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/learning_rate/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_2/learning_rate"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "RMSprop_2/learning_rate"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_2/learning_rate"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop_2/learning_rate"
    }
  }
}
node {
  name: "RMSprop_2/learning_rate/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop_2/learning_rate"
}
node {
  name: "RMSprop_2/learning_rate/Assign"
  op: "AssignVariableOp"
  input: "RMSprop_2/learning_rate"
  input: "RMSprop_2/learning_rate/Initializer/initial_value"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_2/learning_rate"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/learning_rate/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/learning_rate"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_2/learning_rate"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/momentum/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_2/momentum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_2/momentum"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_2/momentum"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop_2/momentum"
    }
  }
}
node {
  name: "RMSprop_2/momentum/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop_2/momentum"
}
node {
  name: "RMSprop_2/momentum/Assign"
  op: "AssignVariableOp"
  input: "RMSprop_2/momentum"
  input: "RMSprop_2/momentum/Initializer/initial_value"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_2/momentum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/momentum/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/momentum"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_2/momentum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/rho/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_2/rho"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "RMSprop_2/rho"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_2/rho"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop_2/rho"
    }
  }
}
node {
  name: "RMSprop_2/rho/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop_2/rho"
}
node {
  name: "RMSprop_2/rho/Assign"
  op: "AssignVariableOp"
  input: "RMSprop_2/rho"
  input: "RMSprop_2/rho/Initializer/initial_value"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_2/rho"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/rho/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/rho"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@RMSprop_2/rho"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/conv2d_12/kernel/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_2/conv2d_12/kernel/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop_2/conv2d_12/kernel/rms"
    }
  }
}
node {
  name: "RMSprop_2/conv2d_12/kernel/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop_2/conv2d_12/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/kernel"
      }
    }
  }
}
node {
  name: "RMSprop_2/conv2d_12/kernel/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_12/kernel/rms"
  input: "RMSprop_2/conv2d_12/kernel/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/conv2d_12/kernel/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_12/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/conv2d_12/bias/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_2/conv2d_12/bias/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop_2/conv2d_12/bias/rms"
    }
  }
}
node {
  name: "RMSprop_2/conv2d_12/bias/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop_2/conv2d_12/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/bias"
      }
    }
  }
}
node {
  name: "RMSprop_2/conv2d_12/bias/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_12/bias/rms"
  input: "RMSprop_2/conv2d_12/bias/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/conv2d_12/bias/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_12/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_12/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/conv2d_13/kernel/rms/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "RMSprop_2/conv2d_13/kernel/rms/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_2/conv2d_13/kernel/rms/Initializer/zeros"
  op: "Fill"
  input: "RMSprop_2/conv2d_13/kernel/rms/Initializer/zeros/shape_as_tensor"
  input: "RMSprop_2/conv2d_13/kernel/rms/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/conv2d_13/kernel/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop_2/conv2d_13/kernel/rms"
    }
  }
}
node {
  name: "RMSprop_2/conv2d_13/kernel/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop_2/conv2d_13/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
}
node {
  name: "RMSprop_2/conv2d_13/kernel/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_13/kernel/rms"
  input: "RMSprop_2/conv2d_13/kernel/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/conv2d_13/kernel/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_13/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/conv2d_13/bias/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_2/conv2d_13/bias/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop_2/conv2d_13/bias/rms"
    }
  }
}
node {
  name: "RMSprop_2/conv2d_13/bias/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop_2/conv2d_13/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/bias"
      }
    }
  }
}
node {
  name: "RMSprop_2/conv2d_13/bias/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_13/bias/rms"
  input: "RMSprop_2/conv2d_13/bias/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/conv2d_13/bias/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_13/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_13/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/conv2d_14/kernel/rms/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "RMSprop_2/conv2d_14/kernel/rms/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_2/conv2d_14/kernel/rms/Initializer/zeros"
  op: "Fill"
  input: "RMSprop_2/conv2d_14/kernel/rms/Initializer/zeros/shape_as_tensor"
  input: "RMSprop_2/conv2d_14/kernel/rms/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/conv2d_14/kernel/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop_2/conv2d_14/kernel/rms"
    }
  }
}
node {
  name: "RMSprop_2/conv2d_14/kernel/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop_2/conv2d_14/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
}
node {
  name: "RMSprop_2/conv2d_14/kernel/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_14/kernel/rms"
  input: "RMSprop_2/conv2d_14/kernel/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/conv2d_14/kernel/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_14/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/conv2d_14/bias/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_2/conv2d_14/bias/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop_2/conv2d_14/bias/rms"
    }
  }
}
node {
  name: "RMSprop_2/conv2d_14/bias/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop_2/conv2d_14/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/bias"
      }
    }
  }
}
node {
  name: "RMSprop_2/conv2d_14/bias/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_14/bias/rms"
  input: "RMSprop_2/conv2d_14/bias/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/conv2d_14/bias/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_14/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_14/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/conv2d_15/kernel/rms/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "RMSprop_2/conv2d_15/kernel/rms/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_2/conv2d_15/kernel/rms/Initializer/zeros"
  op: "Fill"
  input: "RMSprop_2/conv2d_15/kernel/rms/Initializer/zeros/shape_as_tensor"
  input: "RMSprop_2/conv2d_15/kernel/rms/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/conv2d_15/kernel/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop_2/conv2d_15/kernel/rms"
    }
  }
}
node {
  name: "RMSprop_2/conv2d_15/kernel/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop_2/conv2d_15/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
}
node {
  name: "RMSprop_2/conv2d_15/kernel/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_15/kernel/rms"
  input: "RMSprop_2/conv2d_15/kernel/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/conv2d_15/kernel/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_15/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/conv2d_15/bias/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_2/conv2d_15/bias/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop_2/conv2d_15/bias/rms"
    }
  }
}
node {
  name: "RMSprop_2/conv2d_15/bias/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop_2/conv2d_15/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/bias"
      }
    }
  }
}
node {
  name: "RMSprop_2/conv2d_15/bias/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_15/bias/rms"
  input: "RMSprop_2/conv2d_15/bias/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/conv2d_15/bias/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_15/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_15/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/conv2d_16/kernel/rms/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "RMSprop_2/conv2d_16/kernel/rms/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_2/conv2d_16/kernel/rms/Initializer/zeros"
  op: "Fill"
  input: "RMSprop_2/conv2d_16/kernel/rms/Initializer/zeros/shape_as_tensor"
  input: "RMSprop_2/conv2d_16/kernel/rms/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/conv2d_16/kernel/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop_2/conv2d_16/kernel/rms"
    }
  }
}
node {
  name: "RMSprop_2/conv2d_16/kernel/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop_2/conv2d_16/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
}
node {
  name: "RMSprop_2/conv2d_16/kernel/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_16/kernel/rms"
  input: "RMSprop_2/conv2d_16/kernel/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/conv2d_16/kernel/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_16/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/conv2d_16/bias/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_2/conv2d_16/bias/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop_2/conv2d_16/bias/rms"
    }
  }
}
node {
  name: "RMSprop_2/conv2d_16/bias/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop_2/conv2d_16/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/bias"
      }
    }
  }
}
node {
  name: "RMSprop_2/conv2d_16/bias/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_16/bias/rms"
  input: "RMSprop_2/conv2d_16/bias/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/conv2d_16/bias/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_16/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_16/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/conv2d_17/kernel/rms/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "RMSprop_2/conv2d_17/kernel/rms/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_2/conv2d_17/kernel/rms/Initializer/zeros"
  op: "Fill"
  input: "RMSprop_2/conv2d_17/kernel/rms/Initializer/zeros/shape_as_tensor"
  input: "RMSprop_2/conv2d_17/kernel/rms/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/conv2d_17/kernel/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop_2/conv2d_17/kernel/rms"
    }
  }
}
node {
  name: "RMSprop_2/conv2d_17/kernel/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop_2/conv2d_17/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
}
node {
  name: "RMSprop_2/conv2d_17/kernel/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_17/kernel/rms"
  input: "RMSprop_2/conv2d_17/kernel/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/conv2d_17/kernel/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_17/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/conv2d_17/bias/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_2/conv2d_17/bias/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop_2/conv2d_17/bias/rms"
    }
  }
}
node {
  name: "RMSprop_2/conv2d_17/bias/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop_2/conv2d_17/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/bias"
      }
    }
  }
}
node {
  name: "RMSprop_2/conv2d_17/bias/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_17/bias/rms"
  input: "RMSprop_2/conv2d_17/bias/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/conv2d_17/bias/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_17/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_17/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/dense_4/kernel/rms/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000R\001\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "RMSprop_2/dense_4/kernel/rms/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_2/dense_4/kernel/rms/Initializer/zeros"
  op: "Fill"
  input: "RMSprop_2/dense_4/kernel/rms/Initializer/zeros/shape_as_tensor"
  input: "RMSprop_2/dense_4/kernel/rms/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "RMSprop_2/dense_4/kernel/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 86528
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop_2/dense_4/kernel/rms"
    }
  }
}
node {
  name: "RMSprop_2/dense_4/kernel/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop_2/dense_4/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/kernel"
      }
    }
  }
}
node {
  name: "RMSprop_2/dense_4/kernel/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop_2/dense_4/kernel/rms"
  input: "RMSprop_2/dense_4/kernel/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/dense_4/kernel/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/dense_4/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/dense_4/bias/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_2/dense_4/bias/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop_2/dense_4/bias/rms"
    }
  }
}
node {
  name: "RMSprop_2/dense_4/bias/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop_2/dense_4/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/bias"
      }
    }
  }
}
node {
  name: "RMSprop_2/dense_4/bias/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop_2/dense_4/bias/rms"
  input: "RMSprop_2/dense_4/bias/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/dense_4/bias/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/dense_4/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_4/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/dense_5/kernel/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_2/dense_5/kernel/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop_2/dense_5/kernel/rms"
    }
  }
}
node {
  name: "RMSprop_2/dense_5/kernel/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop_2/dense_5/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/kernel"
      }
    }
  }
}
node {
  name: "RMSprop_2/dense_5/kernel/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop_2/dense_5/kernel/rms"
  input: "RMSprop_2/dense_5/kernel/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/dense_5/kernel/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/dense_5/kernel/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/dense_5/bias/rms/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "RMSprop_2/dense_5/bias/rms"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "RMSprop_2/dense_5/bias/rms"
    }
  }
}
node {
  name: "RMSprop_2/dense_5/bias/rms/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "RMSprop_2/dense_5/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/bias"
      }
    }
  }
}
node {
  name: "RMSprop_2/dense_5/bias/rms/Assign"
  op: "AssignVariableOp"
  input: "RMSprop_2/dense_5/bias/rms"
  input: "RMSprop_2/dense_5/bias/rms/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/dense_5/bias/rms/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/dense_5/bias/rms"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_5/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_12/kernel/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_12/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_12/kernel/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_12/kernel/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_12/kernel/mul"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_conv2d_12/kernel/ReadVariableOp"
  input: "RMSprop_2/RMSprop/update_conv2d_12/kernel/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_12/kernel/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop_2/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_12/kernel/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_12/kernel/sub"
  op: "Sub"
  input: "RMSprop_2/RMSprop/update_conv2d_12/kernel/sub/x"
  input: "RMSprop_2/RMSprop/update_conv2d_12/kernel/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_12/kernel/Square"
  op: "Square"
  input: "RMSprop_2/gradients/conv2d_12/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_12/kernel/mul_1"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_conv2d_12/kernel/sub"
  input: "RMSprop_2/RMSprop/update_conv2d_12/kernel/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_12/kernel/add"
  op: "Add"
  input: "RMSprop_2/RMSprop/update_conv2d_12/kernel/mul"
  input: "RMSprop_2/RMSprop/update_conv2d_12/kernel/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_12/kernel/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_12/kernel/rms"
  input: "RMSprop_2/RMSprop/update_conv2d_12/kernel/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_12/kernel/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_12/kernel/rms"
  input: "^RMSprop_2/RMSprop/update_conv2d_12/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_12/kernel/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop_2/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_12/kernel/mul_2"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_conv2d_12/kernel/ReadVariableOp_3"
  input: "RMSprop_2/gradients/conv2d_12/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_12/kernel/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_12/kernel/rms"
  input: "^RMSprop_2/RMSprop/update_conv2d_12/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_12/kernel/Sqrt"
  op: "Sqrt"
  input: "RMSprop_2/RMSprop/update_conv2d_12/kernel/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_12/kernel/add_1"
  op: "Add"
  input: "RMSprop_2/RMSprop/update_conv2d_12/kernel/Sqrt"
  input: "RMSprop_2/RMSprop/update_conv2d_12/kernel/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_12/kernel/truediv"
  op: "RealDiv"
  input: "RMSprop_2/RMSprop/update_conv2d_12/kernel/mul_2"
  input: "RMSprop_2/RMSprop/update_conv2d_12/kernel/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_12/kernel/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv2d_12/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_12/kernel/sub_1"
  op: "Sub"
  input: "RMSprop_2/RMSprop/update_conv2d_12/kernel/ReadVariableOp_4"
  input: "RMSprop_2/RMSprop/update_conv2d_12/kernel/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_12/kernel/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "conv2d_12/kernel"
  input: "RMSprop_2/RMSprop/update_conv2d_12/kernel/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_12/kernel/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv2d_12/kernel"
  input: "^RMSprop_2/RMSprop/update_conv2d_12/kernel/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_12/bias/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_12/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_12/bias/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_12/bias/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_12/bias/mul"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_conv2d_12/bias/ReadVariableOp"
  input: "RMSprop_2/RMSprop/update_conv2d_12/bias/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_12/bias/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop_2/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_12/bias/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_12/bias/sub"
  op: "Sub"
  input: "RMSprop_2/RMSprop/update_conv2d_12/bias/sub/x"
  input: "RMSprop_2/RMSprop/update_conv2d_12/bias/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_12/bias/Square"
  op: "Square"
  input: "RMSprop_2/gradients/conv2d_12/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_12/bias/mul_1"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_conv2d_12/bias/sub"
  input: "RMSprop_2/RMSprop/update_conv2d_12/bias/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_12/bias/add"
  op: "Add"
  input: "RMSprop_2/RMSprop/update_conv2d_12/bias/mul"
  input: "RMSprop_2/RMSprop/update_conv2d_12/bias/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_12/bias/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_12/bias/rms"
  input: "RMSprop_2/RMSprop/update_conv2d_12/bias/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_12/bias/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_12/bias/rms"
  input: "^RMSprop_2/RMSprop/update_conv2d_12/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_12/bias/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop_2/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_12/bias/mul_2"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_conv2d_12/bias/ReadVariableOp_3"
  input: "RMSprop_2/gradients/conv2d_12/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_12/bias/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_12/bias/rms"
  input: "^RMSprop_2/RMSprop/update_conv2d_12/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_12/bias/Sqrt"
  op: "Sqrt"
  input: "RMSprop_2/RMSprop/update_conv2d_12/bias/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_12/bias/add_1"
  op: "Add"
  input: "RMSprop_2/RMSprop/update_conv2d_12/bias/Sqrt"
  input: "RMSprop_2/RMSprop/update_conv2d_12/bias/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_12/bias/truediv"
  op: "RealDiv"
  input: "RMSprop_2/RMSprop/update_conv2d_12/bias/mul_2"
  input: "RMSprop_2/RMSprop/update_conv2d_12/bias/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_12/bias/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv2d_12/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_12/bias/sub_1"
  op: "Sub"
  input: "RMSprop_2/RMSprop/update_conv2d_12/bias/ReadVariableOp_4"
  input: "RMSprop_2/RMSprop/update_conv2d_12/bias/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_12/bias/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "conv2d_12/bias"
  input: "RMSprop_2/RMSprop/update_conv2d_12/bias/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_12/bias/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv2d_12/bias"
  input: "^RMSprop_2/RMSprop/update_conv2d_12/bias/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_13/kernel/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_13/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_13/kernel/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_13/kernel/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_13/kernel/mul"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_conv2d_13/kernel/ReadVariableOp"
  input: "RMSprop_2/RMSprop/update_conv2d_13/kernel/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_13/kernel/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop_2/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_13/kernel/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_13/kernel/sub"
  op: "Sub"
  input: "RMSprop_2/RMSprop/update_conv2d_13/kernel/sub/x"
  input: "RMSprop_2/RMSprop/update_conv2d_13/kernel/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_13/kernel/Square"
  op: "Square"
  input: "RMSprop_2/gradients/conv2d_13/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_13/kernel/mul_1"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_conv2d_13/kernel/sub"
  input: "RMSprop_2/RMSprop/update_conv2d_13/kernel/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_13/kernel/add"
  op: "Add"
  input: "RMSprop_2/RMSprop/update_conv2d_13/kernel/mul"
  input: "RMSprop_2/RMSprop/update_conv2d_13/kernel/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_13/kernel/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_13/kernel/rms"
  input: "RMSprop_2/RMSprop/update_conv2d_13/kernel/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_13/kernel/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_13/kernel/rms"
  input: "^RMSprop_2/RMSprop/update_conv2d_13/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_13/kernel/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop_2/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_13/kernel/mul_2"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_conv2d_13/kernel/ReadVariableOp_3"
  input: "RMSprop_2/gradients/conv2d_13/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_13/kernel/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_13/kernel/rms"
  input: "^RMSprop_2/RMSprop/update_conv2d_13/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_13/kernel/Sqrt"
  op: "Sqrt"
  input: "RMSprop_2/RMSprop/update_conv2d_13/kernel/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_13/kernel/add_1"
  op: "Add"
  input: "RMSprop_2/RMSprop/update_conv2d_13/kernel/Sqrt"
  input: "RMSprop_2/RMSprop/update_conv2d_13/kernel/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_13/kernel/truediv"
  op: "RealDiv"
  input: "RMSprop_2/RMSprop/update_conv2d_13/kernel/mul_2"
  input: "RMSprop_2/RMSprop/update_conv2d_13/kernel/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_13/kernel/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv2d_13/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_13/kernel/sub_1"
  op: "Sub"
  input: "RMSprop_2/RMSprop/update_conv2d_13/kernel/ReadVariableOp_4"
  input: "RMSprop_2/RMSprop/update_conv2d_13/kernel/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_13/kernel/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "conv2d_13/kernel"
  input: "RMSprop_2/RMSprop/update_conv2d_13/kernel/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_13/kernel/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv2d_13/kernel"
  input: "^RMSprop_2/RMSprop/update_conv2d_13/kernel/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_13/bias/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_13/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_13/bias/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_13/bias/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_13/bias/mul"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_conv2d_13/bias/ReadVariableOp"
  input: "RMSprop_2/RMSprop/update_conv2d_13/bias/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_13/bias/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop_2/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_13/bias/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_13/bias/sub"
  op: "Sub"
  input: "RMSprop_2/RMSprop/update_conv2d_13/bias/sub/x"
  input: "RMSprop_2/RMSprop/update_conv2d_13/bias/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_13/bias/Square"
  op: "Square"
  input: "RMSprop_2/gradients/conv2d_13/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_13/bias/mul_1"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_conv2d_13/bias/sub"
  input: "RMSprop_2/RMSprop/update_conv2d_13/bias/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_13/bias/add"
  op: "Add"
  input: "RMSprop_2/RMSprop/update_conv2d_13/bias/mul"
  input: "RMSprop_2/RMSprop/update_conv2d_13/bias/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_13/bias/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_13/bias/rms"
  input: "RMSprop_2/RMSprop/update_conv2d_13/bias/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_13/bias/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_13/bias/rms"
  input: "^RMSprop_2/RMSprop/update_conv2d_13/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_13/bias/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop_2/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_13/bias/mul_2"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_conv2d_13/bias/ReadVariableOp_3"
  input: "RMSprop_2/gradients/conv2d_13/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_13/bias/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_13/bias/rms"
  input: "^RMSprop_2/RMSprop/update_conv2d_13/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_13/bias/Sqrt"
  op: "Sqrt"
  input: "RMSprop_2/RMSprop/update_conv2d_13/bias/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_13/bias/add_1"
  op: "Add"
  input: "RMSprop_2/RMSprop/update_conv2d_13/bias/Sqrt"
  input: "RMSprop_2/RMSprop/update_conv2d_13/bias/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_13/bias/truediv"
  op: "RealDiv"
  input: "RMSprop_2/RMSprop/update_conv2d_13/bias/mul_2"
  input: "RMSprop_2/RMSprop/update_conv2d_13/bias/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_13/bias/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv2d_13/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_13/bias/sub_1"
  op: "Sub"
  input: "RMSprop_2/RMSprop/update_conv2d_13/bias/ReadVariableOp_4"
  input: "RMSprop_2/RMSprop/update_conv2d_13/bias/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_13/bias/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "conv2d_13/bias"
  input: "RMSprop_2/RMSprop/update_conv2d_13/bias/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_13/bias/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv2d_13/bias"
  input: "^RMSprop_2/RMSprop/update_conv2d_13/bias/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_14/kernel/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_14/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_14/kernel/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_14/kernel/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_14/kernel/mul"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_conv2d_14/kernel/ReadVariableOp"
  input: "RMSprop_2/RMSprop/update_conv2d_14/kernel/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_14/kernel/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop_2/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_14/kernel/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_14/kernel/sub"
  op: "Sub"
  input: "RMSprop_2/RMSprop/update_conv2d_14/kernel/sub/x"
  input: "RMSprop_2/RMSprop/update_conv2d_14/kernel/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_14/kernel/Square"
  op: "Square"
  input: "RMSprop_2/gradients/conv2d_14/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_14/kernel/mul_1"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_conv2d_14/kernel/sub"
  input: "RMSprop_2/RMSprop/update_conv2d_14/kernel/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_14/kernel/add"
  op: "Add"
  input: "RMSprop_2/RMSprop/update_conv2d_14/kernel/mul"
  input: "RMSprop_2/RMSprop/update_conv2d_14/kernel/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_14/kernel/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_14/kernel/rms"
  input: "RMSprop_2/RMSprop/update_conv2d_14/kernel/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_14/kernel/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_14/kernel/rms"
  input: "^RMSprop_2/RMSprop/update_conv2d_14/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_14/kernel/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop_2/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_14/kernel/mul_2"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_conv2d_14/kernel/ReadVariableOp_3"
  input: "RMSprop_2/gradients/conv2d_14/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_14/kernel/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_14/kernel/rms"
  input: "^RMSprop_2/RMSprop/update_conv2d_14/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_14/kernel/Sqrt"
  op: "Sqrt"
  input: "RMSprop_2/RMSprop/update_conv2d_14/kernel/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_14/kernel/add_1"
  op: "Add"
  input: "RMSprop_2/RMSprop/update_conv2d_14/kernel/Sqrt"
  input: "RMSprop_2/RMSprop/update_conv2d_14/kernel/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_14/kernel/truediv"
  op: "RealDiv"
  input: "RMSprop_2/RMSprop/update_conv2d_14/kernel/mul_2"
  input: "RMSprop_2/RMSprop/update_conv2d_14/kernel/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_14/kernel/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv2d_14/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_14/kernel/sub_1"
  op: "Sub"
  input: "RMSprop_2/RMSprop/update_conv2d_14/kernel/ReadVariableOp_4"
  input: "RMSprop_2/RMSprop/update_conv2d_14/kernel/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_14/kernel/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "conv2d_14/kernel"
  input: "RMSprop_2/RMSprop/update_conv2d_14/kernel/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_14/kernel/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv2d_14/kernel"
  input: "^RMSprop_2/RMSprop/update_conv2d_14/kernel/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_14/bias/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_14/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_14/bias/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_14/bias/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_14/bias/mul"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_conv2d_14/bias/ReadVariableOp"
  input: "RMSprop_2/RMSprop/update_conv2d_14/bias/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_14/bias/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop_2/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_14/bias/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_14/bias/sub"
  op: "Sub"
  input: "RMSprop_2/RMSprop/update_conv2d_14/bias/sub/x"
  input: "RMSprop_2/RMSprop/update_conv2d_14/bias/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_14/bias/Square"
  op: "Square"
  input: "RMSprop_2/gradients/conv2d_14/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_14/bias/mul_1"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_conv2d_14/bias/sub"
  input: "RMSprop_2/RMSprop/update_conv2d_14/bias/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_14/bias/add"
  op: "Add"
  input: "RMSprop_2/RMSprop/update_conv2d_14/bias/mul"
  input: "RMSprop_2/RMSprop/update_conv2d_14/bias/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_14/bias/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_14/bias/rms"
  input: "RMSprop_2/RMSprop/update_conv2d_14/bias/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_14/bias/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_14/bias/rms"
  input: "^RMSprop_2/RMSprop/update_conv2d_14/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_14/bias/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop_2/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_14/bias/mul_2"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_conv2d_14/bias/ReadVariableOp_3"
  input: "RMSprop_2/gradients/conv2d_14/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_14/bias/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_14/bias/rms"
  input: "^RMSprop_2/RMSprop/update_conv2d_14/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_14/bias/Sqrt"
  op: "Sqrt"
  input: "RMSprop_2/RMSprop/update_conv2d_14/bias/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_14/bias/add_1"
  op: "Add"
  input: "RMSprop_2/RMSprop/update_conv2d_14/bias/Sqrt"
  input: "RMSprop_2/RMSprop/update_conv2d_14/bias/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_14/bias/truediv"
  op: "RealDiv"
  input: "RMSprop_2/RMSprop/update_conv2d_14/bias/mul_2"
  input: "RMSprop_2/RMSprop/update_conv2d_14/bias/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_14/bias/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv2d_14/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_14/bias/sub_1"
  op: "Sub"
  input: "RMSprop_2/RMSprop/update_conv2d_14/bias/ReadVariableOp_4"
  input: "RMSprop_2/RMSprop/update_conv2d_14/bias/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_14/bias/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "conv2d_14/bias"
  input: "RMSprop_2/RMSprop/update_conv2d_14/bias/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_14/bias/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv2d_14/bias"
  input: "^RMSprop_2/RMSprop/update_conv2d_14/bias/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_15/kernel/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_15/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_15/kernel/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_15/kernel/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_15/kernel/mul"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_conv2d_15/kernel/ReadVariableOp"
  input: "RMSprop_2/RMSprop/update_conv2d_15/kernel/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_15/kernel/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop_2/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_15/kernel/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_15/kernel/sub"
  op: "Sub"
  input: "RMSprop_2/RMSprop/update_conv2d_15/kernel/sub/x"
  input: "RMSprop_2/RMSprop/update_conv2d_15/kernel/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_15/kernel/Square"
  op: "Square"
  input: "RMSprop_2/gradients/conv2d_15/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_15/kernel/mul_1"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_conv2d_15/kernel/sub"
  input: "RMSprop_2/RMSprop/update_conv2d_15/kernel/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_15/kernel/add"
  op: "Add"
  input: "RMSprop_2/RMSprop/update_conv2d_15/kernel/mul"
  input: "RMSprop_2/RMSprop/update_conv2d_15/kernel/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_15/kernel/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_15/kernel/rms"
  input: "RMSprop_2/RMSprop/update_conv2d_15/kernel/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_15/kernel/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_15/kernel/rms"
  input: "^RMSprop_2/RMSprop/update_conv2d_15/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_15/kernel/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop_2/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_15/kernel/mul_2"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_conv2d_15/kernel/ReadVariableOp_3"
  input: "RMSprop_2/gradients/conv2d_15/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_15/kernel/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_15/kernel/rms"
  input: "^RMSprop_2/RMSprop/update_conv2d_15/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_15/kernel/Sqrt"
  op: "Sqrt"
  input: "RMSprop_2/RMSprop/update_conv2d_15/kernel/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_15/kernel/add_1"
  op: "Add"
  input: "RMSprop_2/RMSprop/update_conv2d_15/kernel/Sqrt"
  input: "RMSprop_2/RMSprop/update_conv2d_15/kernel/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_15/kernel/truediv"
  op: "RealDiv"
  input: "RMSprop_2/RMSprop/update_conv2d_15/kernel/mul_2"
  input: "RMSprop_2/RMSprop/update_conv2d_15/kernel/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_15/kernel/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv2d_15/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_15/kernel/sub_1"
  op: "Sub"
  input: "RMSprop_2/RMSprop/update_conv2d_15/kernel/ReadVariableOp_4"
  input: "RMSprop_2/RMSprop/update_conv2d_15/kernel/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_15/kernel/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "conv2d_15/kernel"
  input: "RMSprop_2/RMSprop/update_conv2d_15/kernel/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_15/kernel/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv2d_15/kernel"
  input: "^RMSprop_2/RMSprop/update_conv2d_15/kernel/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_15/bias/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_15/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_15/bias/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_15/bias/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_15/bias/mul"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_conv2d_15/bias/ReadVariableOp"
  input: "RMSprop_2/RMSprop/update_conv2d_15/bias/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_15/bias/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop_2/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_15/bias/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_15/bias/sub"
  op: "Sub"
  input: "RMSprop_2/RMSprop/update_conv2d_15/bias/sub/x"
  input: "RMSprop_2/RMSprop/update_conv2d_15/bias/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_15/bias/Square"
  op: "Square"
  input: "RMSprop_2/gradients/conv2d_15/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_15/bias/mul_1"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_conv2d_15/bias/sub"
  input: "RMSprop_2/RMSprop/update_conv2d_15/bias/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_15/bias/add"
  op: "Add"
  input: "RMSprop_2/RMSprop/update_conv2d_15/bias/mul"
  input: "RMSprop_2/RMSprop/update_conv2d_15/bias/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_15/bias/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_15/bias/rms"
  input: "RMSprop_2/RMSprop/update_conv2d_15/bias/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_15/bias/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_15/bias/rms"
  input: "^RMSprop_2/RMSprop/update_conv2d_15/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_15/bias/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop_2/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_15/bias/mul_2"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_conv2d_15/bias/ReadVariableOp_3"
  input: "RMSprop_2/gradients/conv2d_15/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_15/bias/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_15/bias/rms"
  input: "^RMSprop_2/RMSprop/update_conv2d_15/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_15/bias/Sqrt"
  op: "Sqrt"
  input: "RMSprop_2/RMSprop/update_conv2d_15/bias/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_15/bias/add_1"
  op: "Add"
  input: "RMSprop_2/RMSprop/update_conv2d_15/bias/Sqrt"
  input: "RMSprop_2/RMSprop/update_conv2d_15/bias/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_15/bias/truediv"
  op: "RealDiv"
  input: "RMSprop_2/RMSprop/update_conv2d_15/bias/mul_2"
  input: "RMSprop_2/RMSprop/update_conv2d_15/bias/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_15/bias/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv2d_15/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_15/bias/sub_1"
  op: "Sub"
  input: "RMSprop_2/RMSprop/update_conv2d_15/bias/ReadVariableOp_4"
  input: "RMSprop_2/RMSprop/update_conv2d_15/bias/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_15/bias/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "conv2d_15/bias"
  input: "RMSprop_2/RMSprop/update_conv2d_15/bias/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_15/bias/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv2d_15/bias"
  input: "^RMSprop_2/RMSprop/update_conv2d_15/bias/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_16/kernel/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_16/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_16/kernel/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_16/kernel/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_16/kernel/mul"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_conv2d_16/kernel/ReadVariableOp"
  input: "RMSprop_2/RMSprop/update_conv2d_16/kernel/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_16/kernel/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop_2/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_16/kernel/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_16/kernel/sub"
  op: "Sub"
  input: "RMSprop_2/RMSprop/update_conv2d_16/kernel/sub/x"
  input: "RMSprop_2/RMSprop/update_conv2d_16/kernel/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_16/kernel/Square"
  op: "Square"
  input: "RMSprop_2/gradients/conv2d_16/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_16/kernel/mul_1"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_conv2d_16/kernel/sub"
  input: "RMSprop_2/RMSprop/update_conv2d_16/kernel/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_16/kernel/add"
  op: "Add"
  input: "RMSprop_2/RMSprop/update_conv2d_16/kernel/mul"
  input: "RMSprop_2/RMSprop/update_conv2d_16/kernel/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_16/kernel/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_16/kernel/rms"
  input: "RMSprop_2/RMSprop/update_conv2d_16/kernel/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_16/kernel/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_16/kernel/rms"
  input: "^RMSprop_2/RMSprop/update_conv2d_16/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_16/kernel/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop_2/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_16/kernel/mul_2"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_conv2d_16/kernel/ReadVariableOp_3"
  input: "RMSprop_2/gradients/conv2d_16/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_16/kernel/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_16/kernel/rms"
  input: "^RMSprop_2/RMSprop/update_conv2d_16/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_16/kernel/Sqrt"
  op: "Sqrt"
  input: "RMSprop_2/RMSprop/update_conv2d_16/kernel/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_16/kernel/add_1"
  op: "Add"
  input: "RMSprop_2/RMSprop/update_conv2d_16/kernel/Sqrt"
  input: "RMSprop_2/RMSprop/update_conv2d_16/kernel/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_16/kernel/truediv"
  op: "RealDiv"
  input: "RMSprop_2/RMSprop/update_conv2d_16/kernel/mul_2"
  input: "RMSprop_2/RMSprop/update_conv2d_16/kernel/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_16/kernel/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv2d_16/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_16/kernel/sub_1"
  op: "Sub"
  input: "RMSprop_2/RMSprop/update_conv2d_16/kernel/ReadVariableOp_4"
  input: "RMSprop_2/RMSprop/update_conv2d_16/kernel/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_16/kernel/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "conv2d_16/kernel"
  input: "RMSprop_2/RMSprop/update_conv2d_16/kernel/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_16/kernel/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv2d_16/kernel"
  input: "^RMSprop_2/RMSprop/update_conv2d_16/kernel/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_16/bias/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_16/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_16/bias/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_16/bias/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_16/bias/mul"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_conv2d_16/bias/ReadVariableOp"
  input: "RMSprop_2/RMSprop/update_conv2d_16/bias/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_16/bias/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop_2/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_16/bias/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_16/bias/sub"
  op: "Sub"
  input: "RMSprop_2/RMSprop/update_conv2d_16/bias/sub/x"
  input: "RMSprop_2/RMSprop/update_conv2d_16/bias/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_16/bias/Square"
  op: "Square"
  input: "RMSprop_2/gradients/conv2d_16/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_16/bias/mul_1"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_conv2d_16/bias/sub"
  input: "RMSprop_2/RMSprop/update_conv2d_16/bias/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_16/bias/add"
  op: "Add"
  input: "RMSprop_2/RMSprop/update_conv2d_16/bias/mul"
  input: "RMSprop_2/RMSprop/update_conv2d_16/bias/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_16/bias/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_16/bias/rms"
  input: "RMSprop_2/RMSprop/update_conv2d_16/bias/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_16/bias/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_16/bias/rms"
  input: "^RMSprop_2/RMSprop/update_conv2d_16/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_16/bias/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop_2/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_16/bias/mul_2"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_conv2d_16/bias/ReadVariableOp_3"
  input: "RMSprop_2/gradients/conv2d_16/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_16/bias/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_16/bias/rms"
  input: "^RMSprop_2/RMSprop/update_conv2d_16/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_16/bias/Sqrt"
  op: "Sqrt"
  input: "RMSprop_2/RMSprop/update_conv2d_16/bias/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_16/bias/add_1"
  op: "Add"
  input: "RMSprop_2/RMSprop/update_conv2d_16/bias/Sqrt"
  input: "RMSprop_2/RMSprop/update_conv2d_16/bias/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_16/bias/truediv"
  op: "RealDiv"
  input: "RMSprop_2/RMSprop/update_conv2d_16/bias/mul_2"
  input: "RMSprop_2/RMSprop/update_conv2d_16/bias/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_16/bias/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv2d_16/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_16/bias/sub_1"
  op: "Sub"
  input: "RMSprop_2/RMSprop/update_conv2d_16/bias/ReadVariableOp_4"
  input: "RMSprop_2/RMSprop/update_conv2d_16/bias/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_16/bias/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "conv2d_16/bias"
  input: "RMSprop_2/RMSprop/update_conv2d_16/bias/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_16/bias/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv2d_16/bias"
  input: "^RMSprop_2/RMSprop/update_conv2d_16/bias/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_17/kernel/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_17/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_17/kernel/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_17/kernel/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_17/kernel/mul"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_conv2d_17/kernel/ReadVariableOp"
  input: "RMSprop_2/RMSprop/update_conv2d_17/kernel/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_17/kernel/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop_2/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_17/kernel/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_17/kernel/sub"
  op: "Sub"
  input: "RMSprop_2/RMSprop/update_conv2d_17/kernel/sub/x"
  input: "RMSprop_2/RMSprop/update_conv2d_17/kernel/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_17/kernel/Square"
  op: "Square"
  input: "RMSprop_2/gradients/conv2d_17/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_17/kernel/mul_1"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_conv2d_17/kernel/sub"
  input: "RMSprop_2/RMSprop/update_conv2d_17/kernel/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_17/kernel/add"
  op: "Add"
  input: "RMSprop_2/RMSprop/update_conv2d_17/kernel/mul"
  input: "RMSprop_2/RMSprop/update_conv2d_17/kernel/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_17/kernel/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_17/kernel/rms"
  input: "RMSprop_2/RMSprop/update_conv2d_17/kernel/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_17/kernel/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_17/kernel/rms"
  input: "^RMSprop_2/RMSprop/update_conv2d_17/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_17/kernel/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop_2/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_17/kernel/mul_2"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_conv2d_17/kernel/ReadVariableOp_3"
  input: "RMSprop_2/gradients/conv2d_17/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_17/kernel/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_17/kernel/rms"
  input: "^RMSprop_2/RMSprop/update_conv2d_17/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_17/kernel/Sqrt"
  op: "Sqrt"
  input: "RMSprop_2/RMSprop/update_conv2d_17/kernel/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_17/kernel/add_1"
  op: "Add"
  input: "RMSprop_2/RMSprop/update_conv2d_17/kernel/Sqrt"
  input: "RMSprop_2/RMSprop/update_conv2d_17/kernel/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_17/kernel/truediv"
  op: "RealDiv"
  input: "RMSprop_2/RMSprop/update_conv2d_17/kernel/mul_2"
  input: "RMSprop_2/RMSprop/update_conv2d_17/kernel/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_17/kernel/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv2d_17/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_17/kernel/sub_1"
  op: "Sub"
  input: "RMSprop_2/RMSprop/update_conv2d_17/kernel/ReadVariableOp_4"
  input: "RMSprop_2/RMSprop/update_conv2d_17/kernel/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_17/kernel/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "conv2d_17/kernel"
  input: "RMSprop_2/RMSprop/update_conv2d_17/kernel/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_17/kernel/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv2d_17/kernel"
  input: "^RMSprop_2/RMSprop/update_conv2d_17/kernel/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_17/bias/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_17/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_17/bias/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_17/bias/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_17/bias/mul"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_conv2d_17/bias/ReadVariableOp"
  input: "RMSprop_2/RMSprop/update_conv2d_17/bias/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_17/bias/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop_2/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_17/bias/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_17/bias/sub"
  op: "Sub"
  input: "RMSprop_2/RMSprop/update_conv2d_17/bias/sub/x"
  input: "RMSprop_2/RMSprop/update_conv2d_17/bias/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_17/bias/Square"
  op: "Square"
  input: "RMSprop_2/gradients/conv2d_17/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_17/bias/mul_1"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_conv2d_17/bias/sub"
  input: "RMSprop_2/RMSprop/update_conv2d_17/bias/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_17/bias/add"
  op: "Add"
  input: "RMSprop_2/RMSprop/update_conv2d_17/bias/mul"
  input: "RMSprop_2/RMSprop/update_conv2d_17/bias/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_17/bias/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_17/bias/rms"
  input: "RMSprop_2/RMSprop/update_conv2d_17/bias/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_17/bias/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_17/bias/rms"
  input: "^RMSprop_2/RMSprop/update_conv2d_17/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_17/bias/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop_2/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_17/bias/mul_2"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_conv2d_17/bias/ReadVariableOp_3"
  input: "RMSprop_2/gradients/conv2d_17/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_17/bias/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/conv2d_17/bias/rms"
  input: "^RMSprop_2/RMSprop/update_conv2d_17/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_17/bias/Sqrt"
  op: "Sqrt"
  input: "RMSprop_2/RMSprop/update_conv2d_17/bias/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_17/bias/add_1"
  op: "Add"
  input: "RMSprop_2/RMSprop/update_conv2d_17/bias/Sqrt"
  input: "RMSprop_2/RMSprop/update_conv2d_17/bias/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_17/bias/truediv"
  op: "RealDiv"
  input: "RMSprop_2/RMSprop/update_conv2d_17/bias/mul_2"
  input: "RMSprop_2/RMSprop/update_conv2d_17/bias/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_17/bias/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv2d_17/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_17/bias/sub_1"
  op: "Sub"
  input: "RMSprop_2/RMSprop/update_conv2d_17/bias/ReadVariableOp_4"
  input: "RMSprop_2/RMSprop/update_conv2d_17/bias/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_17/bias/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "conv2d_17/bias"
  input: "RMSprop_2/RMSprop/update_conv2d_17/bias/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_conv2d_17/bias/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv2d_17/bias"
  input: "^RMSprop_2/RMSprop/update_conv2d_17/bias/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_4/kernel/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_4/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_4/kernel/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/dense_4/kernel/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_4/kernel/mul"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_dense_4/kernel/ReadVariableOp"
  input: "RMSprop_2/RMSprop/update_dense_4/kernel/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_4/kernel/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop_2/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_4/kernel/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_4/kernel/sub"
  op: "Sub"
  input: "RMSprop_2/RMSprop/update_dense_4/kernel/sub/x"
  input: "RMSprop_2/RMSprop/update_dense_4/kernel/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_4/kernel/Square"
  op: "Square"
  input: "RMSprop_2/gradients/dense_4/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_4/kernel/mul_1"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_dense_4/kernel/sub"
  input: "RMSprop_2/RMSprop/update_dense_4/kernel/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_4/kernel/add"
  op: "Add"
  input: "RMSprop_2/RMSprop/update_dense_4/kernel/mul"
  input: "RMSprop_2/RMSprop/update_dense_4/kernel/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_4/kernel/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop_2/dense_4/kernel/rms"
  input: "RMSprop_2/RMSprop/update_dense_4/kernel/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_4/kernel/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop_2/dense_4/kernel/rms"
  input: "^RMSprop_2/RMSprop/update_dense_4/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_4/kernel/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop_2/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_4/kernel/mul_2"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_dense_4/kernel/ReadVariableOp_3"
  input: "RMSprop_2/gradients/dense_4/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_4/kernel/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/dense_4/kernel/rms"
  input: "^RMSprop_2/RMSprop/update_dense_4/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_4/kernel/Sqrt"
  op: "Sqrt"
  input: "RMSprop_2/RMSprop/update_dense_4/kernel/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_4/kernel/add_1"
  op: "Add"
  input: "RMSprop_2/RMSprop/update_dense_4/kernel/Sqrt"
  input: "RMSprop_2/RMSprop/update_dense_4/kernel/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_4/kernel/truediv"
  op: "RealDiv"
  input: "RMSprop_2/RMSprop/update_dense_4/kernel/mul_2"
  input: "RMSprop_2/RMSprop/update_dense_4/kernel/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_4/kernel/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "dense_4/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_4/kernel/sub_1"
  op: "Sub"
  input: "RMSprop_2/RMSprop/update_dense_4/kernel/ReadVariableOp_4"
  input: "RMSprop_2/RMSprop/update_dense_4/kernel/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_4/kernel/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "dense_4/kernel"
  input: "RMSprop_2/RMSprop/update_dense_4/kernel/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_4/kernel/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "dense_4/kernel"
  input: "^RMSprop_2/RMSprop/update_dense_4/kernel/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_4/bias/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_4/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_4/bias/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/dense_4/bias/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_4/bias/mul"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_dense_4/bias/ReadVariableOp"
  input: "RMSprop_2/RMSprop/update_dense_4/bias/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_4/bias/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop_2/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_4/bias/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_4/bias/sub"
  op: "Sub"
  input: "RMSprop_2/RMSprop/update_dense_4/bias/sub/x"
  input: "RMSprop_2/RMSprop/update_dense_4/bias/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_4/bias/Square"
  op: "Square"
  input: "RMSprop_2/gradients/dense_4/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_4/bias/mul_1"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_dense_4/bias/sub"
  input: "RMSprop_2/RMSprop/update_dense_4/bias/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_4/bias/add"
  op: "Add"
  input: "RMSprop_2/RMSprop/update_dense_4/bias/mul"
  input: "RMSprop_2/RMSprop/update_dense_4/bias/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_4/bias/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop_2/dense_4/bias/rms"
  input: "RMSprop_2/RMSprop/update_dense_4/bias/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_4/bias/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop_2/dense_4/bias/rms"
  input: "^RMSprop_2/RMSprop/update_dense_4/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_4/bias/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop_2/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_4/bias/mul_2"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_dense_4/bias/ReadVariableOp_3"
  input: "RMSprop_2/gradients/dense_4/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_4/bias/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/dense_4/bias/rms"
  input: "^RMSprop_2/RMSprop/update_dense_4/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_4/bias/Sqrt"
  op: "Sqrt"
  input: "RMSprop_2/RMSprop/update_dense_4/bias/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_4/bias/add_1"
  op: "Add"
  input: "RMSprop_2/RMSprop/update_dense_4/bias/Sqrt"
  input: "RMSprop_2/RMSprop/update_dense_4/bias/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_4/bias/truediv"
  op: "RealDiv"
  input: "RMSprop_2/RMSprop/update_dense_4/bias/mul_2"
  input: "RMSprop_2/RMSprop/update_dense_4/bias/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_4/bias/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "dense_4/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_4/bias/sub_1"
  op: "Sub"
  input: "RMSprop_2/RMSprop/update_dense_4/bias/ReadVariableOp_4"
  input: "RMSprop_2/RMSprop/update_dense_4/bias/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_4/bias/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "dense_4/bias"
  input: "RMSprop_2/RMSprop/update_dense_4/bias/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_4/bias/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "dense_4/bias"
  input: "^RMSprop_2/RMSprop/update_dense_4/bias/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_5/kernel/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_5/kernel/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_5/kernel/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/dense_5/kernel/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_5/kernel/mul"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_dense_5/kernel/ReadVariableOp"
  input: "RMSprop_2/RMSprop/update_dense_5/kernel/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_5/kernel/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop_2/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_5/kernel/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_5/kernel/sub"
  op: "Sub"
  input: "RMSprop_2/RMSprop/update_dense_5/kernel/sub/x"
  input: "RMSprop_2/RMSprop/update_dense_5/kernel/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_5/kernel/Square"
  op: "Square"
  input: "RMSprop_2/gradients/dense_5/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_5/kernel/mul_1"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_dense_5/kernel/sub"
  input: "RMSprop_2/RMSprop/update_dense_5/kernel/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_5/kernel/add"
  op: "Add"
  input: "RMSprop_2/RMSprop/update_dense_5/kernel/mul"
  input: "RMSprop_2/RMSprop/update_dense_5/kernel/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_5/kernel/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop_2/dense_5/kernel/rms"
  input: "RMSprop_2/RMSprop/update_dense_5/kernel/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_5/kernel/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop_2/dense_5/kernel/rms"
  input: "^RMSprop_2/RMSprop/update_dense_5/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_5/kernel/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop_2/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_5/kernel/mul_2"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_dense_5/kernel/ReadVariableOp_3"
  input: "RMSprop_2/gradients/dense_5/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_5/kernel/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/dense_5/kernel/rms"
  input: "^RMSprop_2/RMSprop/update_dense_5/kernel/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_5/kernel/Sqrt"
  op: "Sqrt"
  input: "RMSprop_2/RMSprop/update_dense_5/kernel/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_5/kernel/add_1"
  op: "Add"
  input: "RMSprop_2/RMSprop/update_dense_5/kernel/Sqrt"
  input: "RMSprop_2/RMSprop/update_dense_5/kernel/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_5/kernel/truediv"
  op: "RealDiv"
  input: "RMSprop_2/RMSprop/update_dense_5/kernel/mul_2"
  input: "RMSprop_2/RMSprop/update_dense_5/kernel/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_5/kernel/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "dense_5/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_5/kernel/sub_1"
  op: "Sub"
  input: "RMSprop_2/RMSprop/update_dense_5/kernel/ReadVariableOp_4"
  input: "RMSprop_2/RMSprop/update_dense_5/kernel/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_5/kernel/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "dense_5/kernel"
  input: "RMSprop_2/RMSprop/update_dense_5/kernel/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_5/kernel/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "dense_5/kernel"
  input: "^RMSprop_2/RMSprop/update_dense_5/kernel/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_5/bias/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_5/bias/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_5/bias/mul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/dense_5/bias/rms"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_5/bias/mul"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_dense_5/bias/ReadVariableOp"
  input: "RMSprop_2/RMSprop/update_dense_5/bias/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_5/bias/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "RMSprop_2/rho"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_5/bias/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_5/bias/sub"
  op: "Sub"
  input: "RMSprop_2/RMSprop/update_dense_5/bias/sub/x"
  input: "RMSprop_2/RMSprop/update_dense_5/bias/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_5/bias/Square"
  op: "Square"
  input: "RMSprop_2/gradients/dense_5/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_5/bias/mul_1"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_dense_5/bias/sub"
  input: "RMSprop_2/RMSprop/update_dense_5/bias/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_5/bias/add"
  op: "Add"
  input: "RMSprop_2/RMSprop/update_dense_5/bias/mul"
  input: "RMSprop_2/RMSprop/update_dense_5/bias/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_5/bias/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop_2/dense_5/bias/rms"
  input: "RMSprop_2/RMSprop/update_dense_5/bias/add"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_5/bias/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "RMSprop_2/dense_5/bias/rms"
  input: "^RMSprop_2/RMSprop/update_dense_5/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_5/bias/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "RMSprop_2/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_5/bias/mul_2"
  op: "Mul"
  input: "RMSprop_2/RMSprop/update_dense_5/bias/ReadVariableOp_3"
  input: "RMSprop_2/gradients/dense_5/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_5/bias/Sqrt/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/dense_5/bias/rms"
  input: "^RMSprop_2/RMSprop/update_dense_5/bias/AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_5/bias/Sqrt"
  op: "Sqrt"
  input: "RMSprop_2/RMSprop/update_dense_5/bias/Sqrt/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_5/bias/add_1"
  op: "Add"
  input: "RMSprop_2/RMSprop/update_dense_5/bias/Sqrt"
  input: "RMSprop_2/RMSprop/update_dense_5/bias/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_5/bias/truediv"
  op: "RealDiv"
  input: "RMSprop_2/RMSprop/update_dense_5/bias/mul_2"
  input: "RMSprop_2/RMSprop/update_dense_5/bias/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_5/bias/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "dense_5/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_5/bias/sub_1"
  op: "Sub"
  input: "RMSprop_2/RMSprop/update_dense_5/bias/ReadVariableOp_4"
  input: "RMSprop_2/RMSprop/update_dense_5/bias/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_5/bias/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "dense_5/bias"
  input: "RMSprop_2/RMSprop/update_dense_5/bias/sub_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/update_dense_5/bias/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "dense_5/bias"
  input: "^RMSprop_2/RMSprop/update_dense_5/bias/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/Const"
  op: "Const"
  input: "^RMSprop_2/RMSprop/update_conv2d_12/bias/AssignVariableOp_1"
  input: "^RMSprop_2/RMSprop/update_conv2d_12/kernel/AssignVariableOp_1"
  input: "^RMSprop_2/RMSprop/update_conv2d_13/bias/AssignVariableOp_1"
  input: "^RMSprop_2/RMSprop/update_conv2d_13/kernel/AssignVariableOp_1"
  input: "^RMSprop_2/RMSprop/update_conv2d_14/bias/AssignVariableOp_1"
  input: "^RMSprop_2/RMSprop/update_conv2d_14/kernel/AssignVariableOp_1"
  input: "^RMSprop_2/RMSprop/update_conv2d_15/bias/AssignVariableOp_1"
  input: "^RMSprop_2/RMSprop/update_conv2d_15/kernel/AssignVariableOp_1"
  input: "^RMSprop_2/RMSprop/update_conv2d_16/bias/AssignVariableOp_1"
  input: "^RMSprop_2/RMSprop/update_conv2d_16/kernel/AssignVariableOp_1"
  input: "^RMSprop_2/RMSprop/update_conv2d_17/bias/AssignVariableOp_1"
  input: "^RMSprop_2/RMSprop/update_conv2d_17/kernel/AssignVariableOp_1"
  input: "^RMSprop_2/RMSprop/update_dense_4/bias/AssignVariableOp_1"
  input: "^RMSprop_2/RMSprop/update_dense_4/kernel/AssignVariableOp_1"
  input: "^RMSprop_2/RMSprop/update_dense_5/bias/AssignVariableOp_1"
  input: "^RMSprop_2/RMSprop/update_dense_5/kernel/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "RMSprop_2/iter"
  input: "RMSprop_2/RMSprop/Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "RMSprop_2/RMSprop/ReadVariableOp"
  op: "ReadVariableOp"
  input: "RMSprop_2/iter"
  input: "^RMSprop_2/RMSprop/AssignAddVariableOp"
  input: "^RMSprop_2/RMSprop/update_conv2d_12/bias/AssignVariableOp_1"
  input: "^RMSprop_2/RMSprop/update_conv2d_12/kernel/AssignVariableOp_1"
  input: "^RMSprop_2/RMSprop/update_conv2d_13/bias/AssignVariableOp_1"
  input: "^RMSprop_2/RMSprop/update_conv2d_13/kernel/AssignVariableOp_1"
  input: "^RMSprop_2/RMSprop/update_conv2d_14/bias/AssignVariableOp_1"
  input: "^RMSprop_2/RMSprop/update_conv2d_14/kernel/AssignVariableOp_1"
  input: "^RMSprop_2/RMSprop/update_conv2d_15/bias/AssignVariableOp_1"
  input: "^RMSprop_2/RMSprop/update_conv2d_15/kernel/AssignVariableOp_1"
  input: "^RMSprop_2/RMSprop/update_conv2d_16/bias/AssignVariableOp_1"
  input: "^RMSprop_2/RMSprop/update_conv2d_16/kernel/AssignVariableOp_1"
  input: "^RMSprop_2/RMSprop/update_conv2d_17/bias/AssignVariableOp_1"
  input: "^RMSprop_2/RMSprop/update_conv2d_17/kernel/AssignVariableOp_1"
  input: "^RMSprop_2/RMSprop/update_dense_4/bias/AssignVariableOp_1"
  input: "^RMSprop_2/RMSprop/update_dense_4/kernel/AssignVariableOp_1"
  input: "^RMSprop_2/RMSprop/update_dense_5/bias/AssignVariableOp_1"
  input: "^RMSprop_2/RMSprop/update_dense_5/kernel/AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training_5/group_deps"
  op: "NoOp"
  input: "^RMSprop_2/RMSprop/AssignAddVariableOp"
  input: "^loss_2/mul"
}
node {
  name: "Placeholder_4"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "total_2"
  input: "Placeholder_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "total_2"
  input: "^AssignVariableOp_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_5"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "count_2"
  input: "Placeholder_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "count_2"
  input: "^AssignVariableOp_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VarIsInitializedOp_78"
  op: "VarIsInitializedOp"
  input: "conv2d_13/kernel"
}
node {
  name: "VarIsInitializedOp_79"
  op: "VarIsInitializedOp"
  input: "conv2d_13/bias"
}
node {
  name: "VarIsInitializedOp_80"
  op: "VarIsInitializedOp"
  input: "conv2d_12/kernel"
}
node {
  name: "VarIsInitializedOp_81"
  op: "VarIsInitializedOp"
  input: "conv2d_16/kernel"
}
node {
  name: "VarIsInitializedOp_82"
  op: "VarIsInitializedOp"
  input: "conv2d_16/bias"
}
node {
  name: "VarIsInitializedOp_83"
  op: "VarIsInitializedOp"
  input: "conv2d_17/kernel"
}
node {
  name: "VarIsInitializedOp_84"
  op: "VarIsInitializedOp"
  input: "conv2d_17/bias"
}
node {
  name: "VarIsInitializedOp_85"
  op: "VarIsInitializedOp"
  input: "conv2d_15/kernel"
}
node {
  name: "VarIsInitializedOp_86"
  op: "VarIsInitializedOp"
  input: "conv2d_15/bias"
}
node {
  name: "VarIsInitializedOp_87"
  op: "VarIsInitializedOp"
  input: "count_2"
}
node {
  name: "VarIsInitializedOp_88"
  op: "VarIsInitializedOp"
  input: "conv2d_12/bias"
}
node {
  name: "VarIsInitializedOp_89"
  op: "VarIsInitializedOp"
  input: "RMSprop_2/conv2d_12/bias/rms"
}
node {
  name: "VarIsInitializedOp_90"
  op: "VarIsInitializedOp"
  input: "RMSprop_2/momentum"
}
node {
  name: "VarIsInitializedOp_91"
  op: "VarIsInitializedOp"
  input: "dense_4/bias"
}
node {
  name: "VarIsInitializedOp_92"
  op: "VarIsInitializedOp"
  input: "RMSprop_2/conv2d_14/bias/rms"
}
node {
  name: "VarIsInitializedOp_93"
  op: "VarIsInitializedOp"
  input: "RMSprop_2/rho"
}
node {
  name: "VarIsInitializedOp_94"
  op: "VarIsInitializedOp"
  input: "RMSprop_2/conv2d_13/bias/rms"
}
node {
  name: "VarIsInitializedOp_95"
  op: "VarIsInitializedOp"
  input: "dense_4/kernel"
}
node {
  name: "VarIsInitializedOp_96"
  op: "VarIsInitializedOp"
  input: "total_2"
}
node {
  name: "VarIsInitializedOp_97"
  op: "VarIsInitializedOp"
  input: "RMSprop_2/iter"
}
node {
  name: "VarIsInitializedOp_98"
  op: "VarIsInitializedOp"
  input: "RMSprop_2/conv2d_12/kernel/rms"
}
node {
  name: "VarIsInitializedOp_99"
  op: "VarIsInitializedOp"
  input: "RMSprop_2/decay"
}
node {
  name: "VarIsInitializedOp_100"
  op: "VarIsInitializedOp"
  input: "RMSprop_2/conv2d_14/kernel/rms"
}
node {
  name: "VarIsInitializedOp_101"
  op: "VarIsInitializedOp"
  input: "RMSprop_2/learning_rate"
}
node {
  name: "VarIsInitializedOp_102"
  op: "VarIsInitializedOp"
  input: "RMSprop_2/conv2d_13/kernel/rms"
}
node {
  name: "VarIsInitializedOp_103"
  op: "VarIsInitializedOp"
  input: "RMSprop_2/conv2d_15/bias/rms"
}
node {
  name: "VarIsInitializedOp_104"
  op: "VarIsInitializedOp"
  input: "RMSprop_2/conv2d_16/kernel/rms"
}
node {
  name: "VarIsInitializedOp_105"
  op: "VarIsInitializedOp"
  input: "RMSprop_2/conv2d_16/bias/rms"
}
node {
  name: "VarIsInitializedOp_106"
  op: "VarIsInitializedOp"
  input: "RMSprop_2/dense_5/bias/rms"
}
node {
  name: "VarIsInitializedOp_107"
  op: "VarIsInitializedOp"
  input: "dense_5/bias"
}
node {
  name: "VarIsInitializedOp_108"
  op: "VarIsInitializedOp"
  input: "RMSprop_2/conv2d_17/kernel/rms"
}
node {
  name: "VarIsInitializedOp_109"
  op: "VarIsInitializedOp"
  input: "RMSprop_2/conv2d_17/bias/rms"
}
node {
  name: "VarIsInitializedOp_110"
  op: "VarIsInitializedOp"
  input: "dense_5/kernel"
}
node {
  name: "VarIsInitializedOp_111"
  op: "VarIsInitializedOp"
  input: "RMSprop_2/conv2d_15/kernel/rms"
}
node {
  name: "VarIsInitializedOp_112"
  op: "VarIsInitializedOp"
  input: "RMSprop_2/dense_4/bias/rms"
}
node {
  name: "VarIsInitializedOp_113"
  op: "VarIsInitializedOp"
  input: "RMSprop_2/dense_5/kernel/rms"
}
node {
  name: "VarIsInitializedOp_114"
  op: "VarIsInitializedOp"
  input: "RMSprop_2/dense_4/kernel/rms"
}
node {
  name: "VarIsInitializedOp_115"
  op: "VarIsInitializedOp"
  input: "conv2d_14/kernel"
}
node {
  name: "VarIsInitializedOp_116"
  op: "VarIsInitializedOp"
  input: "conv2d_14/bias"
}
node {
  name: "init_3"
  op: "NoOp"
  input: "^RMSprop_2/conv2d_12/bias/rms/Assign"
  input: "^RMSprop_2/conv2d_12/kernel/rms/Assign"
  input: "^RMSprop_2/conv2d_13/bias/rms/Assign"
  input: "^RMSprop_2/conv2d_13/kernel/rms/Assign"
  input: "^RMSprop_2/conv2d_14/bias/rms/Assign"
  input: "^RMSprop_2/conv2d_14/kernel/rms/Assign"
  input: "^RMSprop_2/conv2d_15/bias/rms/Assign"
  input: "^RMSprop_2/conv2d_15/kernel/rms/Assign"
  input: "^RMSprop_2/conv2d_16/bias/rms/Assign"
  input: "^RMSprop_2/conv2d_16/kernel/rms/Assign"
  input: "^RMSprop_2/conv2d_17/bias/rms/Assign"
  input: "^RMSprop_2/conv2d_17/kernel/rms/Assign"
  input: "^RMSprop_2/decay/Assign"
  input: "^RMSprop_2/dense_4/bias/rms/Assign"
  input: "^RMSprop_2/dense_4/kernel/rms/Assign"
  input: "^RMSprop_2/dense_5/bias/rms/Assign"
  input: "^RMSprop_2/dense_5/kernel/rms/Assign"
  input: "^RMSprop_2/iter/Assign"
  input: "^RMSprop_2/learning_rate/Assign"
  input: "^RMSprop_2/momentum/Assign"
  input: "^RMSprop_2/rho/Assign"
  input: "^conv2d_12/bias/Assign"
  input: "^conv2d_12/kernel/Assign"
  input: "^conv2d_13/bias/Assign"
  input: "^conv2d_13/kernel/Assign"
  input: "^conv2d_14/bias/Assign"
  input: "^conv2d_14/kernel/Assign"
  input: "^conv2d_15/bias/Assign"
  input: "^conv2d_15/kernel/Assign"
  input: "^conv2d_16/bias/Assign"
  input: "^conv2d_16/kernel/Assign"
  input: "^conv2d_17/bias/Assign"
  input: "^conv2d_17/kernel/Assign"
  input: "^count_2/Assign"
  input: "^dense_4/bias/Assign"
  input: "^dense_4/kernel/Assign"
  input: "^dense_5/bias/Assign"
  input: "^dense_5/kernel/Assign"
  input: "^total_2/Assign"
}
node {
  name: "evaluation_2/group_deps"
  op: "NoOp"
  input: "^loss_2/mul"
}
node {
  name: "predict_1/group_deps"
  op: "NoOp"
  input: "^activation_17/Softmax"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^max_pooling2d_4/MaxPool"
}
node {
  name: "conv2d_18_input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 1
        }
        dim {
          size: 120
        }
        dim {
          size: 120
        }
      }
    }
  }
}
node {
  name: "conv2d_18/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_18/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.14213381707668304
      }
    }
  }
}
node {
  name: "conv2d_18/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14213381707668304
      }
    }
  }
}
node {
  name: "conv2d_18/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_18/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_18/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_18/kernel/Initializer/random_uniform/max"
  input: "conv2d_18/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/kernel"
      }
    }
  }
}
node {
  name: "conv2d_18/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_18/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_18/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/kernel"
      }
    }
  }
}
node {
  name: "conv2d_18/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_18/kernel/Initializer/random_uniform/mul"
  input: "conv2d_18/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/kernel"
      }
    }
  }
}
node {
  name: "conv2d_18/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_18/kernel"
    }
  }
}
node {
  name: "conv2d_18/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_18/kernel"
}
node {
  name: "conv2d_18/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_18/kernel"
  input: "conv2d_18/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_18/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_18/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_18/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_18/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_18/bias"
    }
  }
}
node {
  name: "conv2d_18/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_18/bias"
}
node {
  name: "conv2d_18/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_18/bias"
  input: "conv2d_18/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_18/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_18/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_18/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_18/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_18/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_18/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_18/Conv2D"
  op: "Conv2D"
  input: "conv2d_18_input"
  input: "conv2d_18/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_18/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_18/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_18/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_18/Conv2D"
  input: "conv2d_18/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "activation_18/activation_18/Identity"
  op: "Identity"
  input: "conv2d_18/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_19/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_19/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10206207633018494
      }
    }
  }
}
node {
  name: "conv2d_19/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10206207633018494
      }
    }
  }
}
node {
  name: "conv2d_19/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_19/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_19/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_19/kernel/Initializer/random_uniform/max"
  input: "conv2d_19/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/kernel"
      }
    }
  }
}
node {
  name: "conv2d_19/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_19/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_19/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/kernel"
      }
    }
  }
}
node {
  name: "conv2d_19/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_19/kernel/Initializer/random_uniform/mul"
  input: "conv2d_19/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/kernel"
      }
    }
  }
}
node {
  name: "conv2d_19/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_19/kernel"
    }
  }
}
node {
  name: "conv2d_19/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_19/kernel"
}
node {
  name: "conv2d_19/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_19/kernel"
  input: "conv2d_19/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_19/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_19/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_19/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_19/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_19/bias"
    }
  }
}
node {
  name: "conv2d_19/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_19/bias"
}
node {
  name: "conv2d_19/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_19/bias"
  input: "conv2d_19/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_19/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_19/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_19/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_19/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_19/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_19/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_19/Conv2D"
  op: "Conv2D"
  input: "activation_18/activation_18/Identity"
  input: "conv2d_19/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_19/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_19/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_19/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_19/Conv2D"
  input: "conv2d_19/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "max_pooling2d_6/MaxPool"
  op: "MaxPool"
  input: "conv2d_19/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
}
node {
  name: "dropout_12/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_12/cond/switch_t"
  op: "Identity"
  input: "dropout_12/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_12/cond/switch_f"
  op: "Identity"
  input: "dropout_12/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_12/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_12/cond/dropout/rate"
  op: "Const"
  input: "^dropout_12/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "dropout_12/cond/dropout/Shape"
  op: "Shape"
  input: "dropout_12/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout_12/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "max_pooling2d_6/MaxPool"
  input: "dropout_12/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@max_pooling2d_6/MaxPool"
      }
    }
  }
}
node {
  name: "dropout_12/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^dropout_12/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_12/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^dropout_12/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_12/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout_12/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout_12/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "dropout_12/cond/dropout/random_uniform/max"
  input: "dropout_12/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_12/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "dropout_12/cond/dropout/random_uniform/RandomUniform"
  input: "dropout_12/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_12/cond/dropout/random_uniform"
  op: "Add"
  input: "dropout_12/cond/dropout/random_uniform/mul"
  input: "dropout_12/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_12/cond/dropout/sub/x"
  op: "Const"
  input: "^dropout_12/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_12/cond/dropout/sub"
  op: "Sub"
  input: "dropout_12/cond/dropout/sub/x"
  input: "dropout_12/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_12/cond/dropout/truediv/x"
  op: "Const"
  input: "^dropout_12/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_12/cond/dropout/truediv"
  op: "RealDiv"
  input: "dropout_12/cond/dropout/truediv/x"
  input: "dropout_12/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_12/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "dropout_12/cond/dropout/random_uniform"
  input: "dropout_12/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_12/cond/dropout/mul"
  op: "Mul"
  input: "dropout_12/cond/dropout/Shape/Switch:1"
  input: "dropout_12/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_12/cond/dropout/Cast"
  op: "Cast"
  input: "dropout_12/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "dropout_12/cond/dropout/mul_1"
  op: "Mul"
  input: "dropout_12/cond/dropout/mul"
  input: "dropout_12/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_12/cond/Identity"
  op: "Identity"
  input: "dropout_12/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_12/cond/Identity/Switch"
  op: "Switch"
  input: "max_pooling2d_6/MaxPool"
  input: "dropout_12/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@max_pooling2d_6/MaxPool"
      }
    }
  }
}
node {
  name: "dropout_12/cond/Merge"
  op: "Merge"
  input: "dropout_12/cond/Identity"
  input: "dropout_12/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_20/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_20/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0833333358168602
      }
    }
  }
}
node {
  name: "conv2d_20/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0833333358168602
      }
    }
  }
}
node {
  name: "conv2d_20/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_20/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_20/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_20/kernel/Initializer/random_uniform/max"
  input: "conv2d_20/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/kernel"
      }
    }
  }
}
node {
  name: "conv2d_20/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_20/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_20/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/kernel"
      }
    }
  }
}
node {
  name: "conv2d_20/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_20/kernel/Initializer/random_uniform/mul"
  input: "conv2d_20/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/kernel"
      }
    }
  }
}
node {
  name: "conv2d_20/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_20/kernel"
    }
  }
}
node {
  name: "conv2d_20/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_20/kernel"
}
node {
  name: "conv2d_20/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_20/kernel"
  input: "conv2d_20/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_20/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_20/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_20/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_20/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_20/bias"
    }
  }
}
node {
  name: "conv2d_20/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_20/bias"
}
node {
  name: "conv2d_20/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_20/bias"
  input: "conv2d_20/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_20/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_20/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_20/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_20/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_20/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_20/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_20/Conv2D"
  op: "Conv2D"
  input: "dropout_12/cond/Merge"
  input: "conv2d_20/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_20/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_20/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_20/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_20/Conv2D"
  input: "conv2d_20/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "activation_19/activation_19/Identity"
  op: "Identity"
  input: "conv2d_20/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_21/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_21/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_21/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_21/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07216878235340118
      }
    }
  }
}
node {
  name: "conv2d_21/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_21/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07216878235340118
      }
    }
  }
}
node {
  name: "conv2d_21/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_21/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_21/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_21/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_21/kernel/Initializer/random_uniform/max"
  input: "conv2d_21/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_21/kernel"
      }
    }
  }
}
node {
  name: "conv2d_21/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_21/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_21/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_21/kernel"
      }
    }
  }
}
node {
  name: "conv2d_21/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_21/kernel/Initializer/random_uniform/mul"
  input: "conv2d_21/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_21/kernel"
      }
    }
  }
}
node {
  name: "conv2d_21/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_21/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_21/kernel"
    }
  }
}
node {
  name: "conv2d_21/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_21/kernel"
}
node {
  name: "conv2d_21/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_21/kernel"
  input: "conv2d_21/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_21/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_21/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_21/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_21/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_21/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_21/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_21/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_21/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_21/bias"
    }
  }
}
node {
  name: "conv2d_21/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_21/bias"
}
node {
  name: "conv2d_21/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_21/bias"
  input: "conv2d_21/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_21/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_21/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_21/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_21/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_21/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_21/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_21/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_21/Conv2D"
  op: "Conv2D"
  input: "activation_19/activation_19/Identity"
  input: "conv2d_21/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_21/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_21/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_21/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_21/Conv2D"
  input: "conv2d_21/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "max_pooling2d_7/MaxPool"
  op: "MaxPool"
  input: "conv2d_21/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 2
        i: 2
      }
    }
  }
}
node {
  name: "dropout_13/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_13/cond/switch_t"
  op: "Identity"
  input: "dropout_13/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_13/cond/switch_f"
  op: "Identity"
  input: "dropout_13/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_13/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_13/cond/dropout/rate"
  op: "Const"
  input: "^dropout_13/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "dropout_13/cond/dropout/Shape"
  op: "Shape"
  input: "dropout_13/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout_13/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "max_pooling2d_7/MaxPool"
  input: "dropout_13/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@max_pooling2d_7/MaxPool"
      }
    }
  }
}
node {
  name: "dropout_13/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^dropout_13/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_13/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^dropout_13/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_13/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout_13/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout_13/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "dropout_13/cond/dropout/random_uniform/max"
  input: "dropout_13/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_13/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "dropout_13/cond/dropout/random_uniform/RandomUniform"
  input: "dropout_13/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_13/cond/dropout/random_uniform"
  op: "Add"
  input: "dropout_13/cond/dropout/random_uniform/mul"
  input: "dropout_13/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_13/cond/dropout/sub/x"
  op: "Const"
  input: "^dropout_13/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_13/cond/dropout/sub"
  op: "Sub"
  input: "dropout_13/cond/dropout/sub/x"
  input: "dropout_13/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_13/cond/dropout/truediv/x"
  op: "Const"
  input: "^dropout_13/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_13/cond/dropout/truediv"
  op: "RealDiv"
  input: "dropout_13/cond/dropout/truediv/x"
  input: "dropout_13/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_13/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "dropout_13/cond/dropout/random_uniform"
  input: "dropout_13/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_13/cond/dropout/mul"
  op: "Mul"
  input: "dropout_13/cond/dropout/Shape/Switch:1"
  input: "dropout_13/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_13/cond/dropout/Cast"
  op: "Cast"
  input: "dropout_13/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "dropout_13/cond/dropout/mul_1"
  op: "Mul"
  input: "dropout_13/cond/dropout/mul"
  input: "dropout_13/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_13/cond/Identity"
  op: "Identity"
  input: "dropout_13/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_13/cond/Identity/Switch"
  op: "Switch"
  input: "max_pooling2d_7/MaxPool"
  input: "dropout_13/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@max_pooling2d_7/MaxPool"
      }
    }
  }
}
node {
  name: "dropout_13/cond/Merge"
  op: "Merge"
  input: "dropout_13/cond/Identity"
  input: "dropout_13/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_22/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_22/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_22/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_22/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0589255653321743
      }
    }
  }
}
node {
  name: "conv2d_22/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_22/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653321743
      }
    }
  }
}
node {
  name: "conv2d_22/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_22/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_22/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_22/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_22/kernel/Initializer/random_uniform/max"
  input: "conv2d_22/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_22/kernel"
      }
    }
  }
}
node {
  name: "conv2d_22/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_22/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_22/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_22/kernel"
      }
    }
  }
}
node {
  name: "conv2d_22/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_22/kernel/Initializer/random_uniform/mul"
  input: "conv2d_22/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_22/kernel"
      }
    }
  }
}
node {
  name: "conv2d_22/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_22/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_22/kernel"
    }
  }
}
node {
  name: "conv2d_22/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_22/kernel"
}
node {
  name: "conv2d_22/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_22/kernel"
  input: "conv2d_22/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_22/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_22/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_22/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_22/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_22/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_22/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_22/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_22/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_22/bias"
    }
  }
}
node {
  name: "conv2d_22/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_22/bias"
}
node {
  name: "conv2d_22/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_22/bias"
  input: "conv2d_22/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_22/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_22/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_22/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_22/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_22/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_22/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_22/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_22/Conv2D"
  op: "Conv2D"
  input: "dropout_13/cond/Merge"
  input: "conv2d_22/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_22/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_22/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_22/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_22/Conv2D"
  input: "conv2d_22/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "activation_20/activation_20/Identity"
  op: "Identity"
  input: "conv2d_22/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_23/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_23/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_23/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_23/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05103103816509247
      }
    }
  }
}
node {
  name: "conv2d_23/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_23/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05103103816509247
      }
    }
  }
}
node {
  name: "conv2d_23/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_23/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_23/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_23/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_23/kernel/Initializer/random_uniform/max"
  input: "conv2d_23/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_23/kernel"
      }
    }
  }
}
node {
  name: "conv2d_23/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_23/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_23/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_23/kernel"
      }
    }
  }
}
node {
  name: "conv2d_23/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_23/kernel/Initializer/random_uniform/mul"
  input: "conv2d_23/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_23/kernel"
      }
    }
  }
}
node {
  name: "conv2d_23/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_23/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_23/kernel"
    }
  }
}
node {
  name: "conv2d_23/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_23/kernel"
}
node {
  name: "conv2d_23/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_23/kernel"
  input: "conv2d_23/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_23/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_23/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_23/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_23/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_23/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_23/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_23/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_23/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_23/bias"
    }
  }
}
node {
  name: "conv2d_23/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_23/bias"
}
node {
  name: "conv2d_23/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_23/bias"
  input: "conv2d_23/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_23/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_23/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_23/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_23/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_23/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_23/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_23/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_23/Conv2D"
  op: "Conv2D"
  input: "activation_20/activation_20/Identity"
  input: "conv2d_23/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_23/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_23/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_23/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_23/Conv2D"
  input: "conv2d_23/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NCHW"
    }
  }
}
node {
  name: "activation_21/activation_21/Identity"
  op: "Identity"
  input: "conv2d_23/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_14/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_14/cond/switch_t"
  op: "Identity"
  input: "dropout_14/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_14/cond/switch_f"
  op: "Identity"
  input: "dropout_14/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_14/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_14/cond/dropout/rate"
  op: "Const"
  input: "^dropout_14/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "dropout_14/cond/dropout/Shape"
  op: "Shape"
  input: "dropout_14/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout_14/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "activation_21/activation_21/Identity"
  input: "dropout_14/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@activation_21/activation_21/Identity"
      }
    }
  }
}
node {
  name: "dropout_14/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^dropout_14/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_14/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^dropout_14/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_14/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout_14/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout_14/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "dropout_14/cond/dropout/random_uniform/max"
  input: "dropout_14/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_14/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "dropout_14/cond/dropout/random_uniform/RandomUniform"
  input: "dropout_14/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_14/cond/dropout/random_uniform"
  op: "Add"
  input: "dropout_14/cond/dropout/random_uniform/mul"
  input: "dropout_14/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_14/cond/dropout/sub/x"
  op: "Const"
  input: "^dropout_14/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_14/cond/dropout/sub"
  op: "Sub"
  input: "dropout_14/cond/dropout/sub/x"
  input: "dropout_14/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_14/cond/dropout/truediv/x"
  op: "Const"
  input: "^dropout_14/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_14/cond/dropout/truediv"
  op: "RealDiv"
  input: "dropout_14/cond/dropout/truediv/x"
  input: "dropout_14/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_14/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "dropout_14/cond/dropout/random_uniform"
  input: "dropout_14/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_14/cond/dropout/mul"
  op: "Mul"
  input: "dropout_14/cond/dropout/Shape/Switch:1"
  input: "dropout_14/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_14/cond/dropout/Cast"
  op: "Cast"
  input: "dropout_14/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "dropout_14/cond/dropout/mul_1"
  op: "Mul"
  input: "dropout_14/cond/dropout/mul"
  input: "dropout_14/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_14/cond/Identity"
  op: "Identity"
  input: "dropout_14/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_14/cond/Identity/Switch"
  op: "Switch"
  input: "activation_21/activation_21/Identity"
  input: "dropout_14/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@activation_21/activation_21/Identity"
      }
    }
  }
}
node {
  name: "dropout_14/cond/Merge"
  op: "Merge"
  input: "dropout_14/cond/Identity"
  input: "dropout_14/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "flatten_3/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "flatten_3/transpose"
  op: "Transpose"
  input: "dropout_14/cond/Merge"
  input: "flatten_3/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "flatten_3/Shape"
  op: "Shape"
  input: "flatten_3/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "flatten_3/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "flatten_3/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "flatten_3/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "flatten_3/strided_slice"
  op: "StridedSlice"
  input: "flatten_3/Shape"
  input: "flatten_3/strided_slice/stack"
  input: "flatten_3/strided_slice/stack_1"
  input: "flatten_3/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "flatten_3/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "flatten_3/Reshape/shape"
  op: "Pack"
  input: "flatten_3/strided_slice"
  input: "flatten_3/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "flatten_3/Reshape"
  op: "Reshape"
  input: "flatten_3/transpose"
  input: "flatten_3/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense_6/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000R\001\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "dense_6/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.00832668598741293
      }
    }
  }
}
node {
  name: "dense_6/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00832668598741293
      }
    }
  }
}
node {
  name: "dense_6/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense_6/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dense_6/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dense_6/kernel/Initializer/random_uniform/max"
  input: "dense_6/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/kernel"
      }
    }
  }
}
node {
  name: "dense_6/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dense_6/kernel/Initializer/random_uniform/RandomUniform"
  input: "dense_6/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/kernel"
      }
    }
  }
}
node {
  name: "dense_6/kernel/Initializer/random_uniform"
  op: "Add"
  input: "dense_6/kernel/Initializer/random_uniform/mul"
  input: "dense_6/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/kernel"
      }
    }
  }
}
node {
  name: "dense_6/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 86528
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_6/kernel"
    }
  }
}
node {
  name: "dense_6/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_6/kernel"
}
node {
  name: "dense_6/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense_6/kernel"
  input: "dense_6/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_6/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_6/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_6/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_6/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_6/bias"
    }
  }
}
node {
  name: "dense_6/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_6/bias"
}
node {
  name: "dense_6/bias/Assign"
  op: "AssignVariableOp"
  input: "dense_6/bias"
  input: "dense_6/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_6/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_6/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_6/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_6/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_6/MatMul"
  op: "MatMul"
  input: "flatten_3/Reshape"
  input: "dense_6/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_6/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_6/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_6/BiasAdd"
  op: "BiasAdd"
  input: "dense_6/MatMul"
  input: "dense_6/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dropout_15/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_15/cond/switch_t"
  op: "Identity"
  input: "dropout_15/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_15/cond/switch_f"
  op: "Identity"
  input: "dropout_15/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_15/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "dropout_15/cond/dropout/rate"
  op: "Const"
  input: "^dropout_15/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "dropout_15/cond/dropout/Shape"
  op: "Shape"
  input: "dropout_15/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout_15/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "dense_6/BiasAdd"
  input: "dropout_15/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/BiasAdd"
      }
    }
  }
}
node {
  name: "dropout_15/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^dropout_15/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dropout_15/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^dropout_15/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_15/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout_15/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout_15/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "dropout_15/cond/dropout/random_uniform/max"
  input: "dropout_15/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_15/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "dropout_15/cond/dropout/random_uniform/RandomUniform"
  input: "dropout_15/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_15/cond/dropout/random_uniform"
  op: "Add"
  input: "dropout_15/cond/dropout/random_uniform/mul"
  input: "dropout_15/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_15/cond/dropout/sub/x"
  op: "Const"
  input: "^dropout_15/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_15/cond/dropout/sub"
  op: "Sub"
  input: "dropout_15/cond/dropout/sub/x"
  input: "dropout_15/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_15/cond/dropout/truediv/x"
  op: "Const"
  input: "^dropout_15/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_15/cond/dropout/truediv"
  op: "RealDiv"
  input: "dropout_15/cond/dropout/truediv/x"
  input: "dropout_15/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_15/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "dropout_15/cond/dropout/random_uniform"
  input: "dropout_15/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_15/cond/dropout/mul"
  op: "Mul"
  input: "dropout_15/cond/dropout/Shape/Switch:1"
  input: "dropout_15/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_15/cond/dropout/Cast"
  op: "Cast"
  input: "dropout_15/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "dropout_15/cond/dropout/mul_1"
  op: "Mul"
  input: "dropout_15/cond/dropout/mul"
  input: "dropout_15/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_15/cond/Identity"
  op: "Identity"
  input: "dropout_15/cond/Identity/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_15/cond/Identity/Switch"
  op: "Switch"
  input: "dense_6/BiasAdd"
  input: "dropout_15/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/BiasAdd"
      }
    }
  }
}
node {
  name: "dropout_15/cond/Merge"
  op: "Merge"
  input: "dropout_15/cond/Identity"
  input: "dropout_15/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "activation_22/activation_22/Identity"
  op: "Identity"
  input: "dropout_15/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_7/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\n\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "dense_7/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.7071067690849304
      }
    }
  }
}
node {
  name: "dense_7/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.7071067690849304
      }
    }
  }
}
node {
  name: "dense_7/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense_7/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dense_7/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dense_7/kernel/Initializer/random_uniform/max"
  input: "dense_7/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_7/kernel"
      }
    }
  }
}
node {
  name: "dense_7/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dense_7/kernel/Initializer/random_uniform/RandomUniform"
  input: "dense_7/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_7/kernel"
      }
    }
  }
}
node {
  name: "dense_7/kernel/Initializer/random_uniform"
  op: "Add"
  input: "dense_7/kernel/Initializer/random_uniform/mul"
  input: "dense_7/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_7/kernel"
      }
    }
  }
}
node {
  name: "dense_7/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_7/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_7/kernel"
    }
  }
}
node {
  name: "dense_7/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_7/kernel"
}
node {
  name: "dense_7/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense_7/kernel"
  input: "dense_7/kernel/Initializer/random_uniform"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_7/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_7/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_7/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_7/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_7/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_7/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_7/bias"
    }
  }
}
node {
  name: "dense_7/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_7/bias"
}
node {
  name: "dense_7/bias/Assign"
  op: "AssignVariableOp"
  input: "dense_7/bias"
  input: "dense_7/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_7/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_7/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_7/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_7/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_7/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_7/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_7/MatMul"
  op: "MatMul"
  input: "activation_22/activation_22/Identity"
  input: "dense_7/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_7/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_7/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_7/BiasAdd"
  op: "BiasAdd"
  input: "dense_7/MatMul"
  input: "dense_7/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "activation_23/Softmax"
  op: "Softmax"
  input: "dense_7/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 127
          }
        }
        string_val: "RMSprop/conv2d/bias/rms"
        string_val: "RMSprop/conv2d/kernel/rms"
        string_val: "RMSprop/conv2d_1/bias/rms"
        string_val: "RMSprop/conv2d_1/kernel/rms"
        string_val: "RMSprop/conv2d_2/bias/rms"
        string_val: "RMSprop/conv2d_2/kernel/rms"
        string_val: "RMSprop/conv2d_3/bias/rms"
        string_val: "RMSprop/conv2d_3/kernel/rms"
        string_val: "RMSprop/conv2d_4/bias/rms"
        string_val: "RMSprop/conv2d_4/kernel/rms"
        string_val: "RMSprop/conv2d_5/bias/rms"
        string_val: "RMSprop/conv2d_5/kernel/rms"
        string_val: "RMSprop/decay"
        string_val: "RMSprop/dense/bias/rms"
        string_val: "RMSprop/dense/kernel/rms"
        string_val: "RMSprop/dense_1/bias/rms"
        string_val: "RMSprop/dense_1/kernel/rms"
        string_val: "RMSprop/iter"
        string_val: "RMSprop/learning_rate"
        string_val: "RMSprop/momentum"
        string_val: "RMSprop/rho"
        string_val: "RMSprop_1/conv2d_10/bias/rms"
        string_val: "RMSprop_1/conv2d_10/kernel/rms"
        string_val: "RMSprop_1/conv2d_11/bias/rms"
        string_val: "RMSprop_1/conv2d_11/kernel/rms"
        string_val: "RMSprop_1/conv2d_6/bias/rms"
        string_val: "RMSprop_1/conv2d_6/kernel/rms"
        string_val: "RMSprop_1/conv2d_7/bias/rms"
        string_val: "RMSprop_1/conv2d_7/kernel/rms"
        string_val: "RMSprop_1/conv2d_8/bias/rms"
        string_val: "RMSprop_1/conv2d_8/kernel/rms"
        string_val: "RMSprop_1/conv2d_9/bias/rms"
        string_val: "RMSprop_1/conv2d_9/kernel/rms"
        string_val: "RMSprop_1/decay"
        string_val: "RMSprop_1/dense_2/bias/rms"
        string_val: "RMSprop_1/dense_2/kernel/rms"
        string_val: "RMSprop_1/dense_3/bias/rms"
        string_val: "RMSprop_1/dense_3/kernel/rms"
        string_val: "RMSprop_1/iter"
        string_val: "RMSprop_1/learning_rate"
        string_val: "RMSprop_1/momentum"
        string_val: "RMSprop_1/rho"
        string_val: "RMSprop_2/conv2d_12/bias/rms"
        string_val: "RMSprop_2/conv2d_12/kernel/rms"
        string_val: "RMSprop_2/conv2d_13/bias/rms"
        string_val: "RMSprop_2/conv2d_13/kernel/rms"
        string_val: "RMSprop_2/conv2d_14/bias/rms"
        string_val: "RMSprop_2/conv2d_14/kernel/rms"
        string_val: "RMSprop_2/conv2d_15/bias/rms"
        string_val: "RMSprop_2/conv2d_15/kernel/rms"
        string_val: "RMSprop_2/conv2d_16/bias/rms"
        string_val: "RMSprop_2/conv2d_16/kernel/rms"
        string_val: "RMSprop_2/conv2d_17/bias/rms"
        string_val: "RMSprop_2/conv2d_17/kernel/rms"
        string_val: "RMSprop_2/decay"
        string_val: "RMSprop_2/dense_4/bias/rms"
        string_val: "RMSprop_2/dense_4/kernel/rms"
        string_val: "RMSprop_2/dense_5/bias/rms"
        string_val: "RMSprop_2/dense_5/kernel/rms"
        string_val: "RMSprop_2/iter"
        string_val: "RMSprop_2/learning_rate"
        string_val: "RMSprop_2/momentum"
        string_val: "RMSprop_2/rho"
        string_val: "conv2d/bias"
        string_val: "conv2d/kernel"
        string_val: "conv2d_1/bias"
        string_val: "conv2d_1/kernel"
        string_val: "conv2d_10/bias"
        string_val: "conv2d_10/kernel"
        string_val: "conv2d_11/bias"
        string_val: "conv2d_11/kernel"
        string_val: "conv2d_12/bias"
        string_val: "conv2d_12/kernel"
        string_val: "conv2d_13/bias"
        string_val: "conv2d_13/kernel"
        string_val: "conv2d_14/bias"
        string_val: "conv2d_14/kernel"
        string_val: "conv2d_15/bias"
        string_val: "conv2d_15/kernel"
        string_val: "conv2d_16/bias"
        string_val: "conv2d_16/kernel"
        string_val: "conv2d_17/bias"
        string_val: "conv2d_17/kernel"
        string_val: "conv2d_18/bias"
        string_val: "conv2d_18/kernel"
        string_val: "conv2d_19/bias"
        string_val: "conv2d_19/kernel"
        string_val: "conv2d_2/bias"
        string_val: "conv2d_2/kernel"
        string_val: "conv2d_20/bias"
        string_val: "conv2d_20/kernel"
        string_val: "conv2d_21/bias"
        string_val: "conv2d_21/kernel"
        string_val: "conv2d_22/bias"
        string_val: "conv2d_22/kernel"
        string_val: "conv2d_23/bias"
        string_val: "conv2d_23/kernel"
        string_val: "conv2d_3/bias"
        string_val: "conv2d_3/kernel"
        string_val: "conv2d_4/bias"
        string_val: "conv2d_4/kernel"
        string_val: "conv2d_5/bias"
        string_val: "conv2d_5/kernel"
        string_val: "conv2d_6/bias"
        string_val: "conv2d_6/kernel"
        string_val: "conv2d_7/bias"
        string_val: "conv2d_7/kernel"
        string_val: "conv2d_8/bias"
        string_val: "conv2d_8/kernel"
        string_val: "conv2d_9/bias"
        string_val: "conv2d_9/kernel"
        string_val: "dense/bias"
        string_val: "dense/kernel"
        string_val: "dense_1/bias"
        string_val: "dense_1/kernel"
        string_val: "dense_2/bias"
        string_val: "dense_2/kernel"
        string_val: "dense_3/bias"
        string_val: "dense_3/kernel"
        string_val: "dense_4/bias"
        string_val: "dense_4/kernel"
        string_val: "dense_5/bias"
        string_val: "dense_5/kernel"
        string_val: "dense_6/bias"
        string_val: "dense_6/kernel"
        string_val: "dense_7/bias"
        string_val: "dense_7/kernel"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 127
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "RMSprop/conv2d/bias/rms/Read/ReadVariableOp"
  input: "RMSprop/conv2d/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop/conv2d_1/bias/rms/Read/ReadVariableOp"
  input: "RMSprop/conv2d_1/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop/conv2d_2/bias/rms/Read/ReadVariableOp"
  input: "RMSprop/conv2d_2/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop/conv2d_3/bias/rms/Read/ReadVariableOp"
  input: "RMSprop/conv2d_3/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop/conv2d_4/bias/rms/Read/ReadVariableOp"
  input: "RMSprop/conv2d_4/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop/conv2d_5/bias/rms/Read/ReadVariableOp"
  input: "RMSprop/conv2d_5/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop/decay/Read/ReadVariableOp"
  input: "RMSprop/dense/bias/rms/Read/ReadVariableOp"
  input: "RMSprop/dense/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop/dense_1/bias/rms/Read/ReadVariableOp"
  input: "RMSprop/dense_1/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop/iter/Read/ReadVariableOp"
  input: "RMSprop/learning_rate/Read/ReadVariableOp"
  input: "RMSprop/momentum/Read/ReadVariableOp"
  input: "RMSprop/rho/Read/ReadVariableOp"
  input: "RMSprop_1/conv2d_10/bias/rms/Read/ReadVariableOp"
  input: "RMSprop_1/conv2d_10/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop_1/conv2d_11/bias/rms/Read/ReadVariableOp"
  input: "RMSprop_1/conv2d_11/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop_1/conv2d_6/bias/rms/Read/ReadVariableOp"
  input: "RMSprop_1/conv2d_6/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop_1/conv2d_7/bias/rms/Read/ReadVariableOp"
  input: "RMSprop_1/conv2d_7/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop_1/conv2d_8/bias/rms/Read/ReadVariableOp"
  input: "RMSprop_1/conv2d_8/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop_1/conv2d_9/bias/rms/Read/ReadVariableOp"
  input: "RMSprop_1/conv2d_9/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop_1/decay/Read/ReadVariableOp"
  input: "RMSprop_1/dense_2/bias/rms/Read/ReadVariableOp"
  input: "RMSprop_1/dense_2/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop_1/dense_3/bias/rms/Read/ReadVariableOp"
  input: "RMSprop_1/dense_3/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop_1/iter/Read/ReadVariableOp"
  input: "RMSprop_1/learning_rate/Read/ReadVariableOp"
  input: "RMSprop_1/momentum/Read/ReadVariableOp"
  input: "RMSprop_1/rho/Read/ReadVariableOp"
  input: "RMSprop_2/conv2d_12/bias/rms/Read/ReadVariableOp"
  input: "RMSprop_2/conv2d_12/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop_2/conv2d_13/bias/rms/Read/ReadVariableOp"
  input: "RMSprop_2/conv2d_13/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop_2/conv2d_14/bias/rms/Read/ReadVariableOp"
  input: "RMSprop_2/conv2d_14/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop_2/conv2d_15/bias/rms/Read/ReadVariableOp"
  input: "RMSprop_2/conv2d_15/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop_2/conv2d_16/bias/rms/Read/ReadVariableOp"
  input: "RMSprop_2/conv2d_16/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop_2/conv2d_17/bias/rms/Read/ReadVariableOp"
  input: "RMSprop_2/conv2d_17/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop_2/decay/Read/ReadVariableOp"
  input: "RMSprop_2/dense_4/bias/rms/Read/ReadVariableOp"
  input: "RMSprop_2/dense_4/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop_2/dense_5/bias/rms/Read/ReadVariableOp"
  input: "RMSprop_2/dense_5/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop_2/iter/Read/ReadVariableOp"
  input: "RMSprop_2/learning_rate/Read/ReadVariableOp"
  input: "RMSprop_2/momentum/Read/ReadVariableOp"
  input: "RMSprop_2/rho/Read/ReadVariableOp"
  input: "conv2d/bias/Read/ReadVariableOp"
  input: "conv2d/kernel/Read/ReadVariableOp"
  input: "conv2d_1/bias/Read/ReadVariableOp"
  input: "conv2d_1/kernel/Read/ReadVariableOp"
  input: "conv2d_10/bias/Read/ReadVariableOp"
  input: "conv2d_10/kernel/Read/ReadVariableOp"
  input: "conv2d_11/bias/Read/ReadVariableOp"
  input: "conv2d_11/kernel/Read/ReadVariableOp"
  input: "conv2d_12/bias/Read/ReadVariableOp"
  input: "conv2d_12/kernel/Read/ReadVariableOp"
  input: "conv2d_13/bias/Read/ReadVariableOp"
  input: "conv2d_13/kernel/Read/ReadVariableOp"
  input: "conv2d_14/bias/Read/ReadVariableOp"
  input: "conv2d_14/kernel/Read/ReadVariableOp"
  input: "conv2d_15/bias/Read/ReadVariableOp"
  input: "conv2d_15/kernel/Read/ReadVariableOp"
  input: "conv2d_16/bias/Read/ReadVariableOp"
  input: "conv2d_16/kernel/Read/ReadVariableOp"
  input: "conv2d_17/bias/Read/ReadVariableOp"
  input: "conv2d_17/kernel/Read/ReadVariableOp"
  input: "conv2d_18/bias/Read/ReadVariableOp"
  input: "conv2d_18/kernel/Read/ReadVariableOp"
  input: "conv2d_19/bias/Read/ReadVariableOp"
  input: "conv2d_19/kernel/Read/ReadVariableOp"
  input: "conv2d_2/bias/Read/ReadVariableOp"
  input: "conv2d_2/kernel/Read/ReadVariableOp"
  input: "conv2d_20/bias/Read/ReadVariableOp"
  input: "conv2d_20/kernel/Read/ReadVariableOp"
  input: "conv2d_21/bias/Read/ReadVariableOp"
  input: "conv2d_21/kernel/Read/ReadVariableOp"
  input: "conv2d_22/bias/Read/ReadVariableOp"
  input: "conv2d_22/kernel/Read/ReadVariableOp"
  input: "conv2d_23/bias/Read/ReadVariableOp"
  input: "conv2d_23/kernel/Read/ReadVariableOp"
  input: "conv2d_3/bias/Read/ReadVariableOp"
  input: "conv2d_3/kernel/Read/ReadVariableOp"
  input: "conv2d_4/bias/Read/ReadVariableOp"
  input: "conv2d_4/kernel/Read/ReadVariableOp"
  input: "conv2d_5/bias/Read/ReadVariableOp"
  input: "conv2d_5/kernel/Read/ReadVariableOp"
  input: "conv2d_6/bias/Read/ReadVariableOp"
  input: "conv2d_6/kernel/Read/ReadVariableOp"
  input: "conv2d_7/bias/Read/ReadVariableOp"
  input: "conv2d_7/kernel/Read/ReadVariableOp"
  input: "conv2d_8/bias/Read/ReadVariableOp"
  input: "conv2d_8/kernel/Read/ReadVariableOp"
  input: "conv2d_9/bias/Read/ReadVariableOp"
  input: "conv2d_9/kernel/Read/ReadVariableOp"
  input: "dense/bias/Read/ReadVariableOp"
  input: "dense/kernel/Read/ReadVariableOp"
  input: "dense_1/bias/Read/ReadVariableOp"
  input: "dense_1/kernel/Read/ReadVariableOp"
  input: "dense_2/bias/Read/ReadVariableOp"
  input: "dense_2/kernel/Read/ReadVariableOp"
  input: "dense_3/bias/Read/ReadVariableOp"
  input: "dense_3/kernel/Read/ReadVariableOp"
  input: "dense_4/bias/Read/ReadVariableOp"
  input: "dense_4/kernel/Read/ReadVariableOp"
  input: "dense_5/bias/Read/ReadVariableOp"
  input: "dense_5/kernel/Read/ReadVariableOp"
  input: "dense_6/bias/Read/ReadVariableOp"
  input: "dense_6/kernel/Read/ReadVariableOp"
  input: "dense_7/bias/Read/ReadVariableOp"
  input: "dense_7/kernel/Read/ReadVariableOp"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 127
          }
        }
        string_val: "RMSprop/conv2d/bias/rms"
        string_val: "RMSprop/conv2d/kernel/rms"
        string_val: "RMSprop/conv2d_1/bias/rms"
        string_val: "RMSprop/conv2d_1/kernel/rms"
        string_val: "RMSprop/conv2d_2/bias/rms"
        string_val: "RMSprop/conv2d_2/kernel/rms"
        string_val: "RMSprop/conv2d_3/bias/rms"
        string_val: "RMSprop/conv2d_3/kernel/rms"
        string_val: "RMSprop/conv2d_4/bias/rms"
        string_val: "RMSprop/conv2d_4/kernel/rms"
        string_val: "RMSprop/conv2d_5/bias/rms"
        string_val: "RMSprop/conv2d_5/kernel/rms"
        string_val: "RMSprop/decay"
        string_val: "RMSprop/dense/bias/rms"
        string_val: "RMSprop/dense/kernel/rms"
        string_val: "RMSprop/dense_1/bias/rms"
        string_val: "RMSprop/dense_1/kernel/rms"
        string_val: "RMSprop/iter"
        string_val: "RMSprop/learning_rate"
        string_val: "RMSprop/momentum"
        string_val: "RMSprop/rho"
        string_val: "RMSprop_1/conv2d_10/bias/rms"
        string_val: "RMSprop_1/conv2d_10/kernel/rms"
        string_val: "RMSprop_1/conv2d_11/bias/rms"
        string_val: "RMSprop_1/conv2d_11/kernel/rms"
        string_val: "RMSprop_1/conv2d_6/bias/rms"
        string_val: "RMSprop_1/conv2d_6/kernel/rms"
        string_val: "RMSprop_1/conv2d_7/bias/rms"
        string_val: "RMSprop_1/conv2d_7/kernel/rms"
        string_val: "RMSprop_1/conv2d_8/bias/rms"
        string_val: "RMSprop_1/conv2d_8/kernel/rms"
        string_val: "RMSprop_1/conv2d_9/bias/rms"
        string_val: "RMSprop_1/conv2d_9/kernel/rms"
        string_val: "RMSprop_1/decay"
        string_val: "RMSprop_1/dense_2/bias/rms"
        string_val: "RMSprop_1/dense_2/kernel/rms"
        string_val: "RMSprop_1/dense_3/bias/rms"
        string_val: "RMSprop_1/dense_3/kernel/rms"
        string_val: "RMSprop_1/iter"
        string_val: "RMSprop_1/learning_rate"
        string_val: "RMSprop_1/momentum"
        string_val: "RMSprop_1/rho"
        string_val: "RMSprop_2/conv2d_12/bias/rms"
        string_val: "RMSprop_2/conv2d_12/kernel/rms"
        string_val: "RMSprop_2/conv2d_13/bias/rms"
        string_val: "RMSprop_2/conv2d_13/kernel/rms"
        string_val: "RMSprop_2/conv2d_14/bias/rms"
        string_val: "RMSprop_2/conv2d_14/kernel/rms"
        string_val: "RMSprop_2/conv2d_15/bias/rms"
        string_val: "RMSprop_2/conv2d_15/kernel/rms"
        string_val: "RMSprop_2/conv2d_16/bias/rms"
        string_val: "RMSprop_2/conv2d_16/kernel/rms"
        string_val: "RMSprop_2/conv2d_17/bias/rms"
        string_val: "RMSprop_2/conv2d_17/kernel/rms"
        string_val: "RMSprop_2/decay"
        string_val: "RMSprop_2/dense_4/bias/rms"
        string_val: "RMSprop_2/dense_4/kernel/rms"
        string_val: "RMSprop_2/dense_5/bias/rms"
        string_val: "RMSprop_2/dense_5/kernel/rms"
        string_val: "RMSprop_2/iter"
        string_val: "RMSprop_2/learning_rate"
        string_val: "RMSprop_2/momentum"
        string_val: "RMSprop_2/rho"
        string_val: "conv2d/bias"
        string_val: "conv2d/kernel"
        string_val: "conv2d_1/bias"
        string_val: "conv2d_1/kernel"
        string_val: "conv2d_10/bias"
        string_val: "conv2d_10/kernel"
        string_val: "conv2d_11/bias"
        string_val: "conv2d_11/kernel"
        string_val: "conv2d_12/bias"
        string_val: "conv2d_12/kernel"
        string_val: "conv2d_13/bias"
        string_val: "conv2d_13/kernel"
        string_val: "conv2d_14/bias"
        string_val: "conv2d_14/kernel"
        string_val: "conv2d_15/bias"
        string_val: "conv2d_15/kernel"
        string_val: "conv2d_16/bias"
        string_val: "conv2d_16/kernel"
        string_val: "conv2d_17/bias"
        string_val: "conv2d_17/kernel"
        string_val: "conv2d_18/bias"
        string_val: "conv2d_18/kernel"
        string_val: "conv2d_19/bias"
        string_val: "conv2d_19/kernel"
        string_val: "conv2d_2/bias"
        string_val: "conv2d_2/kernel"
        string_val: "conv2d_20/bias"
        string_val: "conv2d_20/kernel"
        string_val: "conv2d_21/bias"
        string_val: "conv2d_21/kernel"
        string_val: "conv2d_22/bias"
        string_val: "conv2d_22/kernel"
        string_val: "conv2d_23/bias"
        string_val: "conv2d_23/kernel"
        string_val: "conv2d_3/bias"
        string_val: "conv2d_3/kernel"
        string_val: "conv2d_4/bias"
        string_val: "conv2d_4/kernel"
        string_val: "conv2d_5/bias"
        string_val: "conv2d_5/kernel"
        string_val: "conv2d_6/bias"
        string_val: "conv2d_6/kernel"
        string_val: "conv2d_7/bias"
        string_val: "conv2d_7/kernel"
        string_val: "conv2d_8/bias"
        string_val: "conv2d_8/kernel"
        string_val: "conv2d_9/bias"
        string_val: "conv2d_9/kernel"
        string_val: "dense/bias"
        string_val: "dense/kernel"
        string_val: "dense_1/bias"
        string_val: "dense_1/kernel"
        string_val: "dense_2/bias"
        string_val: "dense_2/kernel"
        string_val: "dense_3/bias"
        string_val: "dense_3/kernel"
        string_val: "dense_4/bias"
        string_val: "dense_4/kernel"
        string_val: "dense_5/bias"
        string_val: "dense_5/kernel"
        string_val: "dense_6/bias"
        string_val: "dense_6/kernel"
        string_val: "dense_7/bias"
        string_val: "dense_7/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 127
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d/bias/rms"
  input: "save/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_1"
  op: "Identity"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d/kernel/rms"
  input: "save/Identity_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_2"
  op: "Identity"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d_1/bias/rms"
  input: "save/Identity_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_3"
  op: "Identity"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d_1/kernel/rms"
  input: "save/Identity_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_4"
  op: "Identity"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d_2/bias/rms"
  input: "save/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_5"
  op: "Identity"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d_2/kernel/rms"
  input: "save/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_6"
  op: "Identity"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d_3/bias/rms"
  input: "save/Identity_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_7"
  op: "Identity"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d_3/kernel/rms"
  input: "save/Identity_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_8"
  op: "Identity"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d_4/bias/rms"
  input: "save/Identity_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_9"
  op: "Identity"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d_4/kernel/rms"
  input: "save/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_10"
  op: "Identity"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d_5/bias/rms"
  input: "save/Identity_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_11"
  op: "Identity"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d_5/kernel/rms"
  input: "save/Identity_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_12"
  op: "Identity"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "RMSprop/decay"
  input: "save/Identity_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_13"
  op: "Identity"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "RMSprop/dense/bias/rms"
  input: "save/Identity_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_14"
  op: "Identity"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "RMSprop/dense/kernel/rms"
  input: "save/Identity_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_15"
  op: "Identity"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "RMSprop/dense_1/bias/rms"
  input: "save/Identity_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_16"
  op: "Identity"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "RMSprop/dense_1/kernel/rms"
  input: "save/Identity_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_17"
  op: "Identity"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save/AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "RMSprop/iter"
  input: "save/Identity_17"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save/Identity_18"
  op: "Identity"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_18"
  op: "AssignVariableOp"
  input: "RMSprop/learning_rate"
  input: "save/Identity_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_19"
  op: "Identity"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_19"
  op: "AssignVariableOp"
  input: "RMSprop/momentum"
  input: "save/Identity_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_20"
  op: "Identity"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_20"
  op: "AssignVariableOp"
  input: "RMSprop/rho"
  input: "save/Identity_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_21"
  op: "Identity"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_21"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_10/bias/rms"
  input: "save/Identity_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_22"
  op: "Identity"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_22"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_10/kernel/rms"
  input: "save/Identity_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_23"
  op: "Identity"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_23"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_11/bias/rms"
  input: "save/Identity_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_24"
  op: "Identity"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_24"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_11/kernel/rms"
  input: "save/Identity_24"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_25"
  op: "Identity"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_25"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_6/bias/rms"
  input: "save/Identity_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_26"
  op: "Identity"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_26"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_6/kernel/rms"
  input: "save/Identity_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_27"
  op: "Identity"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_27"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_7/bias/rms"
  input: "save/Identity_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_28"
  op: "Identity"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_28"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_7/kernel/rms"
  input: "save/Identity_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_29"
  op: "Identity"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_29"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_8/bias/rms"
  input: "save/Identity_29"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_30"
  op: "Identity"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_30"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_8/kernel/rms"
  input: "save/Identity_30"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_31"
  op: "Identity"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_31"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_9/bias/rms"
  input: "save/Identity_31"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_32"
  op: "Identity"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_32"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_9/kernel/rms"
  input: "save/Identity_32"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_33"
  op: "Identity"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_33"
  op: "AssignVariableOp"
  input: "RMSprop_1/decay"
  input: "save/Identity_33"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_34"
  op: "Identity"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_34"
  op: "AssignVariableOp"
  input: "RMSprop_1/dense_2/bias/rms"
  input: "save/Identity_34"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_35"
  op: "Identity"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_35"
  op: "AssignVariableOp"
  input: "RMSprop_1/dense_2/kernel/rms"
  input: "save/Identity_35"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_36"
  op: "Identity"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_36"
  op: "AssignVariableOp"
  input: "RMSprop_1/dense_3/bias/rms"
  input: "save/Identity_36"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_37"
  op: "Identity"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_37"
  op: "AssignVariableOp"
  input: "RMSprop_1/dense_3/kernel/rms"
  input: "save/Identity_37"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_38"
  op: "Identity"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save/AssignVariableOp_38"
  op: "AssignVariableOp"
  input: "RMSprop_1/iter"
  input: "save/Identity_38"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save/Identity_39"
  op: "Identity"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_39"
  op: "AssignVariableOp"
  input: "RMSprop_1/learning_rate"
  input: "save/Identity_39"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_40"
  op: "Identity"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_40"
  op: "AssignVariableOp"
  input: "RMSprop_1/momentum"
  input: "save/Identity_40"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_41"
  op: "Identity"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_41"
  op: "AssignVariableOp"
  input: "RMSprop_1/rho"
  input: "save/Identity_41"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_42"
  op: "Identity"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_42"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_12/bias/rms"
  input: "save/Identity_42"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_43"
  op: "Identity"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_43"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_12/kernel/rms"
  input: "save/Identity_43"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_44"
  op: "Identity"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_44"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_13/bias/rms"
  input: "save/Identity_44"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_45"
  op: "Identity"
  input: "save/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_45"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_13/kernel/rms"
  input: "save/Identity_45"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_46"
  op: "Identity"
  input: "save/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_46"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_14/bias/rms"
  input: "save/Identity_46"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_47"
  op: "Identity"
  input: "save/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_47"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_14/kernel/rms"
  input: "save/Identity_47"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_48"
  op: "Identity"
  input: "save/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_48"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_15/bias/rms"
  input: "save/Identity_48"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_49"
  op: "Identity"
  input: "save/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_49"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_15/kernel/rms"
  input: "save/Identity_49"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_50"
  op: "Identity"
  input: "save/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_50"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_16/bias/rms"
  input: "save/Identity_50"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_51"
  op: "Identity"
  input: "save/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_51"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_16/kernel/rms"
  input: "save/Identity_51"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_52"
  op: "Identity"
  input: "save/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_52"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_17/bias/rms"
  input: "save/Identity_52"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_53"
  op: "Identity"
  input: "save/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_53"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_17/kernel/rms"
  input: "save/Identity_53"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_54"
  op: "Identity"
  input: "save/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_54"
  op: "AssignVariableOp"
  input: "RMSprop_2/decay"
  input: "save/Identity_54"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_55"
  op: "Identity"
  input: "save/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_55"
  op: "AssignVariableOp"
  input: "RMSprop_2/dense_4/bias/rms"
  input: "save/Identity_55"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_56"
  op: "Identity"
  input: "save/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_56"
  op: "AssignVariableOp"
  input: "RMSprop_2/dense_4/kernel/rms"
  input: "save/Identity_56"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_57"
  op: "Identity"
  input: "save/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_57"
  op: "AssignVariableOp"
  input: "RMSprop_2/dense_5/bias/rms"
  input: "save/Identity_57"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_58"
  op: "Identity"
  input: "save/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_58"
  op: "AssignVariableOp"
  input: "RMSprop_2/dense_5/kernel/rms"
  input: "save/Identity_58"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_59"
  op: "Identity"
  input: "save/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save/AssignVariableOp_59"
  op: "AssignVariableOp"
  input: "RMSprop_2/iter"
  input: "save/Identity_59"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save/Identity_60"
  op: "Identity"
  input: "save/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_60"
  op: "AssignVariableOp"
  input: "RMSprop_2/learning_rate"
  input: "save/Identity_60"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_61"
  op: "Identity"
  input: "save/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_61"
  op: "AssignVariableOp"
  input: "RMSprop_2/momentum"
  input: "save/Identity_61"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_62"
  op: "Identity"
  input: "save/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_62"
  op: "AssignVariableOp"
  input: "RMSprop_2/rho"
  input: "save/Identity_62"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_63"
  op: "Identity"
  input: "save/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_63"
  op: "AssignVariableOp"
  input: "conv2d/bias"
  input: "save/Identity_63"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_64"
  op: "Identity"
  input: "save/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_64"
  op: "AssignVariableOp"
  input: "conv2d/kernel"
  input: "save/Identity_64"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_65"
  op: "Identity"
  input: "save/RestoreV2:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_65"
  op: "AssignVariableOp"
  input: "conv2d_1/bias"
  input: "save/Identity_65"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_66"
  op: "Identity"
  input: "save/RestoreV2:66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_66"
  op: "AssignVariableOp"
  input: "conv2d_1/kernel"
  input: "save/Identity_66"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_67"
  op: "Identity"
  input: "save/RestoreV2:67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_67"
  op: "AssignVariableOp"
  input: "conv2d_10/bias"
  input: "save/Identity_67"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_68"
  op: "Identity"
  input: "save/RestoreV2:68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_68"
  op: "AssignVariableOp"
  input: "conv2d_10/kernel"
  input: "save/Identity_68"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_69"
  op: "Identity"
  input: "save/RestoreV2:69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_69"
  op: "AssignVariableOp"
  input: "conv2d_11/bias"
  input: "save/Identity_69"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_70"
  op: "Identity"
  input: "save/RestoreV2:70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_70"
  op: "AssignVariableOp"
  input: "conv2d_11/kernel"
  input: "save/Identity_70"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_71"
  op: "Identity"
  input: "save/RestoreV2:71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_71"
  op: "AssignVariableOp"
  input: "conv2d_12/bias"
  input: "save/Identity_71"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_72"
  op: "Identity"
  input: "save/RestoreV2:72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_72"
  op: "AssignVariableOp"
  input: "conv2d_12/kernel"
  input: "save/Identity_72"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_73"
  op: "Identity"
  input: "save/RestoreV2:73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_73"
  op: "AssignVariableOp"
  input: "conv2d_13/bias"
  input: "save/Identity_73"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_74"
  op: "Identity"
  input: "save/RestoreV2:74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_74"
  op: "AssignVariableOp"
  input: "conv2d_13/kernel"
  input: "save/Identity_74"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_75"
  op: "Identity"
  input: "save/RestoreV2:75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_75"
  op: "AssignVariableOp"
  input: "conv2d_14/bias"
  input: "save/Identity_75"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_76"
  op: "Identity"
  input: "save/RestoreV2:76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_76"
  op: "AssignVariableOp"
  input: "conv2d_14/kernel"
  input: "save/Identity_76"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_77"
  op: "Identity"
  input: "save/RestoreV2:77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_77"
  op: "AssignVariableOp"
  input: "conv2d_15/bias"
  input: "save/Identity_77"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_78"
  op: "Identity"
  input: "save/RestoreV2:78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_78"
  op: "AssignVariableOp"
  input: "conv2d_15/kernel"
  input: "save/Identity_78"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_79"
  op: "Identity"
  input: "save/RestoreV2:79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_79"
  op: "AssignVariableOp"
  input: "conv2d_16/bias"
  input: "save/Identity_79"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_80"
  op: "Identity"
  input: "save/RestoreV2:80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_80"
  op: "AssignVariableOp"
  input: "conv2d_16/kernel"
  input: "save/Identity_80"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_81"
  op: "Identity"
  input: "save/RestoreV2:81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_81"
  op: "AssignVariableOp"
  input: "conv2d_17/bias"
  input: "save/Identity_81"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_82"
  op: "Identity"
  input: "save/RestoreV2:82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_82"
  op: "AssignVariableOp"
  input: "conv2d_17/kernel"
  input: "save/Identity_82"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_83"
  op: "Identity"
  input: "save/RestoreV2:83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_83"
  op: "AssignVariableOp"
  input: "conv2d_18/bias"
  input: "save/Identity_83"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_84"
  op: "Identity"
  input: "save/RestoreV2:84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_84"
  op: "AssignVariableOp"
  input: "conv2d_18/kernel"
  input: "save/Identity_84"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_85"
  op: "Identity"
  input: "save/RestoreV2:85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_85"
  op: "AssignVariableOp"
  input: "conv2d_19/bias"
  input: "save/Identity_85"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_86"
  op: "Identity"
  input: "save/RestoreV2:86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_86"
  op: "AssignVariableOp"
  input: "conv2d_19/kernel"
  input: "save/Identity_86"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_87"
  op: "Identity"
  input: "save/RestoreV2:87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_87"
  op: "AssignVariableOp"
  input: "conv2d_2/bias"
  input: "save/Identity_87"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_88"
  op: "Identity"
  input: "save/RestoreV2:88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_88"
  op: "AssignVariableOp"
  input: "conv2d_2/kernel"
  input: "save/Identity_88"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_89"
  op: "Identity"
  input: "save/RestoreV2:89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_89"
  op: "AssignVariableOp"
  input: "conv2d_20/bias"
  input: "save/Identity_89"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_90"
  op: "Identity"
  input: "save/RestoreV2:90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_90"
  op: "AssignVariableOp"
  input: "conv2d_20/kernel"
  input: "save/Identity_90"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_91"
  op: "Identity"
  input: "save/RestoreV2:91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_91"
  op: "AssignVariableOp"
  input: "conv2d_21/bias"
  input: "save/Identity_91"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_92"
  op: "Identity"
  input: "save/RestoreV2:92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_92"
  op: "AssignVariableOp"
  input: "conv2d_21/kernel"
  input: "save/Identity_92"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_93"
  op: "Identity"
  input: "save/RestoreV2:93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_93"
  op: "AssignVariableOp"
  input: "conv2d_22/bias"
  input: "save/Identity_93"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_94"
  op: "Identity"
  input: "save/RestoreV2:94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_94"
  op: "AssignVariableOp"
  input: "conv2d_22/kernel"
  input: "save/Identity_94"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_95"
  op: "Identity"
  input: "save/RestoreV2:95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_95"
  op: "AssignVariableOp"
  input: "conv2d_23/bias"
  input: "save/Identity_95"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_96"
  op: "Identity"
  input: "save/RestoreV2:96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_96"
  op: "AssignVariableOp"
  input: "conv2d_23/kernel"
  input: "save/Identity_96"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_97"
  op: "Identity"
  input: "save/RestoreV2:97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_97"
  op: "AssignVariableOp"
  input: "conv2d_3/bias"
  input: "save/Identity_97"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_98"
  op: "Identity"
  input: "save/RestoreV2:98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_98"
  op: "AssignVariableOp"
  input: "conv2d_3/kernel"
  input: "save/Identity_98"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_99"
  op: "Identity"
  input: "save/RestoreV2:99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_99"
  op: "AssignVariableOp"
  input: "conv2d_4/bias"
  input: "save/Identity_99"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_100"
  op: "Identity"
  input: "save/RestoreV2:100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_100"
  op: "AssignVariableOp"
  input: "conv2d_4/kernel"
  input: "save/Identity_100"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_101"
  op: "Identity"
  input: "save/RestoreV2:101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_101"
  op: "AssignVariableOp"
  input: "conv2d_5/bias"
  input: "save/Identity_101"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_102"
  op: "Identity"
  input: "save/RestoreV2:102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_102"
  op: "AssignVariableOp"
  input: "conv2d_5/kernel"
  input: "save/Identity_102"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_103"
  op: "Identity"
  input: "save/RestoreV2:103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_103"
  op: "AssignVariableOp"
  input: "conv2d_6/bias"
  input: "save/Identity_103"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_104"
  op: "Identity"
  input: "save/RestoreV2:104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_104"
  op: "AssignVariableOp"
  input: "conv2d_6/kernel"
  input: "save/Identity_104"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_105"
  op: "Identity"
  input: "save/RestoreV2:105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_105"
  op: "AssignVariableOp"
  input: "conv2d_7/bias"
  input: "save/Identity_105"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_106"
  op: "Identity"
  input: "save/RestoreV2:106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_106"
  op: "AssignVariableOp"
  input: "conv2d_7/kernel"
  input: "save/Identity_106"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_107"
  op: "Identity"
  input: "save/RestoreV2:107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_107"
  op: "AssignVariableOp"
  input: "conv2d_8/bias"
  input: "save/Identity_107"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_108"
  op: "Identity"
  input: "save/RestoreV2:108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_108"
  op: "AssignVariableOp"
  input: "conv2d_8/kernel"
  input: "save/Identity_108"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_109"
  op: "Identity"
  input: "save/RestoreV2:109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_109"
  op: "AssignVariableOp"
  input: "conv2d_9/bias"
  input: "save/Identity_109"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_110"
  op: "Identity"
  input: "save/RestoreV2:110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_110"
  op: "AssignVariableOp"
  input: "conv2d_9/kernel"
  input: "save/Identity_110"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_111"
  op: "Identity"
  input: "save/RestoreV2:111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_111"
  op: "AssignVariableOp"
  input: "dense/bias"
  input: "save/Identity_111"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_112"
  op: "Identity"
  input: "save/RestoreV2:112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_112"
  op: "AssignVariableOp"
  input: "dense/kernel"
  input: "save/Identity_112"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_113"
  op: "Identity"
  input: "save/RestoreV2:113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_113"
  op: "AssignVariableOp"
  input: "dense_1/bias"
  input: "save/Identity_113"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_114"
  op: "Identity"
  input: "save/RestoreV2:114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_114"
  op: "AssignVariableOp"
  input: "dense_1/kernel"
  input: "save/Identity_114"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_115"
  op: "Identity"
  input: "save/RestoreV2:115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_115"
  op: "AssignVariableOp"
  input: "dense_2/bias"
  input: "save/Identity_115"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_116"
  op: "Identity"
  input: "save/RestoreV2:116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_116"
  op: "AssignVariableOp"
  input: "dense_2/kernel"
  input: "save/Identity_116"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_117"
  op: "Identity"
  input: "save/RestoreV2:117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_117"
  op: "AssignVariableOp"
  input: "dense_3/bias"
  input: "save/Identity_117"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_118"
  op: "Identity"
  input: "save/RestoreV2:118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_118"
  op: "AssignVariableOp"
  input: "dense_3/kernel"
  input: "save/Identity_118"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_119"
  op: "Identity"
  input: "save/RestoreV2:119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_119"
  op: "AssignVariableOp"
  input: "dense_4/bias"
  input: "save/Identity_119"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_120"
  op: "Identity"
  input: "save/RestoreV2:120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_120"
  op: "AssignVariableOp"
  input: "dense_4/kernel"
  input: "save/Identity_120"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_121"
  op: "Identity"
  input: "save/RestoreV2:121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_121"
  op: "AssignVariableOp"
  input: "dense_5/bias"
  input: "save/Identity_121"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_122"
  op: "Identity"
  input: "save/RestoreV2:122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_122"
  op: "AssignVariableOp"
  input: "dense_5/kernel"
  input: "save/Identity_122"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_123"
  op: "Identity"
  input: "save/RestoreV2:123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_123"
  op: "AssignVariableOp"
  input: "dense_6/bias"
  input: "save/Identity_123"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_124"
  op: "Identity"
  input: "save/RestoreV2:124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_124"
  op: "AssignVariableOp"
  input: "dense_6/kernel"
  input: "save/Identity_124"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_125"
  op: "Identity"
  input: "save/RestoreV2:125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_125"
  op: "AssignVariableOp"
  input: "dense_7/bias"
  input: "save/Identity_125"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_126"
  op: "Identity"
  input: "save/RestoreV2:126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_126"
  op: "AssignVariableOp"
  input: "dense_7/kernel"
  input: "save/Identity_126"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/AssignVariableOp"
  input: "^save/AssignVariableOp_1"
  input: "^save/AssignVariableOp_10"
  input: "^save/AssignVariableOp_100"
  input: "^save/AssignVariableOp_101"
  input: "^save/AssignVariableOp_102"
  input: "^save/AssignVariableOp_103"
  input: "^save/AssignVariableOp_104"
  input: "^save/AssignVariableOp_105"
  input: "^save/AssignVariableOp_106"
  input: "^save/AssignVariableOp_107"
  input: "^save/AssignVariableOp_108"
  input: "^save/AssignVariableOp_109"
  input: "^save/AssignVariableOp_11"
  input: "^save/AssignVariableOp_110"
  input: "^save/AssignVariableOp_111"
  input: "^save/AssignVariableOp_112"
  input: "^save/AssignVariableOp_113"
  input: "^save/AssignVariableOp_114"
  input: "^save/AssignVariableOp_115"
  input: "^save/AssignVariableOp_116"
  input: "^save/AssignVariableOp_117"
  input: "^save/AssignVariableOp_118"
  input: "^save/AssignVariableOp_119"
  input: "^save/AssignVariableOp_12"
  input: "^save/AssignVariableOp_120"
  input: "^save/AssignVariableOp_121"
  input: "^save/AssignVariableOp_122"
  input: "^save/AssignVariableOp_123"
  input: "^save/AssignVariableOp_124"
  input: "^save/AssignVariableOp_125"
  input: "^save/AssignVariableOp_126"
  input: "^save/AssignVariableOp_13"
  input: "^save/AssignVariableOp_14"
  input: "^save/AssignVariableOp_15"
  input: "^save/AssignVariableOp_16"
  input: "^save/AssignVariableOp_17"
  input: "^save/AssignVariableOp_18"
  input: "^save/AssignVariableOp_19"
  input: "^save/AssignVariableOp_2"
  input: "^save/AssignVariableOp_20"
  input: "^save/AssignVariableOp_21"
  input: "^save/AssignVariableOp_22"
  input: "^save/AssignVariableOp_23"
  input: "^save/AssignVariableOp_24"
  input: "^save/AssignVariableOp_25"
  input: "^save/AssignVariableOp_26"
  input: "^save/AssignVariableOp_27"
  input: "^save/AssignVariableOp_28"
  input: "^save/AssignVariableOp_29"
  input: "^save/AssignVariableOp_3"
  input: "^save/AssignVariableOp_30"
  input: "^save/AssignVariableOp_31"
  input: "^save/AssignVariableOp_32"
  input: "^save/AssignVariableOp_33"
  input: "^save/AssignVariableOp_34"
  input: "^save/AssignVariableOp_35"
  input: "^save/AssignVariableOp_36"
  input: "^save/AssignVariableOp_37"
  input: "^save/AssignVariableOp_38"
  input: "^save/AssignVariableOp_39"
  input: "^save/AssignVariableOp_4"
  input: "^save/AssignVariableOp_40"
  input: "^save/AssignVariableOp_41"
  input: "^save/AssignVariableOp_42"
  input: "^save/AssignVariableOp_43"
  input: "^save/AssignVariableOp_44"
  input: "^save/AssignVariableOp_45"
  input: "^save/AssignVariableOp_46"
  input: "^save/AssignVariableOp_47"
  input: "^save/AssignVariableOp_48"
  input: "^save/AssignVariableOp_49"
  input: "^save/AssignVariableOp_5"
  input: "^save/AssignVariableOp_50"
  input: "^save/AssignVariableOp_51"
  input: "^save/AssignVariableOp_52"
  input: "^save/AssignVariableOp_53"
  input: "^save/AssignVariableOp_54"
  input: "^save/AssignVariableOp_55"
  input: "^save/AssignVariableOp_56"
  input: "^save/AssignVariableOp_57"
  input: "^save/AssignVariableOp_58"
  input: "^save/AssignVariableOp_59"
  input: "^save/AssignVariableOp_6"
  input: "^save/AssignVariableOp_60"
  input: "^save/AssignVariableOp_61"
  input: "^save/AssignVariableOp_62"
  input: "^save/AssignVariableOp_63"
  input: "^save/AssignVariableOp_64"
  input: "^save/AssignVariableOp_65"
  input: "^save/AssignVariableOp_66"
  input: "^save/AssignVariableOp_67"
  input: "^save/AssignVariableOp_68"
  input: "^save/AssignVariableOp_69"
  input: "^save/AssignVariableOp_7"
  input: "^save/AssignVariableOp_70"
  input: "^save/AssignVariableOp_71"
  input: "^save/AssignVariableOp_72"
  input: "^save/AssignVariableOp_73"
  input: "^save/AssignVariableOp_74"
  input: "^save/AssignVariableOp_75"
  input: "^save/AssignVariableOp_76"
  input: "^save/AssignVariableOp_77"
  input: "^save/AssignVariableOp_78"
  input: "^save/AssignVariableOp_79"
  input: "^save/AssignVariableOp_8"
  input: "^save/AssignVariableOp_80"
  input: "^save/AssignVariableOp_81"
  input: "^save/AssignVariableOp_82"
  input: "^save/AssignVariableOp_83"
  input: "^save/AssignVariableOp_84"
  input: "^save/AssignVariableOp_85"
  input: "^save/AssignVariableOp_86"
  input: "^save/AssignVariableOp_87"
  input: "^save/AssignVariableOp_88"
  input: "^save/AssignVariableOp_89"
  input: "^save/AssignVariableOp_9"
  input: "^save/AssignVariableOp_90"
  input: "^save/AssignVariableOp_91"
  input: "^save/AssignVariableOp_92"
  input: "^save/AssignVariableOp_93"
  input: "^save/AssignVariableOp_94"
  input: "^save/AssignVariableOp_95"
  input: "^save/AssignVariableOp_96"
  input: "^save/AssignVariableOp_97"
  input: "^save/AssignVariableOp_98"
  input: "^save/AssignVariableOp_99"
}
node {
  name: "VarIsInitializedOp_117"
  op: "VarIsInitializedOp"
  input: "dense_7/bias"
}
node {
  name: "VarIsInitializedOp_118"
  op: "VarIsInitializedOp"
  input: "dense_7/kernel"
}
node {
  name: "VarIsInitializedOp_119"
  op: "VarIsInitializedOp"
  input: "conv2d_20/kernel"
}
node {
  name: "VarIsInitializedOp_120"
  op: "VarIsInitializedOp"
  input: "conv2d_20/bias"
}
node {
  name: "VarIsInitializedOp_121"
  op: "VarIsInitializedOp"
  input: "conv2d_21/kernel"
}
node {
  name: "VarIsInitializedOp_122"
  op: "VarIsInitializedOp"
  input: "conv2d_21/bias"
}
node {
  name: "VarIsInitializedOp_123"
  op: "VarIsInitializedOp"
  input: "conv2d_22/kernel"
}
node {
  name: "VarIsInitializedOp_124"
  op: "VarIsInitializedOp"
  input: "conv2d_22/bias"
}
node {
  name: "VarIsInitializedOp_125"
  op: "VarIsInitializedOp"
  input: "conv2d_19/kernel"
}
node {
  name: "VarIsInitializedOp_126"
  op: "VarIsInitializedOp"
  input: "conv2d_18/bias"
}
node {
  name: "VarIsInitializedOp_127"
  op: "VarIsInitializedOp"
  input: "conv2d_23/kernel"
}
node {
  name: "VarIsInitializedOp_128"
  op: "VarIsInitializedOp"
  input: "conv2d_23/bias"
}
node {
  name: "VarIsInitializedOp_129"
  op: "VarIsInitializedOp"
  input: "conv2d_19/bias"
}
node {
  name: "VarIsInitializedOp_130"
  op: "VarIsInitializedOp"
  input: "conv2d_18/kernel"
}
node {
  name: "VarIsInitializedOp_131"
  op: "VarIsInitializedOp"
  input: "dense_6/bias"
}
node {
  name: "VarIsInitializedOp_132"
  op: "VarIsInitializedOp"
  input: "dense_6/kernel"
}
node {
  name: "init_4"
  op: "NoOp"
  input: "^conv2d_18/bias/Assign"
  input: "^conv2d_18/kernel/Assign"
  input: "^conv2d_19/bias/Assign"
  input: "^conv2d_19/kernel/Assign"
  input: "^conv2d_20/bias/Assign"
  input: "^conv2d_20/kernel/Assign"
  input: "^conv2d_21/bias/Assign"
  input: "^conv2d_21/kernel/Assign"
  input: "^conv2d_22/bias/Assign"
  input: "^conv2d_22/kernel/Assign"
  input: "^conv2d_23/bias/Assign"
  input: "^conv2d_23/kernel/Assign"
  input: "^dense_6/bias/Assign"
  input: "^dense_6/kernel/Assign"
  input: "^dense_7/bias/Assign"
  input: "^dense_7/kernel/Assign"
}
node {
  name: "save_1/filename/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save_1/filename"
  op: "PlaceholderWithDefault"
  input: "save_1/filename/input"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save_1/Const"
  op: "PlaceholderWithDefault"
  input: "save_1/filename"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save_1/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 127
          }
        }
        string_val: "RMSprop/conv2d/bias/rms"
        string_val: "RMSprop/conv2d/kernel/rms"
        string_val: "RMSprop/conv2d_1/bias/rms"
        string_val: "RMSprop/conv2d_1/kernel/rms"
        string_val: "RMSprop/conv2d_2/bias/rms"
        string_val: "RMSprop/conv2d_2/kernel/rms"
        string_val: "RMSprop/conv2d_3/bias/rms"
        string_val: "RMSprop/conv2d_3/kernel/rms"
        string_val: "RMSprop/conv2d_4/bias/rms"
        string_val: "RMSprop/conv2d_4/kernel/rms"
        string_val: "RMSprop/conv2d_5/bias/rms"
        string_val: "RMSprop/conv2d_5/kernel/rms"
        string_val: "RMSprop/decay"
        string_val: "RMSprop/dense/bias/rms"
        string_val: "RMSprop/dense/kernel/rms"
        string_val: "RMSprop/dense_1/bias/rms"
        string_val: "RMSprop/dense_1/kernel/rms"
        string_val: "RMSprop/iter"
        string_val: "RMSprop/learning_rate"
        string_val: "RMSprop/momentum"
        string_val: "RMSprop/rho"
        string_val: "RMSprop_1/conv2d_10/bias/rms"
        string_val: "RMSprop_1/conv2d_10/kernel/rms"
        string_val: "RMSprop_1/conv2d_11/bias/rms"
        string_val: "RMSprop_1/conv2d_11/kernel/rms"
        string_val: "RMSprop_1/conv2d_6/bias/rms"
        string_val: "RMSprop_1/conv2d_6/kernel/rms"
        string_val: "RMSprop_1/conv2d_7/bias/rms"
        string_val: "RMSprop_1/conv2d_7/kernel/rms"
        string_val: "RMSprop_1/conv2d_8/bias/rms"
        string_val: "RMSprop_1/conv2d_8/kernel/rms"
        string_val: "RMSprop_1/conv2d_9/bias/rms"
        string_val: "RMSprop_1/conv2d_9/kernel/rms"
        string_val: "RMSprop_1/decay"
        string_val: "RMSprop_1/dense_2/bias/rms"
        string_val: "RMSprop_1/dense_2/kernel/rms"
        string_val: "RMSprop_1/dense_3/bias/rms"
        string_val: "RMSprop_1/dense_3/kernel/rms"
        string_val: "RMSprop_1/iter"
        string_val: "RMSprop_1/learning_rate"
        string_val: "RMSprop_1/momentum"
        string_val: "RMSprop_1/rho"
        string_val: "RMSprop_2/conv2d_12/bias/rms"
        string_val: "RMSprop_2/conv2d_12/kernel/rms"
        string_val: "RMSprop_2/conv2d_13/bias/rms"
        string_val: "RMSprop_2/conv2d_13/kernel/rms"
        string_val: "RMSprop_2/conv2d_14/bias/rms"
        string_val: "RMSprop_2/conv2d_14/kernel/rms"
        string_val: "RMSprop_2/conv2d_15/bias/rms"
        string_val: "RMSprop_2/conv2d_15/kernel/rms"
        string_val: "RMSprop_2/conv2d_16/bias/rms"
        string_val: "RMSprop_2/conv2d_16/kernel/rms"
        string_val: "RMSprop_2/conv2d_17/bias/rms"
        string_val: "RMSprop_2/conv2d_17/kernel/rms"
        string_val: "RMSprop_2/decay"
        string_val: "RMSprop_2/dense_4/bias/rms"
        string_val: "RMSprop_2/dense_4/kernel/rms"
        string_val: "RMSprop_2/dense_5/bias/rms"
        string_val: "RMSprop_2/dense_5/kernel/rms"
        string_val: "RMSprop_2/iter"
        string_val: "RMSprop_2/learning_rate"
        string_val: "RMSprop_2/momentum"
        string_val: "RMSprop_2/rho"
        string_val: "conv2d/bias"
        string_val: "conv2d/kernel"
        string_val: "conv2d_1/bias"
        string_val: "conv2d_1/kernel"
        string_val: "conv2d_10/bias"
        string_val: "conv2d_10/kernel"
        string_val: "conv2d_11/bias"
        string_val: "conv2d_11/kernel"
        string_val: "conv2d_12/bias"
        string_val: "conv2d_12/kernel"
        string_val: "conv2d_13/bias"
        string_val: "conv2d_13/kernel"
        string_val: "conv2d_14/bias"
        string_val: "conv2d_14/kernel"
        string_val: "conv2d_15/bias"
        string_val: "conv2d_15/kernel"
        string_val: "conv2d_16/bias"
        string_val: "conv2d_16/kernel"
        string_val: "conv2d_17/bias"
        string_val: "conv2d_17/kernel"
        string_val: "conv2d_18/bias"
        string_val: "conv2d_18/kernel"
        string_val: "conv2d_19/bias"
        string_val: "conv2d_19/kernel"
        string_val: "conv2d_2/bias"
        string_val: "conv2d_2/kernel"
        string_val: "conv2d_20/bias"
        string_val: "conv2d_20/kernel"
        string_val: "conv2d_21/bias"
        string_val: "conv2d_21/kernel"
        string_val: "conv2d_22/bias"
        string_val: "conv2d_22/kernel"
        string_val: "conv2d_23/bias"
        string_val: "conv2d_23/kernel"
        string_val: "conv2d_3/bias"
        string_val: "conv2d_3/kernel"
        string_val: "conv2d_4/bias"
        string_val: "conv2d_4/kernel"
        string_val: "conv2d_5/bias"
        string_val: "conv2d_5/kernel"
        string_val: "conv2d_6/bias"
        string_val: "conv2d_6/kernel"
        string_val: "conv2d_7/bias"
        string_val: "conv2d_7/kernel"
        string_val: "conv2d_8/bias"
        string_val: "conv2d_8/kernel"
        string_val: "conv2d_9/bias"
        string_val: "conv2d_9/kernel"
        string_val: "dense/bias"
        string_val: "dense/kernel"
        string_val: "dense_1/bias"
        string_val: "dense_1/kernel"
        string_val: "dense_2/bias"
        string_val: "dense_2/kernel"
        string_val: "dense_3/bias"
        string_val: "dense_3/kernel"
        string_val: "dense_4/bias"
        string_val: "dense_4/kernel"
        string_val: "dense_5/bias"
        string_val: "dense_5/kernel"
        string_val: "dense_6/bias"
        string_val: "dense_6/kernel"
        string_val: "dense_7/bias"
        string_val: "dense_7/kernel"
      }
    }
  }
}
node {
  name: "save_1/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 127
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/SaveV2"
  op: "SaveV2"
  input: "save_1/Const"
  input: "save_1/SaveV2/tensor_names"
  input: "save_1/SaveV2/shape_and_slices"
  input: "RMSprop/conv2d/bias/rms/Read/ReadVariableOp"
  input: "RMSprop/conv2d/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop/conv2d_1/bias/rms/Read/ReadVariableOp"
  input: "RMSprop/conv2d_1/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop/conv2d_2/bias/rms/Read/ReadVariableOp"
  input: "RMSprop/conv2d_2/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop/conv2d_3/bias/rms/Read/ReadVariableOp"
  input: "RMSprop/conv2d_3/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop/conv2d_4/bias/rms/Read/ReadVariableOp"
  input: "RMSprop/conv2d_4/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop/conv2d_5/bias/rms/Read/ReadVariableOp"
  input: "RMSprop/conv2d_5/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop/decay/Read/ReadVariableOp"
  input: "RMSprop/dense/bias/rms/Read/ReadVariableOp"
  input: "RMSprop/dense/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop/dense_1/bias/rms/Read/ReadVariableOp"
  input: "RMSprop/dense_1/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop/iter/Read/ReadVariableOp"
  input: "RMSprop/learning_rate/Read/ReadVariableOp"
  input: "RMSprop/momentum/Read/ReadVariableOp"
  input: "RMSprop/rho/Read/ReadVariableOp"
  input: "RMSprop_1/conv2d_10/bias/rms/Read/ReadVariableOp"
  input: "RMSprop_1/conv2d_10/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop_1/conv2d_11/bias/rms/Read/ReadVariableOp"
  input: "RMSprop_1/conv2d_11/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop_1/conv2d_6/bias/rms/Read/ReadVariableOp"
  input: "RMSprop_1/conv2d_6/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop_1/conv2d_7/bias/rms/Read/ReadVariableOp"
  input: "RMSprop_1/conv2d_7/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop_1/conv2d_8/bias/rms/Read/ReadVariableOp"
  input: "RMSprop_1/conv2d_8/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop_1/conv2d_9/bias/rms/Read/ReadVariableOp"
  input: "RMSprop_1/conv2d_9/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop_1/decay/Read/ReadVariableOp"
  input: "RMSprop_1/dense_2/bias/rms/Read/ReadVariableOp"
  input: "RMSprop_1/dense_2/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop_1/dense_3/bias/rms/Read/ReadVariableOp"
  input: "RMSprop_1/dense_3/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop_1/iter/Read/ReadVariableOp"
  input: "RMSprop_1/learning_rate/Read/ReadVariableOp"
  input: "RMSprop_1/momentum/Read/ReadVariableOp"
  input: "RMSprop_1/rho/Read/ReadVariableOp"
  input: "RMSprop_2/conv2d_12/bias/rms/Read/ReadVariableOp"
  input: "RMSprop_2/conv2d_12/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop_2/conv2d_13/bias/rms/Read/ReadVariableOp"
  input: "RMSprop_2/conv2d_13/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop_2/conv2d_14/bias/rms/Read/ReadVariableOp"
  input: "RMSprop_2/conv2d_14/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop_2/conv2d_15/bias/rms/Read/ReadVariableOp"
  input: "RMSprop_2/conv2d_15/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop_2/conv2d_16/bias/rms/Read/ReadVariableOp"
  input: "RMSprop_2/conv2d_16/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop_2/conv2d_17/bias/rms/Read/ReadVariableOp"
  input: "RMSprop_2/conv2d_17/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop_2/decay/Read/ReadVariableOp"
  input: "RMSprop_2/dense_4/bias/rms/Read/ReadVariableOp"
  input: "RMSprop_2/dense_4/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop_2/dense_5/bias/rms/Read/ReadVariableOp"
  input: "RMSprop_2/dense_5/kernel/rms/Read/ReadVariableOp"
  input: "RMSprop_2/iter/Read/ReadVariableOp"
  input: "RMSprop_2/learning_rate/Read/ReadVariableOp"
  input: "RMSprop_2/momentum/Read/ReadVariableOp"
  input: "RMSprop_2/rho/Read/ReadVariableOp"
  input: "conv2d/bias/Read/ReadVariableOp"
  input: "conv2d/kernel/Read/ReadVariableOp"
  input: "conv2d_1/bias/Read/ReadVariableOp"
  input: "conv2d_1/kernel/Read/ReadVariableOp"
  input: "conv2d_10/bias/Read/ReadVariableOp"
  input: "conv2d_10/kernel/Read/ReadVariableOp"
  input: "conv2d_11/bias/Read/ReadVariableOp"
  input: "conv2d_11/kernel/Read/ReadVariableOp"
  input: "conv2d_12/bias/Read/ReadVariableOp"
  input: "conv2d_12/kernel/Read/ReadVariableOp"
  input: "conv2d_13/bias/Read/ReadVariableOp"
  input: "conv2d_13/kernel/Read/ReadVariableOp"
  input: "conv2d_14/bias/Read/ReadVariableOp"
  input: "conv2d_14/kernel/Read/ReadVariableOp"
  input: "conv2d_15/bias/Read/ReadVariableOp"
  input: "conv2d_15/kernel/Read/ReadVariableOp"
  input: "conv2d_16/bias/Read/ReadVariableOp"
  input: "conv2d_16/kernel/Read/ReadVariableOp"
  input: "conv2d_17/bias/Read/ReadVariableOp"
  input: "conv2d_17/kernel/Read/ReadVariableOp"
  input: "conv2d_18/bias/Read/ReadVariableOp"
  input: "conv2d_18/kernel/Read/ReadVariableOp"
  input: "conv2d_19/bias/Read/ReadVariableOp"
  input: "conv2d_19/kernel/Read/ReadVariableOp"
  input: "conv2d_2/bias/Read/ReadVariableOp"
  input: "conv2d_2/kernel/Read/ReadVariableOp"
  input: "conv2d_20/bias/Read/ReadVariableOp"
  input: "conv2d_20/kernel/Read/ReadVariableOp"
  input: "conv2d_21/bias/Read/ReadVariableOp"
  input: "conv2d_21/kernel/Read/ReadVariableOp"
  input: "conv2d_22/bias/Read/ReadVariableOp"
  input: "conv2d_22/kernel/Read/ReadVariableOp"
  input: "conv2d_23/bias/Read/ReadVariableOp"
  input: "conv2d_23/kernel/Read/ReadVariableOp"
  input: "conv2d_3/bias/Read/ReadVariableOp"
  input: "conv2d_3/kernel/Read/ReadVariableOp"
  input: "conv2d_4/bias/Read/ReadVariableOp"
  input: "conv2d_4/kernel/Read/ReadVariableOp"
  input: "conv2d_5/bias/Read/ReadVariableOp"
  input: "conv2d_5/kernel/Read/ReadVariableOp"
  input: "conv2d_6/bias/Read/ReadVariableOp"
  input: "conv2d_6/kernel/Read/ReadVariableOp"
  input: "conv2d_7/bias/Read/ReadVariableOp"
  input: "conv2d_7/kernel/Read/ReadVariableOp"
  input: "conv2d_8/bias/Read/ReadVariableOp"
  input: "conv2d_8/kernel/Read/ReadVariableOp"
  input: "conv2d_9/bias/Read/ReadVariableOp"
  input: "conv2d_9/kernel/Read/ReadVariableOp"
  input: "dense/bias/Read/ReadVariableOp"
  input: "dense/kernel/Read/ReadVariableOp"
  input: "dense_1/bias/Read/ReadVariableOp"
  input: "dense_1/kernel/Read/ReadVariableOp"
  input: "dense_2/bias/Read/ReadVariableOp"
  input: "dense_2/kernel/Read/ReadVariableOp"
  input: "dense_3/bias/Read/ReadVariableOp"
  input: "dense_3/kernel/Read/ReadVariableOp"
  input: "dense_4/bias/Read/ReadVariableOp"
  input: "dense_4/kernel/Read/ReadVariableOp"
  input: "dense_5/bias/Read/ReadVariableOp"
  input: "dense_5/kernel/Read/ReadVariableOp"
  input: "dense_6/bias/Read/ReadVariableOp"
  input: "dense_6/kernel/Read/ReadVariableOp"
  input: "dense_7/bias/Read/ReadVariableOp"
  input: "dense_7/kernel/Read/ReadVariableOp"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/control_dependency"
  op: "Identity"
  input: "save_1/Const"
  input: "^save_1/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save_1/Const"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 127
          }
        }
        string_val: "RMSprop/conv2d/bias/rms"
        string_val: "RMSprop/conv2d/kernel/rms"
        string_val: "RMSprop/conv2d_1/bias/rms"
        string_val: "RMSprop/conv2d_1/kernel/rms"
        string_val: "RMSprop/conv2d_2/bias/rms"
        string_val: "RMSprop/conv2d_2/kernel/rms"
        string_val: "RMSprop/conv2d_3/bias/rms"
        string_val: "RMSprop/conv2d_3/kernel/rms"
        string_val: "RMSprop/conv2d_4/bias/rms"
        string_val: "RMSprop/conv2d_4/kernel/rms"
        string_val: "RMSprop/conv2d_5/bias/rms"
        string_val: "RMSprop/conv2d_5/kernel/rms"
        string_val: "RMSprop/decay"
        string_val: "RMSprop/dense/bias/rms"
        string_val: "RMSprop/dense/kernel/rms"
        string_val: "RMSprop/dense_1/bias/rms"
        string_val: "RMSprop/dense_1/kernel/rms"
        string_val: "RMSprop/iter"
        string_val: "RMSprop/learning_rate"
        string_val: "RMSprop/momentum"
        string_val: "RMSprop/rho"
        string_val: "RMSprop_1/conv2d_10/bias/rms"
        string_val: "RMSprop_1/conv2d_10/kernel/rms"
        string_val: "RMSprop_1/conv2d_11/bias/rms"
        string_val: "RMSprop_1/conv2d_11/kernel/rms"
        string_val: "RMSprop_1/conv2d_6/bias/rms"
        string_val: "RMSprop_1/conv2d_6/kernel/rms"
        string_val: "RMSprop_1/conv2d_7/bias/rms"
        string_val: "RMSprop_1/conv2d_7/kernel/rms"
        string_val: "RMSprop_1/conv2d_8/bias/rms"
        string_val: "RMSprop_1/conv2d_8/kernel/rms"
        string_val: "RMSprop_1/conv2d_9/bias/rms"
        string_val: "RMSprop_1/conv2d_9/kernel/rms"
        string_val: "RMSprop_1/decay"
        string_val: "RMSprop_1/dense_2/bias/rms"
        string_val: "RMSprop_1/dense_2/kernel/rms"
        string_val: "RMSprop_1/dense_3/bias/rms"
        string_val: "RMSprop_1/dense_3/kernel/rms"
        string_val: "RMSprop_1/iter"
        string_val: "RMSprop_1/learning_rate"
        string_val: "RMSprop_1/momentum"
        string_val: "RMSprop_1/rho"
        string_val: "RMSprop_2/conv2d_12/bias/rms"
        string_val: "RMSprop_2/conv2d_12/kernel/rms"
        string_val: "RMSprop_2/conv2d_13/bias/rms"
        string_val: "RMSprop_2/conv2d_13/kernel/rms"
        string_val: "RMSprop_2/conv2d_14/bias/rms"
        string_val: "RMSprop_2/conv2d_14/kernel/rms"
        string_val: "RMSprop_2/conv2d_15/bias/rms"
        string_val: "RMSprop_2/conv2d_15/kernel/rms"
        string_val: "RMSprop_2/conv2d_16/bias/rms"
        string_val: "RMSprop_2/conv2d_16/kernel/rms"
        string_val: "RMSprop_2/conv2d_17/bias/rms"
        string_val: "RMSprop_2/conv2d_17/kernel/rms"
        string_val: "RMSprop_2/decay"
        string_val: "RMSprop_2/dense_4/bias/rms"
        string_val: "RMSprop_2/dense_4/kernel/rms"
        string_val: "RMSprop_2/dense_5/bias/rms"
        string_val: "RMSprop_2/dense_5/kernel/rms"
        string_val: "RMSprop_2/iter"
        string_val: "RMSprop_2/learning_rate"
        string_val: "RMSprop_2/momentum"
        string_val: "RMSprop_2/rho"
        string_val: "conv2d/bias"
        string_val: "conv2d/kernel"
        string_val: "conv2d_1/bias"
        string_val: "conv2d_1/kernel"
        string_val: "conv2d_10/bias"
        string_val: "conv2d_10/kernel"
        string_val: "conv2d_11/bias"
        string_val: "conv2d_11/kernel"
        string_val: "conv2d_12/bias"
        string_val: "conv2d_12/kernel"
        string_val: "conv2d_13/bias"
        string_val: "conv2d_13/kernel"
        string_val: "conv2d_14/bias"
        string_val: "conv2d_14/kernel"
        string_val: "conv2d_15/bias"
        string_val: "conv2d_15/kernel"
        string_val: "conv2d_16/bias"
        string_val: "conv2d_16/kernel"
        string_val: "conv2d_17/bias"
        string_val: "conv2d_17/kernel"
        string_val: "conv2d_18/bias"
        string_val: "conv2d_18/kernel"
        string_val: "conv2d_19/bias"
        string_val: "conv2d_19/kernel"
        string_val: "conv2d_2/bias"
        string_val: "conv2d_2/kernel"
        string_val: "conv2d_20/bias"
        string_val: "conv2d_20/kernel"
        string_val: "conv2d_21/bias"
        string_val: "conv2d_21/kernel"
        string_val: "conv2d_22/bias"
        string_val: "conv2d_22/kernel"
        string_val: "conv2d_23/bias"
        string_val: "conv2d_23/kernel"
        string_val: "conv2d_3/bias"
        string_val: "conv2d_3/kernel"
        string_val: "conv2d_4/bias"
        string_val: "conv2d_4/kernel"
        string_val: "conv2d_5/bias"
        string_val: "conv2d_5/kernel"
        string_val: "conv2d_6/bias"
        string_val: "conv2d_6/kernel"
        string_val: "conv2d_7/bias"
        string_val: "conv2d_7/kernel"
        string_val: "conv2d_8/bias"
        string_val: "conv2d_8/kernel"
        string_val: "conv2d_9/bias"
        string_val: "conv2d_9/kernel"
        string_val: "dense/bias"
        string_val: "dense/kernel"
        string_val: "dense_1/bias"
        string_val: "dense_1/kernel"
        string_val: "dense_2/bias"
        string_val: "dense_2/kernel"
        string_val: "dense_3/bias"
        string_val: "dense_3/kernel"
        string_val: "dense_4/bias"
        string_val: "dense_4/kernel"
        string_val: "dense_5/bias"
        string_val: "dense_5/kernel"
        string_val: "dense_6/bias"
        string_val: "dense_6/kernel"
        string_val: "dense_7/bias"
        string_val: "dense_7/kernel"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 127
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2/tensor_names"
  input: "save_1/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Identity"
  op: "Identity"
  input: "save_1/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d/bias/rms"
  input: "save_1/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_1"
  op: "Identity"
  input: "save_1/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d/kernel/rms"
  input: "save_1/Identity_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_2"
  op: "Identity"
  input: "save_1/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d_1/bias/rms"
  input: "save_1/Identity_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_3"
  op: "Identity"
  input: "save_1/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d_1/kernel/rms"
  input: "save_1/Identity_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_4"
  op: "Identity"
  input: "save_1/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d_2/bias/rms"
  input: "save_1/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_5"
  op: "Identity"
  input: "save_1/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d_2/kernel/rms"
  input: "save_1/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_6"
  op: "Identity"
  input: "save_1/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d_3/bias/rms"
  input: "save_1/Identity_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_7"
  op: "Identity"
  input: "save_1/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d_3/kernel/rms"
  input: "save_1/Identity_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_8"
  op: "Identity"
  input: "save_1/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d_4/bias/rms"
  input: "save_1/Identity_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_9"
  op: "Identity"
  input: "save_1/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d_4/kernel/rms"
  input: "save_1/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_10"
  op: "Identity"
  input: "save_1/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d_5/bias/rms"
  input: "save_1/Identity_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_11"
  op: "Identity"
  input: "save_1/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "RMSprop/conv2d_5/kernel/rms"
  input: "save_1/Identity_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_12"
  op: "Identity"
  input: "save_1/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "RMSprop/decay"
  input: "save_1/Identity_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_13"
  op: "Identity"
  input: "save_1/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "RMSprop/dense/bias/rms"
  input: "save_1/Identity_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_14"
  op: "Identity"
  input: "save_1/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "RMSprop/dense/kernel/rms"
  input: "save_1/Identity_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_15"
  op: "Identity"
  input: "save_1/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "RMSprop/dense_1/bias/rms"
  input: "save_1/Identity_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_16"
  op: "Identity"
  input: "save_1/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "RMSprop/dense_1/kernel/rms"
  input: "save_1/Identity_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_17"
  op: "Identity"
  input: "save_1/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save_1/AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "RMSprop/iter"
  input: "save_1/Identity_17"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save_1/Identity_18"
  op: "Identity"
  input: "save_1/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_18"
  op: "AssignVariableOp"
  input: "RMSprop/learning_rate"
  input: "save_1/Identity_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_19"
  op: "Identity"
  input: "save_1/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_19"
  op: "AssignVariableOp"
  input: "RMSprop/momentum"
  input: "save_1/Identity_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_20"
  op: "Identity"
  input: "save_1/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_20"
  op: "AssignVariableOp"
  input: "RMSprop/rho"
  input: "save_1/Identity_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_21"
  op: "Identity"
  input: "save_1/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_21"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_10/bias/rms"
  input: "save_1/Identity_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_22"
  op: "Identity"
  input: "save_1/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_22"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_10/kernel/rms"
  input: "save_1/Identity_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_23"
  op: "Identity"
  input: "save_1/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_23"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_11/bias/rms"
  input: "save_1/Identity_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_24"
  op: "Identity"
  input: "save_1/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_24"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_11/kernel/rms"
  input: "save_1/Identity_24"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_25"
  op: "Identity"
  input: "save_1/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_25"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_6/bias/rms"
  input: "save_1/Identity_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_26"
  op: "Identity"
  input: "save_1/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_26"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_6/kernel/rms"
  input: "save_1/Identity_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_27"
  op: "Identity"
  input: "save_1/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_27"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_7/bias/rms"
  input: "save_1/Identity_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_28"
  op: "Identity"
  input: "save_1/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_28"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_7/kernel/rms"
  input: "save_1/Identity_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_29"
  op: "Identity"
  input: "save_1/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_29"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_8/bias/rms"
  input: "save_1/Identity_29"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_30"
  op: "Identity"
  input: "save_1/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_30"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_8/kernel/rms"
  input: "save_1/Identity_30"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_31"
  op: "Identity"
  input: "save_1/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_31"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_9/bias/rms"
  input: "save_1/Identity_31"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_32"
  op: "Identity"
  input: "save_1/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_32"
  op: "AssignVariableOp"
  input: "RMSprop_1/conv2d_9/kernel/rms"
  input: "save_1/Identity_32"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_33"
  op: "Identity"
  input: "save_1/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_33"
  op: "AssignVariableOp"
  input: "RMSprop_1/decay"
  input: "save_1/Identity_33"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_34"
  op: "Identity"
  input: "save_1/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_34"
  op: "AssignVariableOp"
  input: "RMSprop_1/dense_2/bias/rms"
  input: "save_1/Identity_34"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_35"
  op: "Identity"
  input: "save_1/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_35"
  op: "AssignVariableOp"
  input: "RMSprop_1/dense_2/kernel/rms"
  input: "save_1/Identity_35"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_36"
  op: "Identity"
  input: "save_1/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_36"
  op: "AssignVariableOp"
  input: "RMSprop_1/dense_3/bias/rms"
  input: "save_1/Identity_36"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_37"
  op: "Identity"
  input: "save_1/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_37"
  op: "AssignVariableOp"
  input: "RMSprop_1/dense_3/kernel/rms"
  input: "save_1/Identity_37"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_38"
  op: "Identity"
  input: "save_1/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save_1/AssignVariableOp_38"
  op: "AssignVariableOp"
  input: "RMSprop_1/iter"
  input: "save_1/Identity_38"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save_1/Identity_39"
  op: "Identity"
  input: "save_1/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_39"
  op: "AssignVariableOp"
  input: "RMSprop_1/learning_rate"
  input: "save_1/Identity_39"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_40"
  op: "Identity"
  input: "save_1/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_40"
  op: "AssignVariableOp"
  input: "RMSprop_1/momentum"
  input: "save_1/Identity_40"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_41"
  op: "Identity"
  input: "save_1/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_41"
  op: "AssignVariableOp"
  input: "RMSprop_1/rho"
  input: "save_1/Identity_41"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_42"
  op: "Identity"
  input: "save_1/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_42"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_12/bias/rms"
  input: "save_1/Identity_42"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_43"
  op: "Identity"
  input: "save_1/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_43"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_12/kernel/rms"
  input: "save_1/Identity_43"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_44"
  op: "Identity"
  input: "save_1/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_44"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_13/bias/rms"
  input: "save_1/Identity_44"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_45"
  op: "Identity"
  input: "save_1/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_45"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_13/kernel/rms"
  input: "save_1/Identity_45"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_46"
  op: "Identity"
  input: "save_1/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_46"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_14/bias/rms"
  input: "save_1/Identity_46"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_47"
  op: "Identity"
  input: "save_1/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_47"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_14/kernel/rms"
  input: "save_1/Identity_47"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_48"
  op: "Identity"
  input: "save_1/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_48"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_15/bias/rms"
  input: "save_1/Identity_48"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_49"
  op: "Identity"
  input: "save_1/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_49"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_15/kernel/rms"
  input: "save_1/Identity_49"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_50"
  op: "Identity"
  input: "save_1/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_50"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_16/bias/rms"
  input: "save_1/Identity_50"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_51"
  op: "Identity"
  input: "save_1/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_51"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_16/kernel/rms"
  input: "save_1/Identity_51"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_52"
  op: "Identity"
  input: "save_1/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_52"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_17/bias/rms"
  input: "save_1/Identity_52"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_53"
  op: "Identity"
  input: "save_1/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_53"
  op: "AssignVariableOp"
  input: "RMSprop_2/conv2d_17/kernel/rms"
  input: "save_1/Identity_53"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_54"
  op: "Identity"
  input: "save_1/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_54"
  op: "AssignVariableOp"
  input: "RMSprop_2/decay"
  input: "save_1/Identity_54"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_55"
  op: "Identity"
  input: "save_1/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_55"
  op: "AssignVariableOp"
  input: "RMSprop_2/dense_4/bias/rms"
  input: "save_1/Identity_55"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_56"
  op: "Identity"
  input: "save_1/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_56"
  op: "AssignVariableOp"
  input: "RMSprop_2/dense_4/kernel/rms"
  input: "save_1/Identity_56"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_57"
  op: "Identity"
  input: "save_1/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_57"
  op: "AssignVariableOp"
  input: "RMSprop_2/dense_5/bias/rms"
  input: "save_1/Identity_57"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_58"
  op: "Identity"
  input: "save_1/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_58"
  op: "AssignVariableOp"
  input: "RMSprop_2/dense_5/kernel/rms"
  input: "save_1/Identity_58"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_59"
  op: "Identity"
  input: "save_1/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save_1/AssignVariableOp_59"
  op: "AssignVariableOp"
  input: "RMSprop_2/iter"
  input: "save_1/Identity_59"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save_1/Identity_60"
  op: "Identity"
  input: "save_1/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_60"
  op: "AssignVariableOp"
  input: "RMSprop_2/learning_rate"
  input: "save_1/Identity_60"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_61"
  op: "Identity"
  input: "save_1/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_61"
  op: "AssignVariableOp"
  input: "RMSprop_2/momentum"
  input: "save_1/Identity_61"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_62"
  op: "Identity"
  input: "save_1/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_62"
  op: "AssignVariableOp"
  input: "RMSprop_2/rho"
  input: "save_1/Identity_62"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_63"
  op: "Identity"
  input: "save_1/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_63"
  op: "AssignVariableOp"
  input: "conv2d/bias"
  input: "save_1/Identity_63"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_64"
  op: "Identity"
  input: "save_1/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_64"
  op: "AssignVariableOp"
  input: "conv2d/kernel"
  input: "save_1/Identity_64"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_65"
  op: "Identity"
  input: "save_1/RestoreV2:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_65"
  op: "AssignVariableOp"
  input: "conv2d_1/bias"
  input: "save_1/Identity_65"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_66"
  op: "Identity"
  input: "save_1/RestoreV2:66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_66"
  op: "AssignVariableOp"
  input: "conv2d_1/kernel"
  input: "save_1/Identity_66"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_67"
  op: "Identity"
  input: "save_1/RestoreV2:67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_67"
  op: "AssignVariableOp"
  input: "conv2d_10/bias"
  input: "save_1/Identity_67"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_68"
  op: "Identity"
  input: "save_1/RestoreV2:68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_68"
  op: "AssignVariableOp"
  input: "conv2d_10/kernel"
  input: "save_1/Identity_68"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_69"
  op: "Identity"
  input: "save_1/RestoreV2:69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_69"
  op: "AssignVariableOp"
  input: "conv2d_11/bias"
  input: "save_1/Identity_69"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_70"
  op: "Identity"
  input: "save_1/RestoreV2:70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_70"
  op: "AssignVariableOp"
  input: "conv2d_11/kernel"
  input: "save_1/Identity_70"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_71"
  op: "Identity"
  input: "save_1/RestoreV2:71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_71"
  op: "AssignVariableOp"
  input: "conv2d_12/bias"
  input: "save_1/Identity_71"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_72"
  op: "Identity"
  input: "save_1/RestoreV2:72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_72"
  op: "AssignVariableOp"
  input: "conv2d_12/kernel"
  input: "save_1/Identity_72"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_73"
  op: "Identity"
  input: "save_1/RestoreV2:73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_73"
  op: "AssignVariableOp"
  input: "conv2d_13/bias"
  input: "save_1/Identity_73"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_74"
  op: "Identity"
  input: "save_1/RestoreV2:74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_74"
  op: "AssignVariableOp"
  input: "conv2d_13/kernel"
  input: "save_1/Identity_74"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_75"
  op: "Identity"
  input: "save_1/RestoreV2:75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_75"
  op: "AssignVariableOp"
  input: "conv2d_14/bias"
  input: "save_1/Identity_75"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_76"
  op: "Identity"
  input: "save_1/RestoreV2:76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_76"
  op: "AssignVariableOp"
  input: "conv2d_14/kernel"
  input: "save_1/Identity_76"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_77"
  op: "Identity"
  input: "save_1/RestoreV2:77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_77"
  op: "AssignVariableOp"
  input: "conv2d_15/bias"
  input: "save_1/Identity_77"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_78"
  op: "Identity"
  input: "save_1/RestoreV2:78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_78"
  op: "AssignVariableOp"
  input: "conv2d_15/kernel"
  input: "save_1/Identity_78"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_79"
  op: "Identity"
  input: "save_1/RestoreV2:79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_79"
  op: "AssignVariableOp"
  input: "conv2d_16/bias"
  input: "save_1/Identity_79"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_80"
  op: "Identity"
  input: "save_1/RestoreV2:80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_80"
  op: "AssignVariableOp"
  input: "conv2d_16/kernel"
  input: "save_1/Identity_80"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_81"
  op: "Identity"
  input: "save_1/RestoreV2:81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_81"
  op: "AssignVariableOp"
  input: "conv2d_17/bias"
  input: "save_1/Identity_81"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_82"
  op: "Identity"
  input: "save_1/RestoreV2:82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_82"
  op: "AssignVariableOp"
  input: "conv2d_17/kernel"
  input: "save_1/Identity_82"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_83"
  op: "Identity"
  input: "save_1/RestoreV2:83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_83"
  op: "AssignVariableOp"
  input: "conv2d_18/bias"
  input: "save_1/Identity_83"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_84"
  op: "Identity"
  input: "save_1/RestoreV2:84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_84"
  op: "AssignVariableOp"
  input: "conv2d_18/kernel"
  input: "save_1/Identity_84"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_85"
  op: "Identity"
  input: "save_1/RestoreV2:85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_85"
  op: "AssignVariableOp"
  input: "conv2d_19/bias"
  input: "save_1/Identity_85"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_86"
  op: "Identity"
  input: "save_1/RestoreV2:86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_86"
  op: "AssignVariableOp"
  input: "conv2d_19/kernel"
  input: "save_1/Identity_86"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_87"
  op: "Identity"
  input: "save_1/RestoreV2:87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_87"
  op: "AssignVariableOp"
  input: "conv2d_2/bias"
  input: "save_1/Identity_87"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_88"
  op: "Identity"
  input: "save_1/RestoreV2:88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_88"
  op: "AssignVariableOp"
  input: "conv2d_2/kernel"
  input: "save_1/Identity_88"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_89"
  op: "Identity"
  input: "save_1/RestoreV2:89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_89"
  op: "AssignVariableOp"
  input: "conv2d_20/bias"
  input: "save_1/Identity_89"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_90"
  op: "Identity"
  input: "save_1/RestoreV2:90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_90"
  op: "AssignVariableOp"
  input: "conv2d_20/kernel"
  input: "save_1/Identity_90"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_91"
  op: "Identity"
  input: "save_1/RestoreV2:91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_91"
  op: "AssignVariableOp"
  input: "conv2d_21/bias"
  input: "save_1/Identity_91"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_92"
  op: "Identity"
  input: "save_1/RestoreV2:92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_92"
  op: "AssignVariableOp"
  input: "conv2d_21/kernel"
  input: "save_1/Identity_92"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_93"
  op: "Identity"
  input: "save_1/RestoreV2:93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_93"
  op: "AssignVariableOp"
  input: "conv2d_22/bias"
  input: "save_1/Identity_93"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_94"
  op: "Identity"
  input: "save_1/RestoreV2:94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_94"
  op: "AssignVariableOp"
  input: "conv2d_22/kernel"
  input: "save_1/Identity_94"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_95"
  op: "Identity"
  input: "save_1/RestoreV2:95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_95"
  op: "AssignVariableOp"
  input: "conv2d_23/bias"
  input: "save_1/Identity_95"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_96"
  op: "Identity"
  input: "save_1/RestoreV2:96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_96"
  op: "AssignVariableOp"
  input: "conv2d_23/kernel"
  input: "save_1/Identity_96"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_97"
  op: "Identity"
  input: "save_1/RestoreV2:97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_97"
  op: "AssignVariableOp"
  input: "conv2d_3/bias"
  input: "save_1/Identity_97"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_98"
  op: "Identity"
  input: "save_1/RestoreV2:98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_98"
  op: "AssignVariableOp"
  input: "conv2d_3/kernel"
  input: "save_1/Identity_98"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_99"
  op: "Identity"
  input: "save_1/RestoreV2:99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_99"
  op: "AssignVariableOp"
  input: "conv2d_4/bias"
  input: "save_1/Identity_99"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_100"
  op: "Identity"
  input: "save_1/RestoreV2:100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_100"
  op: "AssignVariableOp"
  input: "conv2d_4/kernel"
  input: "save_1/Identity_100"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_101"
  op: "Identity"
  input: "save_1/RestoreV2:101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_101"
  op: "AssignVariableOp"
  input: "conv2d_5/bias"
  input: "save_1/Identity_101"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_102"
  op: "Identity"
  input: "save_1/RestoreV2:102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_102"
  op: "AssignVariableOp"
  input: "conv2d_5/kernel"
  input: "save_1/Identity_102"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_103"
  op: "Identity"
  input: "save_1/RestoreV2:103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_103"
  op: "AssignVariableOp"
  input: "conv2d_6/bias"
  input: "save_1/Identity_103"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_104"
  op: "Identity"
  input: "save_1/RestoreV2:104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_104"
  op: "AssignVariableOp"
  input: "conv2d_6/kernel"
  input: "save_1/Identity_104"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_105"
  op: "Identity"
  input: "save_1/RestoreV2:105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_105"
  op: "AssignVariableOp"
  input: "conv2d_7/bias"
  input: "save_1/Identity_105"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_106"
  op: "Identity"
  input: "save_1/RestoreV2:106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_106"
  op: "AssignVariableOp"
  input: "conv2d_7/kernel"
  input: "save_1/Identity_106"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_107"
  op: "Identity"
  input: "save_1/RestoreV2:107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_107"
  op: "AssignVariableOp"
  input: "conv2d_8/bias"
  input: "save_1/Identity_107"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_108"
  op: "Identity"
  input: "save_1/RestoreV2:108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_108"
  op: "AssignVariableOp"
  input: "conv2d_8/kernel"
  input: "save_1/Identity_108"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_109"
  op: "Identity"
  input: "save_1/RestoreV2:109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_109"
  op: "AssignVariableOp"
  input: "conv2d_9/bias"
  input: "save_1/Identity_109"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_110"
  op: "Identity"
  input: "save_1/RestoreV2:110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_110"
  op: "AssignVariableOp"
  input: "conv2d_9/kernel"
  input: "save_1/Identity_110"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_111"
  op: "Identity"
  input: "save_1/RestoreV2:111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_111"
  op: "AssignVariableOp"
  input: "dense/bias"
  input: "save_1/Identity_111"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_112"
  op: "Identity"
  input: "save_1/RestoreV2:112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_112"
  op: "AssignVariableOp"
  input: "dense/kernel"
  input: "save_1/Identity_112"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_113"
  op: "Identity"
  input: "save_1/RestoreV2:113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_113"
  op: "AssignVariableOp"
  input: "dense_1/bias"
  input: "save_1/Identity_113"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_114"
  op: "Identity"
  input: "save_1/RestoreV2:114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_114"
  op: "AssignVariableOp"
  input: "dense_1/kernel"
  input: "save_1/Identity_114"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_115"
  op: "Identity"
  input: "save_1/RestoreV2:115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_115"
  op: "AssignVariableOp"
  input: "dense_2/bias"
  input: "save_1/Identity_115"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_116"
  op: "Identity"
  input: "save_1/RestoreV2:116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_116"
  op: "AssignVariableOp"
  input: "dense_2/kernel"
  input: "save_1/Identity_116"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_117"
  op: "Identity"
  input: "save_1/RestoreV2:117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_117"
  op: "AssignVariableOp"
  input: "dense_3/bias"
  input: "save_1/Identity_117"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_118"
  op: "Identity"
  input: "save_1/RestoreV2:118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_118"
  op: "AssignVariableOp"
  input: "dense_3/kernel"
  input: "save_1/Identity_118"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_119"
  op: "Identity"
  input: "save_1/RestoreV2:119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_119"
  op: "AssignVariableOp"
  input: "dense_4/bias"
  input: "save_1/Identity_119"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_120"
  op: "Identity"
  input: "save_1/RestoreV2:120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_120"
  op: "AssignVariableOp"
  input: "dense_4/kernel"
  input: "save_1/Identity_120"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_121"
  op: "Identity"
  input: "save_1/RestoreV2:121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_121"
  op: "AssignVariableOp"
  input: "dense_5/bias"
  input: "save_1/Identity_121"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_122"
  op: "Identity"
  input: "save_1/RestoreV2:122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_122"
  op: "AssignVariableOp"
  input: "dense_5/kernel"
  input: "save_1/Identity_122"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_123"
  op: "Identity"
  input: "save_1/RestoreV2:123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_123"
  op: "AssignVariableOp"
  input: "dense_6/bias"
  input: "save_1/Identity_123"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_124"
  op: "Identity"
  input: "save_1/RestoreV2:124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_124"
  op: "AssignVariableOp"
  input: "dense_6/kernel"
  input: "save_1/Identity_124"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_125"
  op: "Identity"
  input: "save_1/RestoreV2:125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_125"
  op: "AssignVariableOp"
  input: "dense_7/bias"
  input: "save_1/Identity_125"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_126"
  op: "Identity"
  input: "save_1/RestoreV2:126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_126"
  op: "AssignVariableOp"
  input: "dense_7/kernel"
  input: "save_1/Identity_126"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/restore_all"
  op: "NoOp"
  input: "^save_1/AssignVariableOp"
  input: "^save_1/AssignVariableOp_1"
  input: "^save_1/AssignVariableOp_10"
  input: "^save_1/AssignVariableOp_100"
  input: "^save_1/AssignVariableOp_101"
  input: "^save_1/AssignVariableOp_102"
  input: "^save_1/AssignVariableOp_103"
  input: "^save_1/AssignVariableOp_104"
  input: "^save_1/AssignVariableOp_105"
  input: "^save_1/AssignVariableOp_106"
  input: "^save_1/AssignVariableOp_107"
  input: "^save_1/AssignVariableOp_108"
  input: "^save_1/AssignVariableOp_109"
  input: "^save_1/AssignVariableOp_11"
  input: "^save_1/AssignVariableOp_110"
  input: "^save_1/AssignVariableOp_111"
  input: "^save_1/AssignVariableOp_112"
  input: "^save_1/AssignVariableOp_113"
  input: "^save_1/AssignVariableOp_114"
  input: "^save_1/AssignVariableOp_115"
  input: "^save_1/AssignVariableOp_116"
  input: "^save_1/AssignVariableOp_117"
  input: "^save_1/AssignVariableOp_118"
  input: "^save_1/AssignVariableOp_119"
  input: "^save_1/AssignVariableOp_12"
  input: "^save_1/AssignVariableOp_120"
  input: "^save_1/AssignVariableOp_121"
  input: "^save_1/AssignVariableOp_122"
  input: "^save_1/AssignVariableOp_123"
  input: "^save_1/AssignVariableOp_124"
  input: "^save_1/AssignVariableOp_125"
  input: "^save_1/AssignVariableOp_126"
  input: "^save_1/AssignVariableOp_13"
  input: "^save_1/AssignVariableOp_14"
  input: "^save_1/AssignVariableOp_15"
  input: "^save_1/AssignVariableOp_16"
  input: "^save_1/AssignVariableOp_17"
  input: "^save_1/AssignVariableOp_18"
  input: "^save_1/AssignVariableOp_19"
  input: "^save_1/AssignVariableOp_2"
  input: "^save_1/AssignVariableOp_20"
  input: "^save_1/AssignVariableOp_21"
  input: "^save_1/AssignVariableOp_22"
  input: "^save_1/AssignVariableOp_23"
  input: "^save_1/AssignVariableOp_24"
  input: "^save_1/AssignVariableOp_25"
  input: "^save_1/AssignVariableOp_26"
  input: "^save_1/AssignVariableOp_27"
  input: "^save_1/AssignVariableOp_28"
  input: "^save_1/AssignVariableOp_29"
  input: "^save_1/AssignVariableOp_3"
  input: "^save_1/AssignVariableOp_30"
  input: "^save_1/AssignVariableOp_31"
  input: "^save_1/AssignVariableOp_32"
  input: "^save_1/AssignVariableOp_33"
  input: "^save_1/AssignVariableOp_34"
  input: "^save_1/AssignVariableOp_35"
  input: "^save_1/AssignVariableOp_36"
  input: "^save_1/AssignVariableOp_37"
  input: "^save_1/AssignVariableOp_38"
  input: "^save_1/AssignVariableOp_39"
  input: "^save_1/AssignVariableOp_4"
  input: "^save_1/AssignVariableOp_40"
  input: "^save_1/AssignVariableOp_41"
  input: "^save_1/AssignVariableOp_42"
  input: "^save_1/AssignVariableOp_43"
  input: "^save_1/AssignVariableOp_44"
  input: "^save_1/AssignVariableOp_45"
  input: "^save_1/AssignVariableOp_46"
  input: "^save_1/AssignVariableOp_47"
  input: "^save_1/AssignVariableOp_48"
  input: "^save_1/AssignVariableOp_49"
  input: "^save_1/AssignVariableOp_5"
  input: "^save_1/AssignVariableOp_50"
  input: "^save_1/AssignVariableOp_51"
  input: "^save_1/AssignVariableOp_52"
  input: "^save_1/AssignVariableOp_53"
  input: "^save_1/AssignVariableOp_54"
  input: "^save_1/AssignVariableOp_55"
  input: "^save_1/AssignVariableOp_56"
  input: "^save_1/AssignVariableOp_57"
  input: "^save_1/AssignVariableOp_58"
  input: "^save_1/AssignVariableOp_59"
  input: "^save_1/AssignVariableOp_6"
  input: "^save_1/AssignVariableOp_60"
  input: "^save_1/AssignVariableOp_61"
  input: "^save_1/AssignVariableOp_62"
  input: "^save_1/AssignVariableOp_63"
  input: "^save_1/AssignVariableOp_64"
  input: "^save_1/AssignVariableOp_65"
  input: "^save_1/AssignVariableOp_66"
  input: "^save_1/AssignVariableOp_67"
  input: "^save_1/AssignVariableOp_68"
  input: "^save_1/AssignVariableOp_69"
  input: "^save_1/AssignVariableOp_7"
  input: "^save_1/AssignVariableOp_70"
  input: "^save_1/AssignVariableOp_71"
  input: "^save_1/AssignVariableOp_72"
  input: "^save_1/AssignVariableOp_73"
  input: "^save_1/AssignVariableOp_74"
  input: "^save_1/AssignVariableOp_75"
  input: "^save_1/AssignVariableOp_76"
  input: "^save_1/AssignVariableOp_77"
  input: "^save_1/AssignVariableOp_78"
  input: "^save_1/AssignVariableOp_79"
  input: "^save_1/AssignVariableOp_8"
  input: "^save_1/AssignVariableOp_80"
  input: "^save_1/AssignVariableOp_81"
  input: "^save_1/AssignVariableOp_82"
  input: "^save_1/AssignVariableOp_83"
  input: "^save_1/AssignVariableOp_84"
  input: "^save_1/AssignVariableOp_85"
  input: "^save_1/AssignVariableOp_86"
  input: "^save_1/AssignVariableOp_87"
  input: "^save_1/AssignVariableOp_88"
  input: "^save_1/AssignVariableOp_89"
  input: "^save_1/AssignVariableOp_9"
  input: "^save_1/AssignVariableOp_90"
  input: "^save_1/AssignVariableOp_91"
  input: "^save_1/AssignVariableOp_92"
  input: "^save_1/AssignVariableOp_93"
  input: "^save_1/AssignVariableOp_94"
  input: "^save_1/AssignVariableOp_95"
  input: "^save_1/AssignVariableOp_96"
  input: "^save_1/AssignVariableOp_97"
  input: "^save_1/AssignVariableOp_98"
  input: "^save_1/AssignVariableOp_99"
}
versions {
  producer: 38
}
